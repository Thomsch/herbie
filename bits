src/core/bsearch.rkt:   [(<= (ulps->bits (ulp-difference p1 p2 repr)) (*max-bsearch-bits*))
src/core/regimes.rkt:  (define bit-err-lsts* (map (curry map ulps->bits) err-lsts*))
src/float.rkt: ulp-difference ulps->bits
src/float.rkt:(define (ulps->bits x) (log x 2))
src/points.rkt:  (apply (if (flag-set? 'reduce 'avg-error) average max) (map ulps->bits e)))
src/sandbox.rkt:    (for/list ([point points] [err errors]) (list point (format-bits (ulps->bits err))))))
src/web/make-graph.rkt:                              (format-bits (apply max (map ulps->bits start-error)) #:unit #f)
src/web/make-graph.rkt:                              (format-bits (apply max (map ulps->bits end-error)) #:unit #f)))
src/web/pages.rkt:  (define (ulps->bits-tenths x) (string->number (real->decimal-string (ulps->bits x) 1)))
src/web/pages.rkt:  (define start-error (map (lambda (err) (ulps->bits-tenths err)) (test-success-start-error result)))
src/web/pages.rkt:  (define end-error (map (lambda (err) (ulps->bits-tenths err)) 
src/web/pages.rkt:    (map (lambda (err) (ulps->bits-tenths err)) (test-success-target-error result)) #f))
