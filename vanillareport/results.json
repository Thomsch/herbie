{"branch":"oflatt/egg-smol","commit":"2671b7651781db180be1fb6c6db2c3918cceb060","date":1668128865,"flags":["rules:arithmetic","rules:polynomials","rules:fractions","rules:exponents","rules:trigonometry","rules:hyperbolic","rules:numerics","rules:special","rules:bools","rules:branches","generate:rr","generate:taylor","generate:simplify","reduce:regimes","reduce:avg-error","reduce:binary-search","reduce:branch-expressions","setup:simplify","setup:search"],"hostname":"leviathan","iterations":4,"note":false,"points":256,"seed":"0","tests":[{"bits":128,"conversions":[],"cost-accuracy":"((64 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"x","link":"0-x","name":"x","output":"x","pre":"(or (== x 0.0) (== x 10.0))","prec":"binary64","preprocess":"()","spec":"x","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3297.5341796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 13.135914835576243) (39296 0.20477717922762187) ())","end":0.20477717922762187,"end-est":0.22339767502599664,"identifier":"#f","input":"(+ x (- (tan (+ y z)) (tan a)))","link":"1-tanexample","name":"tan-example","output":"(+ x (- (pow (/ (- 1.0 (* (tan y) (tan z))) (+ (tan y) (tan z))) -1.0) (tan a)))","pre":"(and (and (and (or (== x 0.0) (and (<= 0.5884142 x) (<= x 505.5909))) (or (and (<= -1.796658e+308 y) (<= y -9.425585e-310)) (and (<= 1.284938e-309 y) (<= y 1.751224e+308)))) (or (and (<= -1.776707e+308 z) (<= z -8.599796e-310)) (and (<= 3.293145e-311 z) (<= z 1.725154e+308)))) (or (and (<= -1.796658e+308 a) (<= a -9.425585e-310)) (and (<= 1.284938e-309 a) (<= a 1.751224e+308))))","prec":"binary64","preprocess":"()","spec":"(+ x (- (tan (+ y z)) (tan a)))","start":13.135914835576243,"start-est":11.85738473462413,"status":"imp-start","target":false,"target-prog":"#f","time":42768.583984375,"vars":["x","y","z","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 29.968023178121506) (212224 0.9711607788420655) ())","end":0.9711607788420655,"end-est":16.206647078681467,"identifier":"#f","input":"(log (+ (exp a) (exp b)))","link":"2-symmetrylogofsumofexp","name":"symmetry log of sum of exp","output":"(+ (log1p (exp a)) (/ b (pow (pow (exp (pow (* (cbrt (cbrt (cbrt (log1p (exp a))))) (* (pow (pow (cbrt (cbrt (cbrt (log1p (exp a))))) 3.0) 2.0) (pow (cbrt (cbrt (cbrt (log1p (exp a))))) 2.0))) 2.0)) (pow (cbrt (cbrt (log1p (exp a)))) 2.0)) (cbrt (cbrt (log1p (exp a)))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort a b))","spec":"(log (+ (exp a) (exp b)))","start":29.968023178121506,"start-est":32.43922665634962,"status":"imp-start","target":false,"target-prog":"#f","time":41235.60986328125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((512 0.026044925001442315) (448 0.026044925001442315) ())","end":0.026044925001442315,"end-est":0.02734375,"identifier":"#f","input":"(/ (- (+ f n)) (- f n))","link":"3-subtractionfraction","name":"subtraction fraction","output":"(/ (+ f n) (- n f))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ f n)) (- f n))","start":0.026044925001442315,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":13074.283447265625,"vars":["f","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 40.88441043702031) (12992 0.022875) ())","end":0.022875,"end-est":0.0078125,"identifier":"#f","input":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","link":"4-sqrtexpproblem344","name":"sqrtexp (problem 3.4.4)","output":"(sqrt (+ 1.0 (exp x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))","start":40.88441043702031,"start-est":42.17590745992199,"status":"imp-start","target":false,"target-prog":"#f","time":6973.290283203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.485125) (448 0.4065855774112515) ())","end":0.4065855774112515,"end-est":0.23496757853726058,"identifier":"#f","input":"(* (sqrt (- x 1.0)) (sqrt x))","link":"5-sqrttimes","name":"sqrt times","output":"(+ x (+ -0.5 (/ -0.125 x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- x 1.0)) (sqrt x))","start":0.485125,"start-est":0.46875,"status":"ex-start","target":false,"target-prog":"#f","time":2616.46533203125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 30.248724867083297) (6528 0.129625) ())","end":0.129625,"end-est":0.11328125,"identifier":"#f","input":"(sqrt (+ (pow x 2.0) (pow x 2.0)))","link":"6-sqrtE","name":"sqrt E","output":"(hypot x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (pow x 2.0) (pow x 2.0)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":3801.878662109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 30.248724867083297) (12992 0.432125) ())","end":0.432125,"end-est":0.42578125,"identifier":"#f","input":"(sqrt (* 2.0 (pow x 2.0)))","link":"7-sqrtD","name":"sqrt D","output":"(fabs (* x (sqrt 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* 2.0 (pow x 2.0)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":3375.02099609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.248724867083297) (12992 0.432125) ())","end":0.432125,"end-est":0.42578125,"identifier":"#f","input":"(sqrt (* 2.0 (* x x)))","link":"8-sqrtC","name":"sqrt C","output":"(fabs (* x (sqrt 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* 2.0 (* x x)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":2607.736328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 30.2348951722095) (12992 0.432125) ())","end":0.432125,"end-est":0.42578125,"identifier":"#f","input":"(sqrt (* (* 2.0 x) x))","link":"9-sqrtB","name":"sqrt B","output":"(fabs (* (sqrt 2.0) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* 2.0 x) x))","start":30.2348951722095,"start-est":29.699794254532684,"status":"imp-start","target":false,"target-prog":"#f","time":2846.334716796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 30.248724867083297) (6528 0.129625) ())","end":0.129625,"end-est":0.11328125,"identifier":"#f","input":"(sqrt (+ (* x x) (* x x)))","link":"10-sqrtA","name":"sqrt A","output":"(hypot x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) (* x x)))","start":30.248724867083297,"start-est":29.701412836488963,"status":"imp-start","target":false,"target-prog":"#f","time":2599.324951171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.321367447538265) (20488 0.1393381405783048) ())","end":0.1393381405783048,"end-est":0,"identifier":"#f","input":"(/ (- x (sin x)) (- x (tan x)))","link":"11-sintanproblem345","name":"sintan (problem 3.4.5)","output":"(if (<= x -32.59303543867799) (- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x))) (if (<= x 0.0009976555059424367) (+ (+ (* 0.225 (pow x 2.0)) (+ (* -0.009642857142857142 (pow x 4.0)) (* 0.00024107142857142857 (pow x 6.0)))) -0.5) (- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (- x (tan x)))","start":31.321367447538265,"start-est":30.06091553067967,"status":"imp-start","target":false,"target-prog":"#f","time":24636.09765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 14.73663928154745) (39040 0.32385891137806977) ())","end":0.32385891137806977,"end-est":0.3017450804628639,"identifier":"#f","input":"(* r (/ (sin b) (cos (+ a b))))","link":"12-rsinB","name":"rsin B","output":"(/ (* (sin b) r) (fma (sin b) (- (sin a)) (* (cos a) (cos b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* r (/ (sin b) (cos (+ a b))))","start":14.73663928154745,"start-est":14.15985250076858,"status":"imp-start","target":false,"target-prog":"#f","time":13903.43017578125,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 14.735110552660746) (39040 0.32385891137806977) ())","end":0.32385891137806977,"end-est":0.3017450804628639,"identifier":"#f","input":"(/ (* r (sin b)) (cos (+ a b)))","link":"13-rsinA","name":"rsin A","output":"(/ (* r (sin b)) (fma (sin b) (- (sin a)) (* (cos a) (cos b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* r (sin b)) (cos (+ a b)))","start":14.735110552660746,"start-est":14.143563731231694,"status":"imp-start","target":false,"target-prog":"#f","time":13575.4228515625,"vars":["r","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((270592 54.713883309938915) (216332 43.25513037443619) ())","end":43.25513037443619,"end-est":39.24866180014187,"identifier":"#f","input":"(* 180.0 (/ (atan (/ (- (- (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale) (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0)))) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale))) PI))","link":"14-rawanglefromscalerotatedellipse","name":"raw-angle from scale-rotated-ellipse","output":"(if (<= a -0.1923288323841758) (* (atan (* (* y-scale x-scale) (* -0.5 (/ (- (* -0.5 (/ (* (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale)) (pow (sin (* (* 0.005555555555555556 PI) angle)) 2.0)) (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) 2.0))) (/ (pow (sin (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale))) (* (* (sqrt (cbrt (pow (cos (* 0.005555555555555556 (* PI angle))) 4.0))) (sqrt (pow (cbrt (cos (* 0.005555555555555556 (* PI angle)))) 2.0))) (sin (* 0.005555555555555556 (* PI angle)))))))) (/ 180.0 PI)) (if (<= a 7.268472135076255e+30) (* (/ 180.0 PI) (atan (* (* y-scale x-scale) (* -0.5 (/ (- (* -0.5 (/ (* (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale)) (pow (sin (* (* 0.005555555555555556 PI) angle)) 2.0)) (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) 2.0))) (/ (pow (sin (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale))) (* (cos (* 0.005555555555555556 (* PI angle))) (fabs (sin (* 0.005555555555555556 (* PI angle)))))))))) (if (<= a 2.438409232128873e+126) (* (/ 180.0 PI) (atan (* (* y-scale x-scale) (* -0.5 (/ (fma (cbrt (/ (pow (cos (* 0.005555555555555556 (* PI angle))) 4.0) (pow y-scale 4.0))) (cbrt (pow (/ (cos (* 0.005555555555555556 (* PI angle))) y-scale) 2.0)) (- (- (pow (/ (sin (* 0.005555555555555556 (* PI angle))) x-scale) 2.0)) (sqrt (fma 4.0 (pow (* (/ (sin (* 0.005555555555555556 (* PI angle))) y-scale) (/ (cos (* 0.005555555555555556 (* PI angle))) x-scale)) 2.0) (pow (- (pow (/ (sin (* 0.005555555555555556 (* PI angle))) x-scale) 2.0) (pow (/ (cos (* 0.005555555555555556 (* PI angle))) y-scale) 2.0)) 2.0))))) (* (cos (* 0.005555555555555556 (* PI angle))) (sin (* 0.005555555555555556 (* PI angle))))))))) (* (/ 180.0 PI) (atan (* (* y-scale x-scale) (* -0.5 (/ (- (* -0.5 (/ (* (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale)) (pow (expm1 (log1p (sin (* 0.005555555555555556 (* PI angle))))) 2.0)) (/ (pow (cos (* (* 0.005555555555555556 PI) angle)) 2.0) 2.0))) (/ (pow (sin (* (* 0.005555555555555556 PI) angle)) 2.0) (* x-scale x-scale))) (* (cos (* 0.005555555555555556 (* PI angle))) (sin (* 0.005555555555555556 (* PI angle))))))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 180.0 (/ (atan (/ (- (- (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale) (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0)))) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale))) PI))","start":54.713883309938915,"start-est":56.555244378129245,"status":"imp-start","target":false,"target-prog":"#f","time":215054.16748046875,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 34.28388722548568) (13704 10.149227567390973) ())","end":10.149227567390973,"end-est":8.195036337590583,"identifier":"#f","input":"(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","link":"15-quad2pproblem321positive","name":"quad2p (problem 3.2.1, positive)","output":"(if (<= b_2 -3.65e+118) (fma 0.5 (/ c b_2) (* -2.0 (/ b_2 a))) (if (<= b_2 1.6e-129) (/ (- (sqrt (fma b_2 b_2 (* a (- c)))) b_2) a) (* (/ c b_2) -0.5)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","start":34.28388722548568,"start-est":31.753826749134422,"status":"imp-start","target":false,"target-prog":"#f","time":11362.87451171875,"vars":["a","b_2","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7168 34.073251251539645) (7432 10.16774078620157) ())","end":10.16774078620157,"end-est":10.514470725793911,"identifier":"#f","input":"(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","link":"16-quad2mproblem321negative","name":"quad2m (problem 3.2.1, negative)","output":"(if (<= b_2 -6.8e-83) (* -0.5 (/ c b_2)) (if (<= b_2 4.4e+151) (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* c a)))) a) (fma 0.5 (/ c b_2) (* -2.0 (/ b_2 a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)","start":34.073251251539645,"start-est":32.527903220535755,"status":"imp-start","target":false,"target-prog":"#f","time":12603.18212890625,"vars":["a","b_2","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((53056 34.10254717786116) (124548 6.023702162590489) ())","end":6.023702162590489,"end-est":7.726136624565732,"identifier":"#f","input":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","link":"17-powComplexrealpart","name":"powComplex, real part","output":"(if (<= (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* y.re (atan2 x.im x.re))))) 0.0) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* y.re (atan2 x.im x.re))))) (* (/ (pow (hypot x.re x.im) y.re) (exp (* (atan2 x.im x.re) y.im))) (expm1 (log1p (cos (fma y.re (atan2 x.im x.re) (* y.im (log (hypot x.re x.im)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","start":34.10254717786116,"start-est":33.09930711045047,"status":"imp-start","target":false,"target-prog":"#f","time":21963.047607421875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((53056 34.159749391971324) (111748 6.141287372715084) ())","end":6.141287372715084,"end-est":7.946139234706955,"identifier":"#f","input":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","link":"18-powCompleximaginarypart","name":"powComplex, imaginary part","output":"(if (<= (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* y.re (atan2 x.im x.re))))) 0.0) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* y.re (atan2 x.im x.re))))) (* (/ (pow (hypot x.re x.im) y.re) (exp (* (atan2 x.im x.re) y.im))) (sin (fma (log (hypot x.re x.im)) y.im (* y.re (atan2 x.im x.re))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re))))","start":34.159749391971324,"start-est":33.16341918910931,"status":"imp-start","target":false,"target-prog":"#f","time":21062.31689453125,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 0.3774391289007051) (45504 0.25067200295192976) ())","end":0.25067200295192976,"end-est":0.2265625,"identifier":"#f","input":"(+ (* (* (/ 1.0 6.0) (pow (* -2.0 (log u1)) 0.5)) (cos (* (* 2.0 PI) u2))) 0.5)","link":"19-normaldistribution","name":"normal distribution","output":"(fma (sqrt (- (log u1))) (* (cos (* 2.0 (* u2 PI))) (* (sqrt 2.0) (cbrt 0.004629629629629629))) 0.5)","pre":"(and (and (<= 0.0 u1) (<= u1 1.0)) (and (<= 0.0 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (* (/ 1.0 6.0) (pow (* -2.0 (log u1)) 0.5)) (cos (* (* 2.0 PI) u2))) 0.5)","start":0.3774391289007051,"start-est":0.359375,"status":"ex-start","target":false,"target-prog":"#f","time":7494.77978515625,"vars":["u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.014014638164759573) (6784 0.014014638164759573) ())","end":0.014014638164759573,"end-est":0,"identifier":"#f","input":"(- (log (- (/ 1.0 x) 1.0)))","link":"20-neglog","name":"neg log","output":"(- (log (+ (/ 1.0 x) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (- (/ 1.0 x) 1.0)))","start":0.014014638164759573,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2087.064453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 28.022050900124302) (39880 2.031865029025191) ())","end":2.031865029025191,"end-est":3.218714686008429,"identifier":"#f","input":"(/ (cos (* 2.0 x)) (* (pow c 2.0) (* (* x (pow s 2.0)) x)))","link":"21-mixedcos","name":"mixedcos","output":"(if (<= c -1.0250680391012899e+191) (* (/ 1.0 (* (* c x) s)) (/ (cos (+ x x)) (/ s (/ 1.0 (* c x))))) (if (<= c -1e-240) (- (/ (pow (cos x) 2.0) (pow (* c (* x s)) 2.0)) (/ (pow (sin x) 2.0) (pow (* c (* x s)) 2.0))) (* (/ 1.0 (* (* c x) s)) (/ (cos (+ x x)) (* (* c x) s)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort c s))","spec":"(/ (cos (* 2.0 x)) (* (pow c 2.0) (* (* x (pow s 2.0)) x)))","start":28.022050900124302,"start-est":30.487372482353265,"status":"imp-start","target":false,"target-prog":"#f","time":11667.415771484375,"vars":["x","c","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"re_sqr","input":"(- (* re re) (* im im))","link":"22-mathsquareoncomplexrealpart","name":"math.square on complex, real part","output":"(* (- re im) (+ re im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* re re) (* im im))","start":0.007436481637041209,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2624.3505859375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.006) (448 0.006) ())","end":0.006,"end-est":0,"identifier":"im_sqr","input":"(+ (* re im) (* im re))","link":"23-mathsquareoncompleximaginarypart","name":"math.square on complex, imaginary part","output":"(+ (* re im) (* re im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* re im) (* im re))","start":0.006,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2324.4951171875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 38.89362679418264) (26884 6.517066472241539) ())","end":6.517066472241539,"end-est":6.4319511116181936,"identifier":"#f","input":"(* 0.5 (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))))","link":"24-mathsqrtoncompleximaginarypartimgreaterthan0branch","name":"math.sqrt on complex, imaginary part, im greater than 0 branch","output":"(if (<= (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))) 0.0) (* 0.5 (* im (sqrt (/ 1.0 re)))) (* 0.5 (sqrt (* 2.0 (- (hypot re im) re)))))","pre":"(> im 0.0)","prec":"binary64","preprocess":"()","spec":"(* 0.5 (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re))))","start":38.89362679418264,"start-est":36.257083076443486,"status":"imp-start","target":false,"target-prog":"#f","time":7628.78125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 0.032188721875540866) (19712 0.032188721875540866) ())","end":0.032188721875540866,"end-est":0.00390625,"identifier":"#f","input":"(* (* 0.5 (sin re)) (+ (exp (- 0.0 im)) (exp im)))","link":"25-mathsinoncomplexrealpart","name":"math.sin on complex, real part","output":"(* (* 0.5 (sin re)) (+ (exp (- im)) (exp im)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (sin re)) (+ (exp (- 0.0 im)) (exp im)))","start":0.032188721875540866,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":10804.843505859375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 31.682930186056996) (96896 0.38425690655425027) ())","end":0.38425690655425027,"end-est":0.3834762695368841,"identifier":"#f","input":"(/ (log (sqrt (+ (* re re) (* im im)))) (log 10.0))","link":"26-mathlog10oncomplexrealpart","name":"math.log10 on complex, real part","output":"(* (/ 1.0 (sqrt (log 10.0))) (+ (log (pow (cbrt (pow (hypot re im) (pow (log 10.0) -0.5))) 2.0)) (log (cbrt (pow (hypot re im) (pow (log 10.0) -0.5))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (log (sqrt (+ (* re re) (* im im)))) (log 10.0))","start":31.682930186056996,"start-est":31.937999403585824,"status":"imp-start","target":false,"target-prog":"#f","time":10034.736083984375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13056 0.8462479328161964) (13120 0.13826917344137624) ())","end":0.13826917344137624,"end-est":0.10546875,"identifier":"#f","input":"(/ (atan2 im re) (log 10.0))","link":"27-mathlog10oncompleximaginarypart","name":"math.log10 on complex, imaginary part","output":"(/ (- (atan2 im re)) (log 0.1))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (atan2 im re) (log 10.0))","start":0.8462479328161964,"start-est":0.874042529305326,"status":"ex-start","target":false,"target-prog":"#f","time":4531.46435546875,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((39808 31.977374491804493) (19456 0.36596485000288487) ())","end":0.36596485000288487,"end-est":0.37728500976844204,"identifier":"#f","input":"(/ (+ (* (log (sqrt (+ (* re re) (* im im)))) (log base)) (* (atan2 im re) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","link":"28-mathlog2oncomplexrealpart","name":"math.log/2 on complex, real part","output":"(/ (log (hypot re im)) (log base))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* (log (sqrt (+ (* re re) (* im im)))) (log base)) (* (atan2 im re) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","start":31.977374491804493,"start-est":30.961598718750842,"status":"imp-start","target":false,"target-prog":"#f","time":11998.279296875,"vars":["re","im","base"]},{"bits":128,"conversions":[],"cost-accuracy":"((39808 31.789059587507964) (13056 0.3095637218755409) ())","end":0.3095637218755409,"end-est":0.3046875,"identifier":"#f","input":"(/ (- (* (atan2 im re) (log base)) (* (log (sqrt (+ (* re re) (* im im)))) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","link":"29-mathlog2oncompleximaginarypart","name":"math.log/2 on complex, imaginary part","output":"(/ (atan2 im re) (log base))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* (atan2 im re) (log base)) (* (log (sqrt (+ (* re re) (* im im)))) 0.0)) (+ (* (log base) (log base)) (* 0.0 0.0)))","start":31.789059587507964,"start-est":32.496757519536885,"status":"imp-start","target":false,"target-prog":"#f","time":10589.291748046875,"vars":["re","im","base"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.380740061021974) (12928 0.000125) ())","end":0.000125,"end-est":0,"identifier":"#f","input":"(log (sqrt (+ (* re re) (* im im))))","link":"30-mathlog1oncomplexrealpart","name":"math.log/1 on complex, real part","output":"(log (hypot re im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (sqrt (+ (* re re) (* im im))))","start":31.380740061021974,"start-est":31.675583566837354,"status":"imp-start","target":false,"target-prog":"#f","time":2394.585693359375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0) (6528 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(atan2 im re)","link":"31-mathlog1oncompleximaginarypart","name":"math.log/1 on complex, imaginary part","output":"(atan2 im re)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 im re)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1463.447021484375,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.0085) (12992 0.0085) ())","end":0.0085,"end-est":0.00390625,"identifier":"#f","input":"(* (exp re) (cos im))","link":"32-mathexponcomplexrealpart","name":"math.exp on complex, real part","output":"(* (exp re) (cos im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp re) (cos im))","start":0.0085,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":5988.89501953125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.028323120312590145) (12992 0.028323120312590145) ())","end":0.028323120312590145,"end-est":0.01171875,"identifier":"#f","input":"(* (exp re) (sin im))","link":"33-mathexponcompleximaginarypart","name":"math.exp on complex, imaginary part","output":"(* (exp re) (sin im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp re) (sin im))","start":0.028323120312590145,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":9393.410400390625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 0.011865601562950722) (26368 0.013271240625180288) ())","end":0.013271240625180288,"end-est":0.01171875,"identifier":"#f","input":"(* (* 0.5 (cos re)) (+ (exp (- im)) (exp im)))","link":"34-mathcosoncomplexrealpart","name":"math.cos on complex, real part","output":"(+ (* (* 0.5 (cos re)) (exp (- im))) (* (* 0.5 (cos re)) (exp im)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (cos re)) (+ (exp (- im)) (exp im)))","start":0.011865601562950722,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":15432.463134765625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6528 0) (6528 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(atan2 im re)","link":"35-mathargoncomplex","name":"math.arg on complex","output":"(atan2 im re)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 im re)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1909.629150390625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00675) (6720 0.003375) ())","end":0.003375,"end-est":0,"identifier":"modulus_sqr","input":"(+ (* re re) (* im im))","link":"36-mathabsoncomplexsquared","name":"math.abs on complex (squared)","output":"(fma re re (* im im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* re re) (* im im))","start":0.00675,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2259.851806640625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.08033947042407) (6528 0.002125) ())","end":0.002125,"end-est":0,"identifier":"modulus","input":"(sqrt (+ (* re re) (* im im)))","link":"37-mathabsoncomplex","name":"math.abs on complex","output":"(hypot re im)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* re re) (* im im)))","start":31.08033947042407,"start-est":31.815164593812035,"status":"imp-start","target":false,"target-prog":"#f","time":2964.376953125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((7556 19.839266437028847) (7820 6.774173239445187) ())","end":6.774173239445187,"end-est":4.961082096017046,"identifier":"#f","input":"(if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))","link":"38-jeffquadraticroot2","name":"jeff quadratic root 2","output":"(if (<= b -1.3e+107) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (+ (* b b) (* c (* a -4.0)))))) (- (/ (+ b b) (* 2.0 a)))) (if (<= b 6e+105) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (+ (* b b) (* c (* a -4.0)))))) (/ (- (sqrt (+ (* b b) (* c (* a -4.0)))) b) (* 2.0 a))) (if (>= b 0.0) (/ (* 2.0 c) (- (- b) b)) (/ (- (sqrt (+ (* b b) (* c (* a -4.0)))) b) (* 2.0 a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(if (>= b 0.0) (/ (* 2.0 c) (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))","start":19.839266437028847,"start-est":19.99730401355955,"status":"imp-start","target":false,"target-prog":"#f","time":21719.91455078125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7556 19.856218065959506) (14028 7.2126884050742115) ())","end":7.2126884050742115,"end-est":6.408594782271894,"identifier":"#f","input":"(if (>= b 0.0) (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ (* 2.0 c) (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))))","link":"39-jeffquadraticroot1","name":"jeff quadratic root 1","output":"(if (<= b -3.984001307761773e+171) (if (>= b 0.0) (* -0.5 (/ (+ b (sqrt (fma b b (* (* a c) -4.0)))) a)) (* -2.0 (/ c (+ b b)))) (if (<= b 8.2e+104) (if (>= b 0.0) (* -0.5 (/ (+ b (sqrt (fma b b (* (* a c) -4.0)))) a)) (* -2.0 (/ c (- b (sqrt (fma b b (* (* a c) -4.0))))))) (if (>= b 0.0) (* -0.5 (/ (+ b b) a)) (* -2.0 (/ c (- b (sqrt (fma b b (* (* a c) -4.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(if (>= b 0.0) (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ (* 2.0 c) (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c))))))","start":19.856218065959506,"start-est":18.774779265417223,"status":"imp-start","target":false,"target-prog":"#f","time":19494.838623046875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (fabs (- a b)) 2.0)","link":"40-fabsfraction2","name":"fabs fraction 2","output":"(/ (fabs (- a b)) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (fabs (- a b)) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4708.33935546875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 1.433746815008286) (8648 0.1753632029048276) ())","end":0.1753632029048276,"end-est":0.08984375,"identifier":"#f","input":"(fabs (- (/ (+ x 4.0) y) (* (/ x y) z)))","link":"41-fabsfraction1","name":"fabs fraction 1","output":"(if (<= (- (/ (+ x 4.0) y) (* (/ x y) z)) -5e-33) (fabs (- (/ (+ x 4.0) y) (/ z (/ y x)))) (if (<= (- (/ (+ x 4.0) y) (* (/ x y) z)) 5e+129) (fabs (+ (/ x (/ y z)) (/ (- -4.0 x) y))) (fabs (- (/ (+ x 4.0) y) (* (/ x y) z)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (- (/ (+ x 4.0) y) (* (/ x y) z)))","start":1.433746815008286,"start-est":1.2552797300709377,"status":"imp-start","target":false,"target-prog":"#f","time":10990.494873046875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((32320 59.44716931919967) (90564 24.07834453588505) ())","end":24.07834453588505,"end-est":25.063644930822715,"identifier":"#f","input":"(* (fmod (exp x) (sqrt (cos x))) (exp (- x)))","link":"42-expfmod","name":"expfmod","output":"(if (<= x 3.9535472114708234) (pow (pow E (- (pow (log (fmod (exp x) (sqrt (cos x)))) 2.0) (* x x))) (/ 1.0 (+ x (log (fmod (exp x) (sqrt (cos x))))))) (exp (- x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (fmod (exp x) (sqrt (cos x))) (exp (- x)))","start":59.44716931919967,"start-est":60.33705327885785,"status":"imp-start","target":false,"target-prog":"#f","time":25802.138671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 0.26452591144723053) (19520 0.26452591144723053) ())","end":0.26452591144723053,"end-est":0.1823535542098672,"identifier":"#f","input":"(* (exp (- w)) (pow l (exp w)))","link":"43-expwcrasher","name":"exp-w crasher","output":"(* (exp (- w)) (pow l (exp w)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (exp (- w)) (pow l (exp w)))","start":0.26452591144723053,"start-est":0.1823535542098672,"status":"ex-start","target":false,"target-prog":"#f","time":22419.034912109375,"vars":["w","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((6784 0.018318071443900116) (25920 0.021601331452451147) ())","end":0.021601331452451147,"end-est":0.03593622009701705,"identifier":"#f","input":"(exp (- (- 1.0 (* x x))))","link":"44-expnegsub","name":"exp neg sub","output":"(* (pow E -1.0) (pow E (* x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (- (- 1.0 (* x x))))","start":0.018318071443900116,"start-est":0.04891250171767081,"status":"ex-start","target":false,"target-prog":"#f","time":4216.59130859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.765019149426823) (20032 0.14620131719822718) ())","end":0.14620131719822718,"end-est":0.12337875976844201,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (* x x))","link":"45-cos2problem341","name":"cos2 (problem 3.4.1)","output":"(/ (/ (sin x) x) (/ (* x (cos (* x 0.5))) (sin (* x 0.5))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (* x x))","start":31.765019149426823,"start-est":31.45331833432023,"status":"imp-start","target":false,"target-prog":"#f","time":10079.444091796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.07751204570071307) (14080 0.06614534911590843) ())","end":0.06614534911590843,"end-est":0.01953125,"identifier":"#f","input":"(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))","link":"46-bparameterofrenormalizedbetadistribution","name":"b parameter of renormalized beta distribution","output":"(+ (fma 1.0 (/ m v) (+ (/ (pow m 3.0) v) (* (* m (/ m v)) -2.0))) (+ m -1.0))","pre":"(and (and (< 0.0 m) (< 0.0 v)) (< v 0.25))","prec":"binary64","preprocess":"()","spec":"(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))","start":0.07751204570071307,"start-est":0.05859375,"status":"ex-start","target":false,"target-prog":"#f","time":7635.447265625,"vars":["m","v"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (- (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","link":"47-bfromscalerotatedellipse","name":"b from scale-rotated-ellipse","output":"#f","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (- (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","start":false,"start-est":false,"status":"timeout","target":false,"target-prog":"#f","time":300000,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.013375) (13504 0.011375) ())","end":0.011375,"end-est":0.00390625,"identifier":"#f","input":"(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))","link":"48-arccos","name":"arccos","output":"(* 2.0 (atan (/ 1.0 (sqrt (/ (+ 1.0 x) (- 1.0 x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))","start":0.013375,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":5603.498779296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((512 15.819283073268599) (6720 0.30420789531691705) ())","end":0.30420789531691705,"end-est":0.30697250976844204,"identifier":"#f","input":"(- (* (* (* a a) b) b))","link":"49-abangleABCFD","name":"ab-angle->ABCF D","output":"(- (pow (* a b) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* (* a a) b) b))","start":15.819283073268599,"start-est":14.299365513458902,"status":"imp-start","target":false,"target-prog":"#f","time":4915.682373046875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 20.133022056162833) (39360 20.15605059897401) ())","end":20.15605059897401,"end-est":21.516894310200588,"identifier":"#f","input":"(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))","link":"50-abangleABCFC","name":"ab-angle->ABCF C","output":"(+ (pow (* a (cos (* angle (* PI 0.005555555555555556)))) 2.0) (pow (* b (sin (/ PI (/ 180.0 angle)))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))","start":20.133022056162833,"start-est":21.606716098665594,"status":"apx-start","target":false,"target-prog":"#f","time":25152.2421875,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((39488 31.358734177660892) (65152 31.690640608564376) ())","end":31.690640608564376,"end-est":34.51793546702841,"identifier":"#f","input":"(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))","link":"51-abangleABCFB","name":"ab-angle->ABCF B","output":"(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* 0.005555555555555556 (* angle PI)))) (sqrt (pow (log (exp (cos (* angle (* 0.005555555555555556 PI))))) 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))","start":31.358734177660892,"start-est":34.707903262547894,"status":"apx-start","target":false,"target-prog":"#f","time":23315.394775390625,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 20.00235612192895) (104128 19.98604002772281) ())","end":19.98604002772281,"end-est":20.90605052204224,"identifier":"#f","input":"(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))","link":"52-abangleABCFA","name":"ab-angle->ABCF A","output":"(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (* (cbrt (cos (* (* angle PI) 0.005555555555555556))) (pow (cbrt (cos (* (cbrt angle) (* (cbrt (* PI 0.005555555555555556)) (pow (cbrt (* angle (* PI 0.005555555555555556))) 2.0))))) 2.0))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))","start":20.00235612192895,"start-est":21.09421523058784,"status":"apx-start","target":false,"target-prog":"#f","time":24400.427001953125,"vars":["a","b","angle"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.18439777504328728) (704 0.1808848054622134) ())","end":0.1808848054622134,"end-est":0.13671875,"identifier":"#f","input":"(* (- (/ (* m (- 1.0 m)) v) 1.0) m)","link":"53-aparameterofrenormalizedbetadistribution","name":"a parameter of renormalized beta distribution","output":"(- (* m (/ (* m (- 1.0 m)) v)) m)","pre":"(and (and (< 0.0 m) (< 0.0 v)) (< v 0.25))","prec":"binary64","preprocess":"()","spec":"(* (- (/ (* m (- 1.0 m)) v) 1.0) m)","start":0.18439777504328728,"start-est":0.15625,"status":"ex-start","target":false,"target-prog":"#f","time":5788.2978515625,"vars":["m","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((239808 63.50988330440551) (59464 50.55106462085708) ())","end":50.55106462085708,"end-est":47.29467737049079,"identifier":"#f","input":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (+ (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","link":"54-afromscalerotatedellipse","name":"a from scale-rotated-ellipse","output":"(if (<= y-scale -2.4298888467191855e+22) (* 0.25 (* y-scale (* b 4.0))) (if (<= y-scale -9.74925594665416e-71) (* 0.25 (* (* x-scale (sqrt 8.0)) (sqrt (* 2.0 (fma (* a a) (pow (cos (* 0.005555555555555556 (* angle PI))) 2.0) (* (pow (sin (* 0.005555555555555556 (* angle PI))) 2.0) (* b b))))))) (if (<= y-scale -2.763745238502872e-290) (* 0.25 (* y-scale (* b 4.0))) (* 0.25 (* y-scale (pow (sqrt (pow (cbrt (* b 4.0)) 2.0)) 3.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (sqrt (* (* (* 2.0 (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0))) (* (* b a) (* b (- a)))) (+ (+ (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) (sqrt (+ (pow (- (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)) 2.0) (pow (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) 2.0))))))) (/ (* 4.0 (* (* b a) (* b (- a)))) (pow (* x-scale y-scale) 2.0)))","start":63.50988330440551,"start-est":62.59270227741885,"status":"imp-start","target":false,"target-prog":"#f","time":137009.72802734375,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01075) (448 0.01075) ())","end":0.01075,"end-est":0.01171875,"identifier":"#f","input":"(- (* x.re y.re) (* x.im y.im))","link":"55-_multiplyComplexrealpart","name":"_multiplyComplex, real part","output":"(- (* x.re y.re) (* x.im y.im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x.re y.re) (* x.im y.im))","start":0.01075,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":5711.01123046875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01264624062518029) (6720 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(+ (* x.re y.im) (* x.im y.re))","link":"56-_multiplyCompleximaginarypart","name":"_multiplyComplex, imaginary part","output":"(fma x.re y.im (* x.im y.re))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x.re y.im) (* x.im y.re))","start":0.01264624062518029,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4010.49169921875,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.316150161480284) (20696 11.245576870026959) ())","end":11.245576870026959,"end-est":6.176125550643874,"identifier":"#f","input":"(/ (+ (* x.re y.re) (* x.im y.im)) (+ (* y.re y.re) (* y.im y.im)))","link":"57-_divideComplexrealpart","name":"_divideComplex, real part","output":"(if (<= y.im -1.327275917793868e+105) (fma (/ y.re y.im) (/ x.re y.im) (/ x.im y.im)) (if (<= y.im -1e-145) (+ (* x.im (/ y.im (fma y.im y.im (* y.re y.re)))) (* x.re (/ y.re (fma y.im y.im (* y.re y.re))))) (if (<= y.im 1.809803726156943e-112) (fma (/ y.im y.re) (/ x.im y.re) (/ x.re y.re)) (if (<= y.im 9.289846252076942e-42) (+ (* x.im (/ y.im (fma y.im y.im (* y.re y.re)))) (* x.re (/ y.re (fma y.im y.im (* y.re y.re))))) (if (<= y.im 4.198122818087778e-25) (fma (/ y.im y.re) (/ x.im y.re) (/ x.re y.re)) (if (<= y.im 3.1198454695800192e+128) (/ (/ (fma x.re y.re (* y.im x.im)) (hypot y.re y.im)) (hypot y.re y.im)) (/ (+ x.im (* (/ y.re y.im) x.re)) (hypot y.re y.im))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* x.re y.re) (* x.im y.im)) (+ (* y.re y.re) (* y.im y.im)))","start":26.316150161480284,"start-est":25.700878010057604,"status":"imp-start","target":false,"target-prog":"#f","time":7198.02880859375,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.2216266805803) (14144 3.3935025768900444) ())","end":3.3935025768900444,"end-est":3.015757960996844,"identifier":"#f","input":"(/ (- (* x.im y.re) (* x.re y.im)) (+ (* y.re y.re) (* y.im y.im)))","link":"58-_divideCompleximaginarypart","name":"_divideComplex, imaginary part","output":"(- (* (* (/ 1.0 (hypot y.re y.im)) (/ y.re (hypot y.re y.im))) x.im) (/ x.re (+ y.im (* y.re (/ y.re y.im)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x.im y.re) (* x.re y.im)) (+ (* y.re y.re) (* y.im y.im)))","start":26.2216266805803,"start-est":28.5832726450607,"status":"imp-start","target":false,"target-prog":"#f","time":6921.37353515625,"vars":["x.re","x.im","y.re","y.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19904 17.143615216455) (383296 2.2667095071536973) ())","end":2.2667095071536973,"end-est":1.221926718543829,"identifier":"#f","input":"(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))","link":"59-VandenBroeckandKellerEquation6","name":"VandenBroeck and Keller, Equation (6)","output":"(- (* PI l) (pow (* F (* F (+ (+ (* (/ l (pow PI 2.0)) (* (pow PI 3.0) -0.3333333333333333)) (* (pow l 5.0) (+ (* (* (pow PI 3.0) -0.3333333333333333) (/ (- (* (pow PI 3.0) -0.125) (fma 0.008333333333333333 (pow PI 3.0) (/ (* (pow PI 6.0) -0.1111111111111111) (pow PI 3.0)))) PI)) (- (fma 0.041666666666666664 (* (pow PI 3.0) (* (pow PI 2.0) 0.3333333333333333)) (fma -0.5 (fma (pow PI 5.0) -0.03333333333333333 (* (pow PI 2.0) (* (pow PI 3.0) 0.16666666666666666))) (* (pow PI 5.0) -0.001388888888888889))) (fma (pow PI 5.0) -0.0001984126984126984 (* (/ (* (pow PI 3.0) -0.3333333333333333) (pow PI 3.0)) (fma (pow PI 5.0) -0.03333333333333333 (* (pow PI 2.0) (* (pow PI 3.0) 0.16666666666666666))))))))) (+ (/ 1.0 (* PI l)) (* (pow l 3.0) (- (* (pow PI 3.0) -0.125) (fma 0.008333333333333333 (pow PI 3.0) (/ (* (pow PI 6.0) -0.1111111111111111) (pow PI 3.0))))))))) -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))","start":17.143615216455,"start-est":14.971856246640142,"status":"imp-start","target":false,"target-prog":"#f","time":21342.367431640625,"vars":["F","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((13440 0.21162369440854448) (13248 0.15037984344452718) ())","end":0.15037984344452718,"end-est":0.1875,"identifier":"#f","input":"(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))","link":"60-VandenBroeckandKellerEquation24","name":"VandenBroeck and Keller, Equation (24)","output":"(- (/ 1.0 (sin B)) (/ x (tan B)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))","start":0.21162369440854448,"start-est":0.2109375,"status":"ex-start","target":false,"target-prog":"#f","time":12786.8115234375,"vars":["B","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((20736 13.587269783007942) (39496 0.28429757226510594) ())","end":0.28429757226510594,"end-est":0.166347509768442,"identifier":"#f","input":"(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))","link":"61-VandenBroeckandKellerEquation23","name":"VandenBroeck and Keller, Equation (23)","output":"(if (<= F -2.05e+18) (- (/ -1.0 (sin B)) (/ x (/ (sin B) (cos B)))) (if (<= F 8.5e+30) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ (- x) (tan B))) (- (/ 1.0 (sin B)) (/ x (/ (sin B) (cos B))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))","start":13.587269783007942,"start-est":14.537583928919364,"status":"imp-start","target":false,"target-prog":"#f","time":26058.141357421875,"vars":["F","B","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((65728 61.52475907545725) (38976 0.8586164268506699) ())","end":0.8586164268506699,"end-est":0.5420876465266303,"identifier":"#f","input":"(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))","link":"62-VandenBroeckandKellerEquation20","name":"VandenBroeck and Keller, Equation (20)","output":"(- (pow (sqrt (/ (log (tanh (* PI (* f 0.25)))) (* PI -0.25))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))","start":61.52475907545725,"start-est":61.875885114912336,"status":"imp-start","target":false,"target-prog":"#f","time":26631.63330078125,"vars":["f"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.024125) (448 0.016847669964190584) ())","end":0.016847669964190584,"end-est":0.015625,"identifier":"#f","input":"(+ (- 1.0 ux) (* ux maxCos))","link":"63-UniformSampleConez","name":"UniformSampleCone, z","output":"(+ 1.0 (* (+ maxCos -1.0) ux))","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (- 1.0 ux) (* ux maxCos))","start":0.024125,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":3991.91357421875,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((20608 12.488525506784125) (40000 0.5318110510445117) ())","end":0.5318110510445117,"end-est":0.5406013497009194,"identifier":"#f","input":"(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","link":"64-UniformSampleConey","name":"UniformSampleCone, y","output":"(* (log1p (expm1 (sin (* uy (* 2.0 PI))))) (sqrt (+ (* (- 1.0 maxCos) (* (pow ux 2.0) (+ maxCos -1.0))) (* ux (+ 1.0 (- (- 1.0 maxCos) maxCos))))))","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","start":12.488525506784125,"start-est":12.152283556089811,"status":"imp-start","target":false,"target-prog":"#f","time":11820.21142578125,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((20608 12.501210029246776) (27200 0.4034425554595871) ())","end":0.4034425554595871,"end-est":0.33873974860737494,"identifier":"#f","input":"(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","link":"65-UniformSampleConex","name":"UniformSampleCone, x","output":"(* (cos (* uy (* 2.0 PI))) (sqrt (+ (* (- 1.0 maxCos) (* (pow ux 2.0) (+ maxCos -1.0))) (* ux (+ 1.0 (- (- 1.0 maxCos) maxCos))))))","pre":"(and (and (and (<= 2.328306437e-10 ux) (<= ux 1.0)) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))","start":12.501210029246776,"start-est":12.132152077023417,"status":"imp-start","target":false,"target-prog":"#f","time":11577.57470703125,"vars":["ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((42176 0.3599589510583054) (81472 0.38390410558703997) ())","end":0.38390410558703997,"end-est":0.3278312988422101,"identifier":"#f","input":"(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))","link":"66-UniformSampleCone2","name":"UniformSampleCone 2","output":"(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi) (* yi (+ (* (sin (* (* uy 2.0) PI)) (fma (* maxCos maxCos) (pow ux 3.0) 1.0)) (* -0.5 (* (sin (* (* uy 2.0) PI)) (+ (* (* maxCos maxCos) (* ux ux)) (* (pow ux 4.0) (fma (pow maxCos 4.0) 0.25 (* maxCos maxCos))))))))) (* (* ux (* (- 1.0 ux) maxCos)) zi))","pre":"(and (and (and (and (and (and (<= -10000.0 xi) (<= xi 10000.0)) (and (<= -10000.0 yi) (<= yi 10000.0))) (and (<= -10000.0 zi) (<= zi 10000.0))) (and (<= 2.328306437e-10 ux) (<= ux 1.0))) (and (<= 2.328306437e-10 uy) (<= uy 1.0))) (and (<= 0.0 maxCos) (<= maxCos 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))","start":0.3599589510583054,"start-est":0.3317375488422101,"status":"ex-start","target":false,"target-prog":"#f","time":17896.639892578125,"vars":["xi","yi","zi","ux","uy","maxCos"]},{"bits":128,"conversions":[],"cost-accuracy":"((138688 0.5157453897675705) (124096 0.006872077026581068) ())","end":0.006872077026581068,"end-est":0.00390625,"identifier":"#f","input":"(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))","link":"67-TrowbridgeReitzSamplesamplesurfacenormalcosTheta","name":"Trowbridge-Reitz Sample, sample surface normal, cosTheta","output":"(exp (* (log1p (/ u0 (* (fma (cos (atan (* alphay (/ (tan (* PI (fma 2.0 u1 0.5))) alphax)))) (/ (pow alphax -2.0) (hypot 1.0 (* alphay (/ (tan (* PI (fma 2.0 u1 0.5))) alphax)))) (pow (/ (sin (atan (* alphay (/ (tan (* PI (fma 2.0 u1 0.5))) alphax)))) alphay) 2.0)) (- 1.0 u0)))) -0.5))","pre":"(and (and (and (and (<= 2.328306437e-10 u0) (<= u0 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 0.5))) (and (<= 0.0001 alphax) (<= alphax 1.0))) (and (<= 0.0001 alphay) (<= alphay 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))","start":0.5157453897675705,"start-est":0.5045700195368841,"status":"ex-start","target":false,"target-prog":"#f","time":44565.62109375,"vars":["u0","u1","alphax","alphay"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.4927183193190326) (26304 0.5537272200433428) ())","end":0.5537272200433428,"end-est":0.46379752900649757,"identifier":"#f","input":"(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))","link":"68-TrowbridgeReitzSamplenearnormalslope_y","name":"Trowbridge-Reitz Sample, near normal, slope_y","output":"(/ (* (sqrt u1) (sin (* 6.28318530718 u2))) (pow (pow (- 1.0 u1) 1.5) 0.3333333333333333))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))","start":0.4927183193190326,"start-est":0.5095101074528623,"status":"ex-start","target":false,"target-prog":"#f","time":9188.13916015625,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.39814054501063806) (13376 0.39814054501063806) ())","end":0.39814054501063806,"end-est":0.3989109754547238,"identifier":"#f","input":"(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))","link":"69-TrowbridgeReitzSamplenearnormalslope_x","name":"Trowbridge-Reitz Sample, near normal, slope_x","output":"(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))","start":0.39814054501063806,"start-est":0.3989109754547238,"status":"ex-start","target":false,"target-prog":"#f","time":8670.6591796875,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((26304 0.3320083824101279) (26304 0.3320083824101279) ())","end":0.3320083824101279,"end-est":0.31244271208326546,"identifier":"#f","input":"(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))","link":"70-TrigonometryB","name":"Trigonometry B","output":"(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))","start":0.3320083824101279,"start-est":0.31244271208326546,"status":"ex-start","target":false,"target-prog":"#f","time":8307.189208984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.1358962406251803) (58368 0.14805697070215543) ())","end":0.14805697070215543,"end-est":0.12109375,"identifier":"#f","input":"(/ (* e (sin v)) (+ 1.0 (* e (cos v))))","link":"71-TrigonometryA","name":"Trigonometry A","output":"(* e (* (log1p (expm1 (pow (fma e (cos v) 1.0) -0.5))) (/ (sin v) (sqrt (fma e (cos v) 1.0)))))","pre":"(and (<= 0.0 e) (<= e 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* e (sin v)) (+ 1.0 (* e (cos v))))","start":0.1358962406251803,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":9707.262939453125,"vars":["e","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14400 42.930012680015146) (46984 11.175462692843949) ())","end":11.175462692843949,"end-est":7.300365994620478,"identifier":"#f","input":"(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))","link":"72-TonioloandLinderEquation7","name":"Toniolo and Linder, Equation (7)","output":"(if (<= t -1.723423578103978e+41) (/ (* t (sqrt 2.0)) (* t (- (sqrt (+ 2.0 (/ 4.0 x)))))) (if (<= t -7.2e-163) (/ (* t (sqrt 2.0)) (sqrt (+ (+ (/ (pow l 2.0) x) (+ (* 2.0 (/ (pow t 2.0) x)) (* 2.0 (pow t 2.0)))) (/ (+ (pow l 2.0) (* 2.0 (pow t 2.0))) x)))) (if (<= t -8e-213) (/ (* t (sqrt 2.0)) (- (* (/ 2.0 (/ t (* l (/ l x)))) (* (sqrt (/ 1.0 (+ 2.0 (/ 4.0 x)))) -0.5)) (* t (sqrt (+ 2.0 (/ 4.0 x)))))) (if (<= t 2.868285057570977e-36) (/ (* t (sqrt 2.0)) (sqrt (+ (/ l (/ x l)) (fma 2.0 (+ (/ t (/ x t)) (* t t)) (/ (fma 2.0 (* t t) (* l l)) x))))) (/ (* t (sqrt 2.0)) (* (* t (sqrt 2.0)) (sqrt (/ (+ x 1.0) (+ x -1.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))","start":42.930012680015146,"start-est":41.15653935243795,"status":"imp-start","target":false,"target-prog":"#f","time":20090.395263671875,"vars":["x","l","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((45376 4.0226065394209165) (32384 0.22571973750504792) ())","end":0.22571973750504792,"end-est":0.19759750976844204,"identifier":"#f","input":"(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))","link":"73-TonioloandLinderEquation3breal","name":"Toniolo and Linder, Equation (3b), real","output":"(* (sin th) (/ (sin ky) (hypot (sin ky) (sin kx))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))","start":4.0226065394209165,"start-est":4.1098221768313925,"status":"imp-start","target":false,"target-prog":"#f","time":23515.28369140625,"vars":["kx","ky","th"]},{"bits":128,"conversions":[],"cost-accuracy":"((46208 1.006) (45632 0.011625) ())","end":0.011625,"end-est":0,"identifier":"#f","input":"(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))","link":"74-TonioloandLinderEquation3a","name":"Toniolo and Linder, Equation (3a)","output":"(sqrt (+ 0.5 (log (exp (/ 0.5 (hypot 1.0 (* (* (/ 2.0 Om) l) (hypot (sin kx) (sin ky)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))","start":1.006,"start-est":0.5078125,"status":"apx-start","target":false,"target-prog":"#f","time":17204.315185546875,"vars":["l","Om","kx","ky"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 10.043254399497602) (33352 1.9132883763527397) ())","end":1.9132883763527397,"end-est":1.8846888104564308,"identifier":"#f","input":"(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))","link":"75-TonioloandLinderEquation2","name":"Toniolo and Linder, Equation (2)","output":"(if (<= (/ t l) -2e+145) (asin (* (sqrt (- 1.0 (* Om (/ Om (* Omc Omc))))) (* l (- (/ (sqrt 0.5) t))))) (if (<= (/ t l) 4e+18) (asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))) (asin (* (sqrt (- 1.0 (* Om (/ Om (* Omc Omc))))) (* l (/ (sqrt 0.5) t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))","start":10.043254399497602,"start-est":9.668981787408526,"status":"imp-start","target":false,"target-prog":"#f","time":17539.794921875,"vars":["t","l","Om","Omc"]},{"bits":128,"conversions":[],"cost-accuracy":"((14464 33.88567926284722) (27664 26.973263059699658) ())","end":26.973263059699658,"end-est":21.767975841389006,"identifier":"#f","input":"(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))","link":"76-TonioloandLinderEquation13","name":"Toniolo and Linder, Equation (13)","output":"(if (<= t -7.5e+266) (sqrt (+ (* 2.0 (* n (* t U))) (* 2.0 (/ (* n (* l (* U (- (* l -2.0) (/ (* n (* U l)) Om))))) Om)))) (if (<= t 1.2e-279) (sqrt (fma (* n (* 2.0 U)) t (* (fma l -2.0 (- (* U* (* n (/ l Om))) (* U (* n (/ l Om))))) (* n (* (* 2.0 U) (/ l Om)))))) (if (<= t 2.85e-145) (* (sqrt (- t (fma 2.0 (* l (/ l Om)) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt (* 2.0 (* n U)))) (if (<= t 1e+185) (sqrt (fma (* n (* 2.0 U)) t (* (fma l -2.0 (- (* U* (* n (/ l Om))) (* U (* n (/ l Om))))) (* (* n (* 2.0 U)) (/ l Om))))) (* (sqrt (- t (fma 2.0 (* l (/ l Om)) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt (* 2.0 (* n U))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))","start":33.88567926284722,"start-est":31.20662440390003,"status":"imp-start","target":false,"target-prog":"#f","time":23325.782470703125,"vars":["n","U","t","l","Om","U*"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 48.292645707808404) (20552 3.6880694251793944) ())","end":3.6880694251793944,"end-est":2.0531139977483295,"identifier":"#f","input":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","link":"77-TonioloandLinderEquation10","name":"Toniolo and Linder, Equation (10-)","output":"(if (<= k -1.573807105387403e+101) (* 2.0 (* (/ (* (cos k) (* (pow (sin k) -2.0) l)) (* k t)) (/ l k))) (if (<= k 1e-30) (* 2.0 (/ (/ (/ (* (cos k) l) (sin k)) (sin k)) (* t (/ k (/ l k))))) (* 2.0 (* (/ (* (cos k) (* (pow (sin k) -2.0) l)) (* k t)) (/ l k)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","start":48.292645707808404,"start-est":51.257182051898546,"status":"imp-start","target":false,"target-prog":"#f","time":44308.35986328125,"vars":["t","l","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 32.0722883628338) (53828 11.736884026708942) ())","end":11.736884026708942,"end-est":12.837619778248456,"identifier":"#f","input":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","link":"78-TonioloandLinderEquation10","name":"Toniolo and Linder, Equation (10+)","output":"(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ 1.0 (+ 1.0 (pow (/ k t) 2.0))))) 1e+232) (/ (/ l (sin k)) (* (tan k) (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) l) 0.5)))) (/ (* 2.0 (/ (/ l k) t)) (* k (/ (sin k) (/ l (tan k))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))","start":32.0722883628338,"start-est":36.40078961637047,"status":"imp-start","target":false,"target-prog":"#f","time":22905.261474609375,"vars":["t","l","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01175) (6720 0.00775) ())","end":0.00775,"end-est":0.01171875,"identifier":"#f","input":"(* (+ x y) z)","link":"79-TextParsecTokenmakeTokenParserfromparsec319B","name":"Text.Parsec.Token:makeTokenParser from parsec-3.1.9, B","output":"(fma z y (* z x))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* (+ x y) z)","start":0.01175,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2984.59716796875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01425) (320 0.01425) ())","end":0.01425,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x y) 10.0)","link":"80-TextParsecTokenmakeTokenParserfromparsec319A","name":"Text.Parsec.Token:makeTokenParser from parsec-3.1.9, A","output":"(/ (+ x y) 10.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 10.0)","start":0.01425,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2542.154296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.035875) (448 0.035875) ())","end":0.035875,"end-est":0,"identifier":"#f","input":"(* 0.5 (- (* x x) y))","link":"81-SystemRandomMWCDistributionsstandardfrommwcrandom0","name":"System.Random.MWC.Distributions:standard from mwc-random-0.13.3.2","output":"(* 0.5 (- (* x x) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.5 (- (* x x) y))","start":0.035875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2245.704833984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 0.5) x)","link":"82-SystemRandomMWCDistributionsblocksfrommwcrandom013","name":"System.Random.MWC.Distributions:blocks from mwc-random-0.13.3.2","output":"(* x (* x 0.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 0.5) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3511.034912109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01425) (6720 0.006375) ())","end":0.006375,"end-est":0,"identifier":"#f","input":"(+ x (* y (- z x)))","link":"83-SynthBasicsoscSampleBasedAuxfromYampaSynth02","name":"SynthBasics:oscSampleBasedAux from YampaSynth-0.2","output":"(fma y (- z x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (- z x)))","start":0.01425,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4641.87548828125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0860212406251803) (448 0.0860212406251803) ())","end":0.0860212406251803,"end-est":0.08203125,"identifier":"#f","input":"(+ x (* (* y z) z))","link":"84-StatisticsSamplerobustSumVarWeightedfrommathfuncti","name":"Statistics.Sample:robustSumVarWeighted from math-functions-0.1.5.2","output":"(+ x (* z (* y z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* y z) z))","start":0.0860212406251803,"start-est":0.08203125,"status":"ex-start","target":false,"target-prog":"#f","time":7877.06396484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.018536540204100255) (448 0.018536540204100255) ())","end":0.018536540204100255,"end-est":0.0234375,"identifier":"#f","input":"(+ x (/ (- y x) z))","link":"85-StatisticsSampleswelfordMeanfrommathfunctions0152","name":"Statistics.Sample:$swelfordMean from math-functions-0.1.5.2","output":"(+ x (/ (- y x) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- y x) z))","start":0.018536540204100255,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":6355.899169921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.08982312031259014) (6848 0.08982312031259014) ())","end":0.08982312031259014,"end-est":0.0859375,"identifier":"#f","input":"(- (- (* x (log y)) z) y)","link":"86-StatisticsDistributionPoissonclogProbabilityfromma","name":"Statistics.Distribution.Poisson:$clogProbability from math-functions-0.1.5.2","output":"(- (- (* x (log y)) z) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (* x (log y)) z) y)","start":0.08982312031259014,"start-est":0.0859375,"status":"ex-start","target":false,"target-prog":"#f","time":7340.104248046875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.26425) (6784 0.27332312031259015) ())","end":0.27332312031259015,"end-est":0.27734375,"identifier":"#f","input":"(* x (log x))","link":"87-StatisticsDistributionBinomialdirectEntropyfrommat","name":"Statistics.Distribution.Binomial:directEntropy from math-functions-0.1.5.2","output":"(* x (- (log (/ 1.0 x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (log x))","start":0.26425,"start-est":0.28125,"status":"ex-start","target":false,"target-prog":"#f","time":5180.544677734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.09689624062518029) (448 0.09689624062518029) ())","end":0.09689624062518029,"end-est":0.13671875,"identifier":"#f","input":"(* (* x y) (- 1.0 y))","link":"88-StatisticsDistributionBinomialcvariancefrommathfun","name":"Statistics.Distribution.Binomial:$cvariance from math-functions-0.1.5.2","output":"(* (* x y) (- 1.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x y) (- 1.0 y))","start":0.09689624062518029,"start-est":0.13671875,"status":"ex-start","target":false,"target-prog":"#f","time":5316.345703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 0.02275) (1344 0.022594360937770435) ())","end":0.022594360937770435,"end-est":0.015625,"identifier":"#f","input":"(+ (- (- x (* (- y 1.0) z)) (* (- t 1.0) a)) (* (- (+ y t) 2.0) b))","link":"89-StatisticsDistributionBetacentropyfrommathfunction","name":"Statistics.Distribution.Beta:$centropy from math-functions-0.1.5.2","output":"(+ (* a (- 1.0 t)) (+ (* (- b z) y) (+ z (+ (* b (+ t -2.0)) x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- x (* (- y 1.0) z)) (* (- t 1.0) a)) (* (- (+ y t) 2.0) b))","start":0.02275,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":9704.2353515625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 7.479345844923594) (19968 0.10675) ())","end":0.10675,"end-est":0.1328125,"identifier":"#f","input":"(- (+ (* (- x 1.0) (log y)) (* (- z 1.0) (log (- 1.0 y)))) t)","link":"90-StatisticsDistributionBetacdensityfrommathfunction","name":"Statistics.Distribution.Beta:$cdensity from math-functions-0.1.5.2","output":"(- (* (+ x -1.0) (log y)) (fma (log1p (- y)) (- 1.0 z) t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (* (- x 1.0) (log y)) (* (- z 1.0) (log (- 1.0 y)))) t)","start":7.479345844923594,"start-est":7.692460263978648,"status":"imp-start","target":false,"target-prog":"#f","time":9475.35205078125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((39232 16.766413377788187) (71232 3.9895912682474997) ())","end":3.9895912682474997,"end-est":3.0834174518713975,"identifier":"#f","input":"(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)","link":"91-Sphericallawofcosines","name":"Spherical law of cosines","output":"(* (acos (fma (sin phi1) (sin phi2) (* (cos phi2) (* (cos phi1) (fma (sin lambda1) (sin lambda2) (* (cos lambda1) (cos lambda2))))))) R)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)","start":16.766413377788187,"start-est":17.074874056291588,"status":"imp-start","target":false,"target-prog":"#f","time":34683.52001953125,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((159040 41.15925779903804) (85952 15.385280135353861) ())","end":15.385280135353861,"end-est":15.312132976486954,"identifier":"#f","input":"(- (* (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale)) (* (* 4.0 (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)))","link":"92-Simplificationofdiscriminantfromscalerotatedellips","name":"Simplification of discriminant from scale-rotated-ellipse","output":"(* a (* a (fma -8.0 (pow (* (cos (* PI (* 0.005555555555555556 angle))) (/ 1.0 (/ y-scale (* b (/ (sin (* PI (* 0.005555555555555556 angle))) x-scale))))) 2.0) (* (pow (/ b (* y-scale x-scale)) 2.0) (* (+ (pow (cos (* PI (* 0.005555555555555556 angle))) 4.0) (pow (sin (* PI (* 0.005555555555555556 angle))) 4.0)) -4.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale) (/ (/ (* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (/ angle 180.0) PI))) (cos (* (/ angle 180.0) PI))) x-scale) y-scale)) (* (* 4.0 (/ (/ (+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0)) x-scale) x-scale)) (/ (/ (+ (pow (* a (cos (* (/ angle 180.0) PI))) 2.0) (pow (* b (sin (* (/ angle 180.0) PI))) 2.0)) y-scale) y-scale)))","start":41.15925779903804,"start-est":40.66446381520047,"status":"imp-start","target":false,"target-prog":"#f","time":156116.28857421875,"vars":["a","b","angle","x-scale","y-scale"]},{"bits":128,"conversions":[],"cost-accuracy":"((46720 0.33771480648511015) (33472 0.3379648064851102) ())","end":0.3379648064851102,"end-est":0.3245888183790942,"identifier":"#f","input":"(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))","link":"93-Sampletrimmedlogisticonpipi","name":"Sample trimmed logistic on [-pi, pi]","output":"(* s (- (log (+ (/ 1.0 (+ (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ (- 1.0 u) (+ 1.0 (exp (/ PI s)))))) -1.0))))","pre":"(and (and (<= 2.328306437e-10 u) (<= u 1.0)) (and (<= 0.0 s) (<= s 1.0651631)))","prec":"binary64","preprocess":"()","spec":"(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))","start":0.33771480648511015,"start-est":0.3245888183790942,"status":"ex-start","target":false,"target-prog":"#f","time":6822.742919921875,"vars":["u","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((28096 58.136380241123696) (53120 63.04638352477994) ())","end":63.04638352477994,"end-est":63.04638352478296,"identifier":"#f","input":"(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))","link":"94-RumpsexpressionfromStadtherrsawardspeech","name":"Rump's expression from Stadtherr's award speech","output":"(fma 333.75 (pow y 6.0) (fma (* x x) (- (* y (* (* x x) (* y 11.0))) (fma (pow y 4.0) (fma y y 121.0) 2.0)) (fma 5.5 (pow y 8.0) (/ x (* y 2.0)))))","pre":"(and (== x 77617.0) (== y 33096.0))","prec":"binary64","preprocess":"()","spec":"-0.8273960599468214","start":58.136380241123696,"start-est":58.1363802411197,"status":"uni-start","target":false,"target-prog":"#f","time":1576.624267578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.932196568877607) (14080 0.35072779720252206) ())","end":0.35072779720252206,"end-est":0.27572250976844204,"identifier":"#f","input":"(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)","link":"95-RosasTurbineBenchmark","name":"Rosa's TurbineBenchmark","output":"(+ (/ 2.0 (* r r)) (- -1.5 (/ (fma v -0.25 0.375) (/ (- 1.0 v) (pow (* r w) 2.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)","start":12.932196568877607,"start-est":12.416978021883866,"status":"imp-start","target":false,"target-prog":"#f","time":12563.603271484375,"vars":["v","w","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((8128 0.5114115556102915) (142784 0.2892321567026882) ())","end":0.2892321567026882,"end-est":0.27728010231507555,"identifier":"#f","input":"(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))","link":"96-RosasFloatVsDoubleBenchmark","name":"Rosa's FloatVsDoubleBenchmark","output":"(+ x1 (fma 3.0 (/ (- (* x1 (* x1 3.0)) (fma 2.0 x2 x1)) (fma x1 x1 1.0)) (fma x1 (* 3.0 (* (/ x1 (fma x1 x1 1.0)) (fma 2.0 x2 (fma x1 (* x1 3.0) (- x1))))) (* (fma x1 x1 1.0) (+ x1 (+ (fma x2 (fma 2.0 (/ (* x1 (+ (* x1 4.0) (fma 2.0 (/ (- (* 3.0 (* x1 x1)) x1) (fma x1 x1 1.0)) -6.0))) (fma x1 x1 1.0)) (* (* x1 4.0) (/ (- (* 3.0 (* x1 x1)) x1) (pow (fma x1 x1 1.0) 2.0)))) (* 8.0 (/ x2 (* (fma x1 x1 1.0) (/ (fma x1 x1 1.0) (* x1 x2)))))) (+ (* (fma x1 4.0 (fma 2.0 (/ (- (* x1 (* x1 3.0)) x1) (fma x1 x1 1.0)) -6.0)) (* x1 (/ (- (* x1 (* x1 3.0)) x1) (fma x1 x1 1.0)))) (* x1 (* x1 -6.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))","start":0.5114115556102915,"start-est":0.46765156259014473,"status":"ex-start","target":false,"target-prog":"#f","time":36217.927490234375,"vars":["x1","x2"]},{"bits":128,"conversions":[],"cost-accuracy":"((768 18.31632523089784) (704 1.4184334333732658) ())","end":1.4184334333732658,"end-est":1.0456419349999333,"identifier":"#f","input":"(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))","link":"97-RosasDopplerBench","name":"Rosa's DopplerBench","output":"(/ (/ v (+ t1 u)) (- -1.0 (/ u t1)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))","start":18.31632523089784,"start-est":18.257004625019658,"status":"imp-start","target":false,"target-prog":"#f","time":6731.6611328125,"vars":["u","v","t1"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.264636842188131) (576 0.18714644413776232) ())","end":0.18714644413776232,"end-est":0.16796875,"identifier":"#f","input":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","link":"98-RosasBenchmark","name":"Rosa's Benchmark","output":"(* x (+ 0.954929658551372 (* (* x x) -0.12900613773279798)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))","start":0.264636842188131,"start-est":0.21484375,"status":"ex-start","target":false,"target-prog":"#f","time":5099.827880859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.003625) (13120 0.003625) ())","end":0.003625,"end-est":0,"identifier":"#f","input":"(- (pow x 4.0) (pow y 4.0))","link":"99-Radioactiveexchangebetweentwosurfaces","name":"Radioactive exchange between two surfaces","output":"(- (pow x 4.0) (pow y 4.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (pow x 4.0) (pow y 4.0))","start":0.003625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2821.8671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 52.3953059013445) (53440 1.552631549446122) ())","end":1.552631549446122,"end-est":1.7232786130491409,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"100-Quadraticrootswiderange","name":"Quadratic roots, wide range","output":"(fma -0.25 (/ (* (* (pow a 4.0) (pow c 4.0)) 20.0) (* a (pow b 7.0))) (- (* (/ (pow c 3.0) (pow b 5.0)) (* -2.0 (* a a))) (fma (/ (* c c) (pow b 3.0)) a (/ c b))))","pre":"(and (and (and (< 4.930380657631324e-32 a) (< a 2.028240960365167e+31)) (and (< 4.930380657631324e-32 b) (< b 2.028240960365167e+31))) (and (< 4.930380657631324e-32 c) (< c 2.028240960365167e+31)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":52.3953059013445,"start-est":51.587776776545184,"status":"imp-start","target":false,"target-prog":"#f","time":9789.966064453125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 28.222799155908085) (60868 5.345400196132465) ())","end":5.345400196132465,"end-est":4.50841766449567,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"101-Quadraticrootsnarrowrange","name":"Quadratic roots, narrow range","output":"(if (<= (/ (- (sqrt (+ (* b b) (* c (* a -4.0)))) b) (* a 2.0)) -160.0) (* (fma (pow (fma b b (* (* a c) -4.0)) 0.25) (pow (fma b b (* (* a c) -4.0)) 0.25) (- b)) (/ 0.5 a)) (- (fma -2.0 (* (/ (pow c 3.0) (pow b 5.0)) (* a a)) (* (/ -0.25 b) (* (pow a 3.0) (* (/ (pow c 4.0) (pow b 6.0)) 20.0)))) (fma (/ (* c c) (pow b 3.0)) a (/ c b))))","pre":"(and (and (and (< 1.0536712127723509e-8 a) (< a 94906265.62425156)) (and (< 1.0536712127723509e-8 b) (< b 94906265.62425156))) (and (< 1.0536712127723509e-8 c) (< c 94906265.62425156)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":28.222799155908085,"start-est":29.935455856740628,"status":"imp-start","target":false,"target-prog":"#f","time":9642.3291015625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 43.89522514236943) (53440 3.055833159876806) ())","end":3.055833159876806,"end-est":2.946419742394413,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"102-Quadraticrootsmediumrange","name":"Quadratic roots, medium range","output":"(- (fma -0.25 (* (/ (pow a 3.0) b) (* (/ (pow c 4.0) (pow b 6.0)) 20.0)) (* (/ (pow c 3.0) (pow b 5.0)) (* a (* a -2.0)))) (fma (/ c (/ (pow b 3.0) c)) a (/ c b)))","pre":"(and (and (and (< 1.1102230246251565e-16 a) (< a 9007199254740992.0)) (and (< 1.1102230246251565e-16 b) (< b 9007199254740992.0))) (and (< 1.1102230246251565e-16 c) (< c 9007199254740992.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":43.89522514236943,"start-est":44.34121136442408,"status":"imp-start","target":false,"target-prog":"#f","time":10783.39404296875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35858459675237) (13896 11.153524866678929) ())","end":11.153524866678929,"end-est":8.107225346096225,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"103-Quadraticrootsfullrange","name":"Quadratic roots, full range","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (- b (sqrt (fma b b (* c (* a -4.0))))) (* a -2.0)) (/ (- c) b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.35858459675237,"start-est":36.50359847605632,"status":"imp-start","target":false,"target-prog":"#f","time":15080.97021484375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009948120312590146) (448 0.009948120312590146) ())","end":0.009948120312590146,"end-est":0.01171875,"identifier":"#f","input":"(/ (+ x 1.0) (- 1.0 x))","link":"104-Preludeatanhfromfaybase02001","name":"Prelude:atanh from fay-base-0.20.0.1","output":"(/ (+ x 1.0) (- 1.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x 1.0) (- 1.0 x))","start":0.009948120312590146,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":4116.556396484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00075) (320 0.0005) ())","end":0.0005,"end-est":0,"identifier":"#f","input":"(+ (+ x y) z)","link":"105-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, I","output":"(+ x (+ y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x y) z)","start":0.00075,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2021.068115234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.016625) (6976 0.013448120312590146) ())","end":0.013448120312590146,"end-est":0.00390625,"identifier":"#f","input":"(* (+ x y) (- 1.0 z))","link":"106-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, H","output":"(fma (- 1.0 z) y (- x (* z x)))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* (+ x y) (- 1.0 z))","start":0.016625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":4750.00341796875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.017625) (13248 0.009) ())","end":0.009,"end-est":0.0078125,"identifier":"#f","input":"(* (+ x y) (+ z 1.0))","link":"107-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, G","output":"(fma y (+ z 1.0) (fma x z x))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* (+ x y) (+ z 1.0))","start":0.017625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":4458.35986328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((12992 0.0065) (12992 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(sqrt (fabs (- x y)))","link":"108-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, C","output":"(sqrt (fabs (- x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (fabs (- x y)))","start":0.0065,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2719.43017578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.050902386813532846) (832 0.03782660856216138) ())","end":0.03782660856216138,"end-est":0.015625,"identifier":"#f","input":"(/ (- (+ x y) z) (* t 2.0))","link":"109-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, B","output":"(+ (* 0.5 (/ (- y z) t)) (* 0.5 (/ x t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ x y) z) (* t 2.0))","start":0.050902386813532846,"start-est":0.2535330431922998,"status":"ex-start","target":false,"target-prog":"#f","time":6577.63037109375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 0.007625) (6592 0.007625) ())","end":0.007625,"end-est":0,"identifier":"#f","input":"(sqrt (+ x y))","link":"110-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, A","output":"(sqrt (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ x y))","start":0.007625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2377.22802734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7616 0.13716177026409107) (33088 0.11159316088638672) ())","end":0.11159316088638672,"end-est":0.08431625976844201,"identifier":"#f","input":"(* (- a (/ 1.0 3.0)) (+ 1.0 (* (/ 1.0 (sqrt (* 9.0 (- a (/ 1.0 3.0))))) rand)))","link":"111-Octave38oct_fill_randg","name":"Octave 3.8, oct_fill_randg","output":"(+ (fma (/ rand (sqrt (fma a 9.0 -3.0))) a (* (/ rand (sqrt (fma a 9.0 -3.0))) -0.3333333333333333)) (+ a -0.3333333333333333))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (- a (/ 1.0 3.0)) (+ 1.0 (* (/ 1.0 (sqrt (* 9.0 (- a (/ 1.0 3.0))))) rand)))","start":0.13716177026409107,"start-est":0.11556625976844201,"status":"ex-start","target":false,"target-prog":"#f","time":9129.497802734375,"vars":["a","rand"]},{"bits":128,"conversions":[],"cost-accuracy":"((1600 46.42157353910291) (576 0.2885690538214454) ())","end":0.2885690538214454,"end-est":0.36517983094120676,"identifier":"#f","input":"(/ (/ (* (* i i) (* i i)) (* (* 2.0 i) (* 2.0 i))) (- (* (* 2.0 i) (* 2.0 i)) 1.0))","link":"112-Octave38jcobi4ascalled","name":"Octave 3.8, jcobi/4, as called","output":"(/ 0.25 (+ 4.0 (/ -1.0 (* i i))))","pre":"(> i 0.0)","prec":"binary64","preprocess":"()","spec":"(/ (/ (* (* i i) (* i i)) (* (* 2.0 i) (* 2.0 i))) (- (* (* 2.0 i) (* 2.0 i)) 1.0))","start":46.42157353910291,"start-est":47.64517434819054,"status":"imp-start","target":false,"target-prog":"#f","time":5489.480712890625,"vars":["i"]},{"bits":128,"conversions":[],"cost-accuracy":"((3392 54.179509012945275) (37700 10.102263765636947) ())","end":10.102263765636947,"end-est":11.231890225047916,"identifier":"#f","input":"(/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i)))) (- (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i))) 1.0))","link":"113-Octave38jcobi4","name":"Octave 3.8, jcobi/4","output":"(if (<= (/ (/ (* (* i (+ i (+ alpha beta))) (+ (* i (+ i (+ alpha beta))) (* alpha beta))) (* (+ (+ alpha beta) (* i 2.0)) (+ (+ alpha beta) (* i 2.0)))) (+ (* (+ (+ alpha beta) (* i 2.0)) (+ (+ alpha beta) (* i 2.0))) -1.0)) INFINITY) (/ 1.0 (/ (+ (pow (+ alpha (fma i 2.0 beta)) 2.0) -1.0) (* (* (fma i (+ alpha (+ i beta)) (* alpha beta)) (pow (+ alpha (fma i 2.0 beta)) -2.0)) (* i (+ alpha (+ i beta)))))) (+ (+ 0.0625 (* 0.0625 (/ (+ (* beta 2.0) (* alpha 2.0)) i))) (* (/ (+ alpha beta) i) -0.125)))","pre":"(and (and (> alpha -1.0) (> beta -1.0)) (> i 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i)))) (- (* (+ (+ alpha beta) (* 2.0 i)) (+ (+ alpha beta) (* 2.0 i))) 1.0))","start":54.179509012945275,"start-est":54.547538769536885,"status":"imp-start","target":false,"target-prog":"#f","time":15350.375732421875,"vars":["alpha","beta","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((2240 3.692413550395336) (23232 2.1379510336948195) ())","end":2.1379510336948195,"end-est":17.889490727751774,"identifier":"#f","input":"(/ (/ (/ (+ (+ (+ alpha beta) (* beta alpha)) 1.0) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ (+ alpha beta) (* 2.0 1.0)) 1.0))","link":"114-Octave38jcobi3","name":"Octave 3.8, jcobi/3","output":"(/ (/ (+ (* (+ 1.0 (* (+ 1.0 (/ -1.0 (+ beta 2.0))) alpha)) (/ (+ 1.0 beta) (+ beta 2.0))) (* (/ (+ 1.0 beta) (+ beta 2.0)) (* (* alpha alpha) (+ (/ 0.5 (pow (+ beta 2.0) 2.0)) (fma 0.5 (pow (+ 1.0 (/ -1.0 (+ beta 2.0))) 2.0) -0.5))))) (+ 2.0 (+ beta alpha))) (+ 1.0 (+ 2.0 (+ beta alpha))))","pre":"(and (> alpha -1.0) (> beta -1.0))","prec":"binary64","preprocess":"((sort alpha beta))","spec":"(/ (/ (/ (+ (+ (+ alpha beta) (* beta alpha)) 1.0) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ alpha beta) (* 2.0 1.0))) (+ (+ (+ alpha beta) (* 2.0 1.0)) 1.0))","start":3.692413550395336,"start-est":2.116230029305326,"status":"imp-start","target":false,"target-prog":"#f","time":15053.531982421875,"vars":["alpha","beta"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 24.013618228548797) (35204 1.359074840563446) ())","end":1.359074840563446,"end-est":1.5416620914796755,"identifier":"#f","input":"(/ (+ (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) 1.0) 2.0)","link":"115-Octave38jcobi2","name":"Octave 3.8, jcobi/2","output":"(if (<= (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ 2.0 (+ (+ alpha beta) (* 2.0 i)))) -0.99995) (/ (/ (fma i 4.0 (fma beta 2.0 2.0)) alpha) 2.0) (/ (fma (+ alpha beta) (/ (cbrt (pow (/ (- beta alpha) (fma 2.0 i (+ alpha beta))) 3.0)) (+ alpha (fma 2.0 i (+ beta 2.0)))) 1.0) 2.0))","pre":"(and (and (> alpha -1.0) (> beta -1.0)) (> i 0.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2.0 i))) (+ (+ (+ alpha beta) (* 2.0 i)) 2.0)) 1.0) 2.0)","start":24.013618228548797,"start-est":25.247646648282803,"status":"imp-start","target":false,"target-prog":"#f","time":25691.351806640625,"vars":["alpha","beta","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 16.194358153300033) (15620 0.8377633097374214) ())","end":0.8377633097374214,"end-est":0.03163293782406456,"identifier":"#f","input":"(/ (+ (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 1.0) 2.0)","link":"116-Octave38jcobi1","name":"Octave 3.8, jcobi/1","output":"(if (<= (/ (- beta alpha) (+ 2.0 (+ beta alpha))) -0.999) (fma 0.5 (* (+ (/ (pow (+ beta 2.0) 2.0) (* alpha alpha)) 1.0) (/ (+ 2.0 (+ beta beta)) alpha)) (* -0.5 (* (+ beta 2.0) (/ (+ 2.0 (+ beta beta)) (* alpha alpha))))) (fma (pow (/ (- -2.0 (+ beta alpha)) (- beta alpha)) -1.0) -0.5 0.5))","pre":"(and (> alpha -1.0) (> beta -1.0))","prec":"binary64","preprocess":"()","spec":"(/ (+ (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 1.0) 2.0)","start":16.194358153300033,"start-est":15.652698386118857,"status":"imp-start","target":false,"target-prog":"#f","time":11041.4228515625,"vars":["alpha","beta"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0014240396778473449) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* (* x x) 2.0) 1.0)","link":"117-NumericSpecFunctionslogGammaCorrectionfrommathfunc","name":"Numeric.SpecFunctions:logGammaCorrection from math-functions-0.1.5.2","output":"(fma x (* x 2.0) -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* x x) 2.0) 1.0)","start":0.0014240396778473449,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2345.6689453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.009375) (6976 0.006) ())","end":0.006,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (* x (- y 1.0)) (* y 0.5)) 0.918938533204673)","link":"118-NumericSpecFunctionslogGammafrommathfunctions0152A","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, A","output":"(+ (fma (+ y -1.0) x (* y -0.5)) 0.918938533204673)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- y 1.0)) (* y 0.5)) 0.918938533204673)","start":0.009375,"start-est":0.02734375,"status":"ex-start","target":false,"target-prog":"#f","time":4845.236572265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((2112 29.063097435038472) (86344 11.203081052931624) ())","end":11.203081052931624,"end-est":9.367626242198249,"identifier":"#f","input":"(/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i))","link":"119-NumericSpecFunctionslogGammafrommathfunctions0152","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2","output":"(if (<= y -1.2670505293649099e+74) (+ x (/ (- z (* x a)) y)) (if (<= y 1.6211429392524944e+63) (+ (/ t (fma y (fma y (fma y (+ y a) b) c) i)) (+ (* x (/ (pow y 4.0) (fma y (fma y (fma y (+ y a) b) c) i))) (* (pow (/ (fma y (fma y (fma y (+ y a) b) c) i) y) -1.0) (fma y (fma y z 27464.7644705) 230661.510616)))) (+ x (/ (- z (* x a)) y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i))","start":29.063097435038472,"start-est":28.264581953314092,"status":"imp-start","target":false,"target-prog":"#f","time":21846.33447265625,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((14016 0.11601167719554849) (32832 0.11351167719554849) ())","end":0.11351167719554849,"end-est":0.1015625,"identifier":"#f","input":"(+ (+ (+ (+ (+ (* x (log y)) z) t) a) (* (- b 0.5) (log c))) (* y i))","link":"120-NumericSpecFunctionslogBetafrommathfunctions0152B","name":"Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, B","output":"(+ t (+ (fma (+ b -0.5) (log c) a) (fma x (log y) (fma y i z))))","pre":"TRUE","prec":"binary64","preprocess":"((sort z t a))","spec":"(+ (+ (+ (+ (+ (* x (log y)) z) t) a) (* (- b 0.5) (log c))) (* y i))","start":0.11601167719554849,"start-est":0.1015625,"status":"ex-start","target":false,"target-prog":"#f","time":24720.9189453125,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0105) (6720 0.0105) ())","end":0.0105,"end-est":0.0078125,"identifier":"#f","input":"(* x (- 1.0 (* x 0.5)))","link":"121-NumericSpecFunctionslog1pfrommathfunctions0152B","name":"Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, B","output":"(* x (fma x -0.5 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* x 0.5)))","start":0.0105,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2848.78857421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.097125) (6784 0.086) ())","end":0.086,"end-est":0.09765625,"identifier":"#f","input":"(* x (- 1.0 (* x y)))","link":"122-NumericSpecFunctionslog1pfrommathfunctions0152A","name":"Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, A","output":"(fma x (* x (- y)) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* x y)))","start":0.097125,"start-est":0.109375,"status":"ex-start","target":false,"target-prog":"#f","time":4365.857177734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.015352619458047539) (26368 0.01523439067243818) ())","end":0.01523439067243818,"end-est":0.01171875,"identifier":"#f","input":"(- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x)","link":"123-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, C","output":"(- (pow (/ (fma x (fma x 0.04481 0.99229) 1.0) (fma x 0.27061 2.30753)) -1.0) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x)","start":0.015352619458047539,"start-est":0.024101269536884032,"status":"ex-start","target":false,"target-prog":"#f","time":7205.029052734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.11087848824957125) (13120 0.10805594998228499) ())","end":0.10805594998228499,"end-est":0.1015625,"identifier":"#f","input":"(- 1.0 (* x (+ 0.253 (* x 0.12))))","link":"124-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, A","output":"(fma x (fma x -0.12 -0.253) 1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* x (+ 0.253 (* x 0.12))))","start":0.11087848824957125,"start-est":0.109375,"status":"ex-start","target":false,"target-prog":"#f","time":5212.111083984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.1341221599904375) (448 0.08126159464261498) ())","end":0.08126159464261498,"end-est":0.0703125,"identifier":"#f","input":"(/ (- (* x x) 3.0) 6.0)","link":"125-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, H","output":"(- -0.5 (* x (/ x -6.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x x) 3.0) 6.0)","start":0.1341221599904375,"start-est":0.33203125,"status":"ex-start","target":false,"target-prog":"#f","time":4195.013671875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.0897259193652572) (13120 0.0893509193652572) ())","end":0.0893509193652572,"end-est":0.12109375,"identifier":"#f","input":"(+ (- 1.0 x) (* y (sqrt x)))","link":"126-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, E","output":"(- (fma y (sqrt x) 1.0) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- 1.0 x) (* y (sqrt x)))","start":0.0897259193652572,"start-est":0.12109375,"status":"ex-start","target":false,"target-prog":"#f","time":5980.487060546875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.015352619458047539) (26368 0.01523439067243818) ())","end":0.01523439067243818,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* (+ 0.99229 (* x 0.04481)) x))))","link":"127-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, D","output":"(- x (pow (/ (fma x (fma x -0.04481 -0.99229) -1.0) (fma x -0.27061 -2.30753)) -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* (+ 0.99229 (* x 0.04481)) x))))","start":0.015352619458047539,"start-est":0.024101269536884032,"status":"ex-start","target":false,"target-prog":"#f","time":7976.35302734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 0.08837811628052147) (26304 0.08382681207474346) ())","end":0.08382681207474346,"end-est":0.11166000976844201,"identifier":"#f","input":"(* 0.70711 (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x))","link":"128-NumericSpecFunctionsinvErfcfrommathfunctions0152B","name":"Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, B","output":"(fma x -0.70711 (/ (fma x 0.1913510371 1.6316775383) (fma x (fma x 0.04481 0.99229) 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.70711 (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x))","start":0.08837811628052147,"start-est":0.12404252930532605,"status":"ex-start","target":false,"target-prog":"#f","time":10895.69970703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 0.08872896288740177) (19648 0.08765584257481164) ())","end":0.08765584257481164,"end-est":0.0859375,"identifier":"#f","input":"(+ (- (- (* x (log y)) y) z) (log t))","link":"129-NumericSpecFunctionsincompleteGammafrommathfunctio","name":"Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, A","output":"(- (fma x (log y) (log t)) (+ y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- (* x (log y)) y) z) (log t))","start":0.08872896288740177,"start-est":0.0859375,"status":"ex-start","target":false,"target-prog":"#f","time":9866.140625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 2.083100098503925) (26368 0.21559584554103123) ())","end":0.21559584554103123,"end-est":0.265625,"identifier":"#f","input":"(* x (exp (+ (* y (- (log z) t)) (* a (- (log (- 1.0 z)) b)))))","link":"130-NumericSpecFunctionsincompleteBetaApproxfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, B","output":"(* x (exp (fma a (- (log1p (- z)) b) (* y (- (log z) t)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (exp (+ (* y (- (log z) t)) (* a (- (log (- 1.0 z)) b)))))","start":2.083100098503925,"start-est":1.3496273758713984,"status":"imp-start","target":false,"target-prog":"#f","time":25212.540283203125,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 14.244554410108467) (16584 5.3067862070699805) ())","end":5.3067862070699805,"end-est":3.7525760750124397,"identifier":"#f","input":"(+ x (* (- y z) (/ (- t x) (- a z))))","link":"131-NumericSignalinterpolatefromhsignal0271","name":"Numeric.Signal:interpolate   from hsignal-0.2.7.1","output":"(if (<= (+ x (* (- y z) (/ (- t x) (- a z)))) -1e-304) (fma (- t x) (/ (- y z) (- a z)) x) (if (<= (+ x (* (- y z) (/ (- t x) (- a z)))) 5e-184) (fma y (- (/ t (- a z)) (/ x (- a z))) (+ t (fma a (/ (- t x) z) (* (- t x) (* (/ a z) (/ a z)))))) (fma y (- (/ t (- a z)) (pow (/ (- a z) x) -1.0)) (- x (/ z (/ (- a z) (- t x)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y z) (/ (- t x) (- a z))))","start":14.244554410108467,"start-est":14.310070949473271,"status":"imp-start","target":false,"target-prog":"#f","time":13814.52490234375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.1799693609377704) (6848 0.1799693609377704) ())","end":0.1799693609377704,"end-est":0.171875,"identifier":"#f","input":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","link":"132-NumericLogclog1pfromlogdomain01021B","name":"Numeric.Log:$clog1p from log-domain-0.10.2.1, B","output":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ 1.0 (sqrt (+ x 1.0))))","start":0.1799693609377704,"start-est":0.171875,"status":"ex-start","target":false,"target-prog":"#f","time":7477.8798828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.009448120312590146) (6720 0.004948120312590144) ())","end":0.004948120312590144,"end-est":0.015625,"identifier":"#f","input":"(+ (+ (* x y) x) y)","link":"133-NumericLogcexpm1fromlogdomain01021B","name":"Numeric.Log:$cexpm1 from log-domain-0.10.2.1, B","output":"(+ y (fma y x x))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(+ (+ (* x y) x) y)","start":0.009448120312590146,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":4784.65185546875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.015875) (13120 0.015875) ())","end":0.015875,"end-est":0.0078125,"identifier":"#f","input":"(/ (fabs (- x y)) (fabs y))","link":"134-NumericLinearAlgebraUtilformatSparsefromhmatrix016","name":"Numeric.LinearAlgebra.Util:formatSparse from hmatrix-0.16.1.5","output":"(/ (fabs (- x y)) (fabs y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (fabs (- x y)) (fabs y))","start":0.015875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2894.891357421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.012125) (320 0.0003231203125901445) ())","end":0.0003231203125901445,"end-est":0,"identifier":"#f","input":"(/ (* x y) 2.0)","link":"135-NumericIntervalInternalscalefromintervals071B","name":"Numeric.Interval.Internal:scale from intervals-0.7.1, B","output":"(* x (/ y 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) 2.0)","start":0.012125,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2404.09521484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.024) (320 0.006) ())","end":0.006,"end-est":0,"identifier":"#f","input":"(* x (+ y y))","link":"136-NumericIntegrationTanhSinhsimpsonfromintegration02","name":"Numeric.Integration.TanhSinh:simpson  from integration-0.2.1","output":"(* 2.0 (* y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ y y))","start":0.024,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2392.263427734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.007625) (320 0.007625) ())","end":0.007625,"end-est":0,"identifier":"#f","input":"(/ x (- 1.0 x))","link":"137-NumericIntegrationTanhSinhnonNegativefromintegrati","name":"Numeric.Integration.TanhSinh:nonNegative from integration-0.2.1","output":"(/ x (- 1.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (- 1.0 x))","start":0.007625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1823.75927734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7680 14.103396295159616) (27024 0.9566323590469412) ())","end":0.9566323590469412,"end-est":0.5038803119714306,"identifier":"#f","input":"(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))","link":"138-NMSESection61mentionedB","name":"NMSE Section 6.1 mentioned, B","output":"(if (<= b -2.3725984136378998e+107) (* 0.5 (/ (/ PI b) (* b a))) (if (<= b -5e-88) (* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (+ (/ 1.0 a) (/ -1.0 b))) (if (<= b 1e-93) (* (/ PI a) (/ 0.5 (* b a))) (if (<= b 3.1002187980910474e+80) (/ (fma PI (/ -1.0 b) (/ PI a)) (* 2.0 (fma b b (* a (- a))))) (* 0.5 (/ (/ PI b) (* b a)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))","start":14.103396295159616,"start-est":14.71463498957843,"status":"imp-start","target":false,"target-prog":"#f","time":8164.338623046875,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((14528 29.763045460163216) (20160 0.5008896212797336) ())","end":0.5008896212797336,"end-est":0.1860971239033163,"identifier":"#f","input":"(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)","link":"139-NMSESection61mentionedA","name":"NMSE Section 6.1 mentioned, A","output":"(/ (+ (+ (exp (- x)) (* x (exp (- x)))) (/ (+ x 1.0) (exp x))) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)","start":29.763045460163216,"start-est":30.27462146584641,"status":"imp-start","target":false,"target-prog":"#f","time":9546.35791015625,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((26560 0.5658956797104888) (65088 0.5901978742805708) ())","end":0.5901978742805708,"end-est":0.4215812988422101,"identifier":"#f","input":"(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))","link":"140-MigdaletalEquation64","name":"Migdal et al, Equation (64)","output":"(* 0.5 (+ (/ a2 (/ (log (sqrt (exp (/ (sqrt 2.0) (cos th))))) a2)) (/ (* a1 a1) (log (sqrt (exp (/ (sqrt 2.0) (cos th))))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort a1 a2))","spec":"(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))","start":0.5658956797104888,"start-est":0.5205650879159782,"status":"ex-start","target":false,"target-prog":"#f","time":14713.701416015625,"vars":["a1","a2","th"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.48346560335252464) (32960 0.4177505800798601) ())","end":0.4177505800798601,"end-est":0.240566259768442,"identifier":"#f","input":"(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))","link":"141-MigdaletalEquation51","name":"Migdal et al, Equation (51)","output":"(* (pow (* PI (* n 2.0)) (* k -0.5)) (* (sqrt (* PI (* n 2.0))) (pow k -0.5)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))","start":0.48346560335252464,"start-est":0.40362758966101653,"status":"ex-start","target":false,"target-prog":"#f","time":10129.176513671875,"vars":["k","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((39296 0.8335064015995128) (142400 0.2884607402700702) ())","end":0.2884607402700702,"end-est":0.2737334748570669,"identifier":"#f","input":"(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))","link":"142-Midpointonagreatcircle","name":"Midpoint on a great circle","output":"(+ lambda1 (atan2 (* (cos phi2) (fma (* (cbrt (* (cos lambda2) (sin lambda1))) (cbrt (* (cos lambda2) (sin lambda1)))) (cbrt (* (cos lambda2) (sin lambda1))) (* (cos lambda1) (- (sin lambda2))))) (fma (cos phi2) (fma (cos lambda1) (cos lambda2) (* (sin lambda1) (sin lambda2))) (cos phi1))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))","start":0.8335064015995128,"start-est":1.3829727503651401,"status":"ex-start","target":false,"target-prog":"#f","time":23990.619873046875,"vars":["lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((19968 16.869816707779883) (19776 0.07279248125036057) ())","end":0.07279248125036057,"end-est":0.04296875,"identifier":"#f","input":"(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)","link":"143-MaksimovandKolovskyEquation4","name":"Maksimov and Kolovsky, Equation (4)","output":"(fma (* 2.0 (sinh l)) (* (cos (* K 0.5)) J) U)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)","start":16.869816707779883,"start-est":16.90019690084897,"status":"imp-start","target":false,"target-prog":"#f","time":16094.10205078125,"vars":["J","l","K","U"]},{"bits":128,"conversions":[],"cost-accuracy":"((27200 15.715875280677407) (39936 1.3022237220608146) ())","end":1.3022237220608146,"end-est":0.8627841083526144,"identifier":"#f","input":"(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))","link":"144-MaksimovandKolovskyEquation32","name":"Maksimov and Kolovsky, Equation (32)","output":"(* (expm1 (fma -0.0625 (* (* K m) (* K m)) (log 2.0))) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))","pre":"TRUE","prec":"binary64","preprocess":"((sort m n))","spec":"(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))","start":15.715875280677407,"start-est":13.734338736241272,"status":"imp-start","target":false,"target-prog":"#f","time":12737.16259765625,"vars":["K","m","n","M","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((26880 18.07781372187554) (20880 9.12303262209815) ())","end":9.12303262209815,"end-est":6.883211666931814,"identifier":"#f","input":"(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))","link":"145-MaksimovandKolovskyEquation3","name":"Maksimov and Kolovsky, Equation (3)","output":"(if (<= J -1.4861515777192972e-152) (* J (* (hypot 1.0 (/ U (* (cos (/ K 2.0)) (* J 2.0)))) (* (cos (/ K 2.0)) -2.0))) (if (<= J -1.306477816240861e-172) (fma 2.0 (* (/ J (/ U J)) (pow (cos (* K 0.5)) 2.0)) U) (if (<= J -1.8885869417417532e-235) (* J (* (hypot 1.0 (/ U (* (cos (/ K 2.0)) (* J 2.0)))) (* (cos (/ K 2.0)) -2.0))) (if (<= J 6.366851530521697e-240) (- (/ (pow (cos (* K 0.5)) 2.0) (/ (/ (/ U J) J) -2.0)) U) (* J (* (hypot 1.0 (/ U (* (cos (/ K 2.0)) (* J 2.0)))) (* (cos (/ K 2.0)) -2.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))","start":18.07781372187554,"start-est":20.83984375,"status":"imp-start","target":false,"target-prog":"#f","time":18825.155517578125,"vars":["J","K","U"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ (+ (+ x x) x) x) x)","link":"146-Mainifrom","name":"Main:i from ","output":"(* x 5.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ x x) x) x) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1515.544677734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.014073120312590144) (6848 0.013625) ())","end":0.013625,"end-est":0.01171875,"identifier":"#f","input":"(+ x (* y (+ z x)))","link":"147-Mainbigenough2fromA","name":"Main:bigenough2 from A","output":"(fma (+ y 1.0) x (* y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (+ z x)))","start":0.014073120312590144,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":3702.7763671875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.011165241011860921) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (* x x))","link":"148-Mainbigenough1fromB","name":"Main:bigenough1 from B","output":"(fma x x x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* x x))","start":0.011165241011860921,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":1449.853515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 29.51315031896346) (26568 0.29382130763790076) ())","end":0.29382130763790076,"end-est":0,"identifier":"#f","input":"(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)","link":"149-LogisticfunctionfromLakshayGarg","name":"Logistic function from Lakshay Garg","output":"(if (<= (* -2.0 x) -1000000.0) (+ (/ 2.0 (+ 1.0 (exp (/ x -0.5)))) -1.0) (if (<= (* -2.0 x) 0.0002) (fma -0.3333333333333333 (pow x 3.0) (fma 0.13333333333333333 (pow x 5.0) x)) (+ (/ 2.0 (+ 1.0 (exp (/ x -0.5)))) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)","start":29.51315031896346,"start-est":27.720908701775,"status":"imp-start","target":false,"target-prog":"#f","time":5209.248779296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 0.019888253465039876) (6912 0.019888253465039876) ())","end":0.019888253465039876,"end-est":0.01171875,"identifier":"#f","input":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","link":"150-Logisticfunction","name":"Logistic function","output":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","pre":"(and (<= 0.0 s) (<= s 1.0651631))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ 1.0 (exp (/ (- x) s))))","start":0.019888253465039876,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":4128.49853515625,"vars":["x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((39680 0.04615032449416817) (26112 0.038223841065239114) ())","end":0.038223841065239114,"end-est":0.05381740357496845,"identifier":"#f","input":"(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))","link":"151-Logisticdistribution","name":"Logistic distribution","output":"(/ (exp (- (log (fma (cosh (/ x s)) 2.0 2.0)))) s)","pre":"(and (<= 0.0 s) (<= s 1.0651631))","prec":"binary64","preprocess":"()","spec":"(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))","start":0.04615032449416817,"start-est":0.0723911828802945,"status":"ex-start","target":false,"target-prog":"#f","time":6284.70703125,"vars":["x","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.026686481637041213) (19776 0.015202642014159332) ())","end":0.015202642014159332,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (+ (* x y) (* z t)) (* a b)) (* c i))","link":"152-LinearV4cdotfromlinear11913C","name":"Linear.V4:$cdot from linear-1.19.1.3, C","output":"(fma x y (fma z t (fma c i (* a b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x y) (* z t)) (* a b)) (* c i))","start":0.026686481637041213,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":8905.864013671875,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0095) (6784 0.00425) ())","end":0.00425,"end-est":0,"identifier":"#f","input":"(- (* x y) (* z t))","link":"153-LinearV3crossfromlinear11913","name":"Linear.V3:cross from linear-1.19.1.3","output":"(fma y x (* z (- t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x y) (* z t))","start":0.0095,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":4725.0595703125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.01652124062518029) (13248 0.008698120312590145) ())","end":0.008698120312590145,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* x y) (* z t)) (* a b))","link":"154-LinearV3cdotfromlinear11913B","name":"Linear.V3:$cdot from linear-1.19.1.3, B","output":"(fma x y (fma t z (* a b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x y) (* z t)) (* a b))","start":0.01652124062518029,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":6576.25048828125,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.010375) (6720 0.005125) ())","end":0.005125,"end-est":0,"identifier":"#f","input":"(+ (* x y) (* z t))","link":"155-LinearV2cdotfromlinear11913A","name":"Linear.V2:$cdot from linear-1.19.1.3, A","output":"(fma x y (* z t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* z t))","start":0.010375,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3677.344482421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.014136842188131013) (13120 0.014136842188131013) ())","end":0.014136842188131013,"end-est":0,"identifier":"#f","input":"(* (cos x) (/ (sinh y) y))","link":"156-LinearQuaternioncsinfromlinear11913","name":"Linear.Quaternion:$csin from linear-1.19.1.3","output":"(* (cos x) (/ (sinh y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (cos x) (/ (sinh y) y))","start":0.014136842188131013,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":8039.76708984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.13231088186597836) (6720 0.13231088186597836) ())","end":0.13231088186597836,"end-est":0.13671875,"identifier":"#f","input":"(* x (/ (sin y) y))","link":"157-LinearQuaternioncexpfromlinear11913","name":"Linear.Quaternion:$cexp from linear-1.19.1.3","output":"(* x (/ (sin y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (/ (sin y) y))","start":0.13231088186597836,"start-est":0.13671875,"status":"ex-start","target":false,"target-prog":"#f","time":6303.566650390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.04190808281331129) (13120 0.04190808281331129) ())","end":0.04190808281331129,"end-est":0.26009750976844204,"identifier":"#f","input":"(* (sin x) (/ (sinh y) y))","link":"158-LinearQuaternionccosfromlinear11913","name":"Linear.Quaternion:$ccos from linear-1.19.1.3","output":"(* (sin x) (/ (sinh y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (sin x) (/ (sinh y) y))","start":0.04190808281331129,"start-est":0.26009750976844204,"status":"ex-start","target":false,"target-prog":"#f","time":11602.46533203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.065125) (13120 0.059375) ())","end":0.059375,"end-est":0.0546875,"identifier":"#f","input":"(+ (* (+ (* x y) z) y) t)","link":"159-LanguageHaskellHsColourColourHighlightunbasefromhs","name":"Language.Haskell.HsColour.ColourHighlight:unbase from hscolour-1.23","output":"(fma y (fma x y z) t)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (+ (* x y) z) y) t)","start":0.065125,"start-est":0.0546875,"status":"ex-start","target":false,"target-prog":"#f","time":10231.223388671875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((39360 0.7073911602770115) (39360 0.7378530075485789) ())","end":0.7378530075485789,"end-est":0.8068768473942054,"identifier":"#f","input":"(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))","link":"160-Lanczoskernel","name":"Lanczos kernel","output":"(/ (* (sin (* tau (* x PI))) (/ (sin (* x PI)) (* x PI))) (* tau (* x PI)))","pre":"(and (and (<= 1e-5 x) (<= x 1.0)) (and (<= 1.0 tau) (<= tau 5.0)))","prec":"binary64","preprocess":"()","spec":"(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))","start":0.7073911602770115,"start-est":0.8320612376979074,"status":"ex-start","target":false,"target-prog":"#f","time":9883.99951171875,"vars":["x","tau"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(if (== (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0)))) 0.0) 1.0 (/ (- (exp (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))) 1.0) (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))))","link":"161-KahansUnumTargetedMonster","name":"Kahan's Unum-Targeted Monster","output":"#f","pre":"(and (<= 1.0 y) (<= y 9999.0))","prec":"binary64","preprocess":"()","spec":"(if (== (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0)))) 0.0) 1.0 (/ (- (exp (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))) 1.0) (+ (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) (pow (pow 10.0 -300.0) (* 10000.0 (+ y 1.0))))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":12851.100341796875,"vars":["y"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(if (== (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) 0.0) 1.0 (/ (- (exp (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))) 1.0) (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))))","link":"162-KahansMonster","name":"Kahan's Monster","output":"#f","pre":"(and (<= 1.0 y) (<= y 9999.0))","prec":"binary64","preprocess":"()","spec":"(if (== (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0)))))) 0.0) 1.0 (/ (- (exp (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))) 1.0) (* (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))) (- (fabs (- y (sqrt (+ (* y y) 1.0)))) (/ 1.0 (+ y (sqrt (+ (* y y) 1.0))))))))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"#f","time":6229.94189453125,"vars":["y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 0.017625) (30400 0.005198120312590144) ())","end":0.005198120312590144,"end-est":0.00390625,"identifier":"#f","input":"(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))","link":"163-Kahanp13Example3","name":"Kahan p13 Example 3","output":"(+ 1.0 (/ -1.0 (+ 2.0 (/ (* (- 8.0 (pow (/ 2.0 (* t (+ 1.0 (/ 1.0 t)))) 3.0)) (- 8.0 (pow (/ 2.0 (* t (+ 1.0 (/ 1.0 t)))) 3.0))) (* (fma (/ 2.0 (* t (+ 1.0 (/ 1.0 t)))) (+ 2.0 (/ 2.0 (* t (+ 1.0 (/ 1.0 t))))) 4.0) (fma (/ 2.0 (* t (+ 1.0 (/ 1.0 t)))) (+ 2.0 (/ 2.0 (* t (+ 1.0 (/ 1.0 t))))) 4.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))","start":0.017625,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":14292.68701171875,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((3264 0.024) (9216 0.02175) ())","end":0.02175,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))","link":"164-Kahanp13Example2","name":"Kahan p13 Example 2","output":"(/ (+ 1.0 (* (+ 2.0 (/ (/ -2.0 t) (+ 1.0 (/ 1.0 t)))) (+ 2.0 (/ (/ -2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (+ (+ 1.0 (pow (+ 2.0 (/ (/ -2.0 t) (+ 1.0 (/ 1.0 t)))) 2.0)) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))","start":0.024,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":15824.00830078125,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((2240 0.032625) (14272 0.007125) ())","end":0.007125,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))","link":"165-Kahanp13Example1","name":"Kahan p13 Example 1","output":"(/ (fma t (/ 4.0 (+ t (+ 2.0 (/ 1.0 t)))) 1.0) (fma t (/ 4.0 (+ t (+ 2.0 (/ 1.0 t)))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))","start":0.032625,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":8845.03759765625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 0.256875) (12992 0.003625) ())","end":0.003625,"end-est":0.015625,"identifier":"#f","input":"(- (log x) (log (log x)))","link":"166-JmatReallambertwestimator","name":"Jmat.Real.lambertw, estimator","output":"(log (/ x (log x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log x) (log (log x)))","start":0.256875,"start-est":0.28125,"status":"ex-start","target":false,"target-prog":"#f","time":4828.4228515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((52224 1.704698517274547) (81344 0.6979967458201253) ())","end":0.6979967458201253,"end-est":0.6338339548384542,"identifier":"#f","input":"(* (/ PI (sin (* PI z))) (* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5) (+ (- (- 1.0 z) 1.0) 0.5))) (exp (- (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- (- 1.0 z) 1.0) 1.0))) (/ -1259.1392167224028 (+ (- (- 1.0 z) 1.0) 2.0))) (/ 771.3234287776531 (+ (- (- 1.0 z) 1.0) 3.0))) (/ -176.6150291621406 (+ (- (- 1.0 z) 1.0) 4.0))) (/ 12.507343278686905 (+ (- (- 1.0 z) 1.0) 5.0))) (/ -0.13857109526572012 (+ (- (- 1.0 z) 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- (- 1.0 z) 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- (- 1.0 z) 1.0) 8.0)))))","link":"167-JmatRealgammabranchzlessthan05","name":"Jmat.Real.gamma, branch z less than 0.5","output":"(* (* (sqrt (pow (cbrt (* 2.0 PI)) 2.0)) (sqrt (cbrt (* 2.0 PI)))) (* (pow (- 7.5 z) (- 0.5 z)) (* (+ (+ 0.9999999999998099 (+ (/ 676.5203681218851 (- 1.0 z)) (/ -1259.1392167224028 (- 2.0 z)))) (+ (+ (/ 771.3234287776531 (- 3.0 z)) (+ (/ -176.6150291621406 (- 4.0 z)) (/ 12.507343278686905 (- 5.0 z)))) (+ (/ 9.984369578019572e-6 (- 7.0 z)) (+ (/ -0.13857109526572012 (- 6.0 z)) (/ 1.5056327351493116e-7 (- 8.0 z)))))) (* (/ PI (sin (* PI z))) (exp (+ z -7.5))))))","pre":"(<= z 0.5)","prec":"binary64","preprocess":"()","spec":"(* (/ PI (sin (* PI z))) (* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5) (+ (- (- 1.0 z) 1.0) 0.5))) (exp (- (+ (+ (- (- 1.0 z) 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- (- 1.0 z) 1.0) 1.0))) (/ -1259.1392167224028 (+ (- (- 1.0 z) 1.0) 2.0))) (/ 771.3234287776531 (+ (- (- 1.0 z) 1.0) 3.0))) (/ -176.6150291621406 (+ (- (- 1.0 z) 1.0) 4.0))) (/ 12.507343278686905 (+ (- (- 1.0 z) 1.0) 5.0))) (/ -0.13857109526572012 (+ (- (- 1.0 z) 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- (- 1.0 z) 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- (- 1.0 z) 1.0) 8.0)))))","start":1.704698517274547,"start-est":1.7005735317583799,"status":"imp-start","target":false,"target-prog":"#f","time":235771.93676757813,"vars":["z"]},{"bits":128,"conversions":[],"cost-accuracy":"((31360 3.8573766530738705) (62532 2.323487520882328) ())","end":2.323487520882328,"end-est":2.3160081451403105,"identifier":"#f","input":"(* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- z 1.0) 7.0) 0.5) (+ (- z 1.0) 0.5))) (exp (- (+ (+ (- z 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- z 1.0) 1.0))) (/ -1259.1392167224028 (+ (- z 1.0) 2.0))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0))))","link":"168-JmatRealgammabranchzgreaterthan05","name":"Jmat.Real.gamma, branch z greater than 0.5","output":"(if (<= (- z 1.0) 140.0) (* (sqrt (* PI 2.0)) (* (+ (/ (+ 0.9999999999994297 (pow (+ (/ 676.5203681218851 z) (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0)))) 3.0)) (+ 0.9999999999996197 (+ (* (+ (/ 676.5203681218851 z) (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0)))) (+ (/ 676.5203681218851 z) (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0))))) (* (+ (/ 676.5203681218851 z) (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0)))) -0.9999999999998099)))) (+ (/ -176.6150291621406 (+ z 3.0)) (+ (+ (/ -0.13857109526572012 (+ z 5.0)) (+ (/ 12.507343278686905 (+ z 4.0)) (/ 9.984369578019572e-6 (+ z 6.0)))) (/ 1.5056327351493116e-7 (+ z 7.0))))) (/ (pow (+ z 6.5) (+ z -0.5)) (exp (+ z 6.5))))) (* (* (sqrt PI) (sqrt 2.0)) (* (+ (+ (/ -176.6150291621406 (+ z 3.0)) (+ (+ (/ -0.13857109526572012 (+ z 5.0)) (+ (/ 12.507343278686905 (+ z 4.0)) (/ 9.984369578019572e-6 (+ z 6.0)))) (/ 1.5056327351493116e-7 (+ z 7.0)))) (fma (pow (cbrt (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0)))) 2.0) (cbrt (+ (/ -1259.1392167224028 (+ z 1.0)) (/ 771.3234287776531 (+ z 2.0)))) (+ (/ 676.5203681218851 z) 0.9999999999998099))) (exp (+ (* (+ z -0.5) (log (+ z 6.5))) (- -6.5 z))))))","pre":"(> z 0.5)","prec":"binary64","preprocess":"()","spec":"(* (* (* (sqrt (* PI 2.0)) (pow (+ (+ (- z 1.0) 7.0) 0.5) (+ (- z 1.0) 0.5))) (exp (- (+ (+ (- z 1.0) 7.0) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- z 1.0) 1.0))) (/ -1259.1392167224028 (+ (- z 1.0) 2.0))) (/ 771.3234287776531 (+ (- z 1.0) 3.0))) (/ -176.6150291621406 (+ (- z 1.0) 4.0))) (/ 12.507343278686905 (+ (- z 1.0) 5.0))) (/ -0.13857109526572012 (+ (- z 1.0) 6.0))) (/ 9.984369578019572e-6 (+ (- z 1.0) 7.0))) (/ 1.5056327351493116e-7 (+ (- z 1.0) 8.0))))","start":3.8573766530738705,"start-est":3.9641133011079686,"status":"imp-start","target":false,"target-prog":"#f","time":24106.4375,"vars":["z"]},{"bits":128,"conversions":[],"cost-accuracy":"((124672 0.15421033906799878) (71424 0.14495300781475365) ())","end":0.14495300781475365,"end-est":0.109375,"identifier":"#f","input":"(fabs (* (/ 1.0 (sqrt PI)) (+ (+ (+ (* 2.0 (fabs x)) (* (/ 2.0 3.0) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1.0 5.0) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1.0 21.0) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x))))))","link":"169-JmatRealerfibranchxlessthanorequalto05","name":"Jmat.Real.erfi, branch x less than or equal to 0.5","output":"(fabs (* (fma 0.2 (pow (fabs x) 5.0) (fma 0.047619047619047616 (pow (fabs x) 7.0) (* (fabs x) (fma x (* x 0.6666666666666666) 2.0)))) (sqrt (/ 1.0 PI))))","pre":"(<= x 0.5)","prec":"binary64","preprocess":"()","spec":"(fabs (* (/ 1.0 (sqrt PI)) (+ (+ (+ (* 2.0 (fabs x)) (* (/ 2.0 3.0) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1.0 5.0) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1.0 21.0) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x))))))","start":0.15421033906799878,"start-est":0.12175751953688403,"status":"ex-start","target":false,"target-prog":"#f","time":9337.106201171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((139648 2.7870339318845767) (90944 1.1674467149116596) ())","end":1.1674467149116596,"end-est":1.0917660778342508,"identifier":"#f","input":"(* (* (/ 1.0 (sqrt PI)) (exp (* (fabs x) (fabs x)))) (+ (+ (+ (/ 1.0 (fabs x)) (* (/ 1.0 2.0) (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 3.0 4.0) (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 15.0 8.0) (* (* (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))))","link":"170-JmatRealerfibranchxgreaterthanorequalto5","name":"Jmat.Real.erfi, branch x greater than or equal to 5","output":"(fma (/ (pow (exp x) x) x) (pow PI -0.5) (/ (fma 1.875 (pow x -6.0) (* (pow x -2.0) (fma 0.75 (pow x -2.0) 0.5))) (* (sqrt PI) (/ x (pow (exp x) x)))))","pre":"(>= x 0.5)","prec":"binary64","preprocess":"()","spec":"(* (* (/ 1.0 (sqrt PI)) (exp (* (fabs x) (fabs x)))) (+ (+ (+ (/ 1.0 (fabs x)) (* (/ 1.0 2.0) (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 3.0 4.0) (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))) (* (/ 15.0 8.0) (* (* (* (* (* (* (/ 1.0 (fabs x)) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))) (/ 1.0 (fabs x))))))","start":2.7870339318845767,"start-est":2.7453276732938745,"status":"imp-start","target":false,"target-prog":"#f","time":16626.010986328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((54784 13.252700621361882) (48448 13.25727608433832) ())","end":13.25727608433832,"end-est":13.410201286138237,"identifier":"#f","input":"(- 1.0 (* (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 0.254829592 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -0.284496736 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 1.421413741 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -1.453152027 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) 1.061405429))))))))) (exp (- (* (fabs x) (fabs x))))))","link":"171-JmatRealerf","name":"Jmat.Real.erf","output":"(+ 1.0 (* (exp (* x (- x))) (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -0.254829592 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (- 0.284496736 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ (+ 1.421413741 (* 1.061405429 (/ 1.0 (pow (+ 1.0 (* 0.3275911 (fabs x))) 2.0)))) (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) -1.453152027)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (* (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 0.254829592 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -0.284496736 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ 1.421413741 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) (+ -1.453152027 (* (/ 1.0 (+ 1.0 (* 0.3275911 (fabs x)))) 1.061405429))))))))) (exp (- (* (fabs x) (fabs x))))))","start":13.252700621361882,"start-est":13.435704225619446,"status":"apx-start","target":false,"target-prog":"#f","time":13432.18359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((11072 29.10773086133742) (130824 0.21886297531079565) ())","end":0.21886297531079565,"end-est":0.020195019536884032,"identifier":"#f","input":"(* (/ (+ (+ (+ (+ (+ 1.0 (* 0.1049934947 (* x x))) (* 0.0424060604 (* (* x x) (* x x)))) (* 0.0072644182 (* (* (* x x) (* x x)) (* x x)))) (* 0.0005064034 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0001789971 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (+ (+ (+ (+ (+ (+ 1.0 (* 0.7715471019 (* x x))) (* 0.2909738639 (* (* x x) (* x x)))) (* 0.0694555761 (* (* (* x x) (* x x)) (* x x)))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0008327945 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (* (* 2.0 0.0001789971) (* (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)) (* x x))))) x)","link":"172-JmatRealdawson","name":"Jmat.Real.dawson","output":"(if (<= x -447766.36172659305) (+ (/ 0.2514179000665374 (pow x 3.0)) (/ 0.5 x)) (if (<= x 9.544882123799739e-5) (* x (/ (fma 0.0005064034 (pow x 8.0) (fma 0.0001789971 (pow x 10.0) (fma 0.0424060604 (pow x 4.0) (fma 0.0072644182 (pow x 6.0) (fma 0.1049934947 (* x x) 1.0))))) (fma (pow x 10.0) 0.0008327945 (fma 0.0003579942 (pow x 12.0) (fma (pow x 6.0) 0.0694555761 (fma (pow x 8.0) 0.0140005442 (fma x (* x 0.7715471019) (fma (pow x 4.0) 0.2909738639 1.0)))))))) (+ (/ 0.2514179000665374 (pow x 3.0)) (/ 0.5 x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (+ (+ (+ (+ (+ 1.0 (* 0.1049934947 (* x x))) (* 0.0424060604 (* (* x x) (* x x)))) (* 0.0072644182 (* (* (* x x) (* x x)) (* x x)))) (* 0.0005064034 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0001789971 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (+ (+ (+ (+ (+ (+ 1.0 (* 0.7715471019 (* x x))) (* 0.2909738639 (* (* x x) (* x x)))) (* 0.0694555761 (* (* (* x x) (* x x)) (* x x)))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0008327945 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (* (* 2.0 0.0001789971) (* (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)) (* x x))))) x)","start":29.10773086133742,"start-est":29.034761036748776,"status":"imp-start","target":false,"target-prog":"#f","time":9706.392822265625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 58.297680365682226) (6464 0.01175) ())","end":0.01175,"end-est":0.02734375,"identifier":"#f","input":"(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))","link":"173-Hyperbolictangent","name":"Hyperbolic tangent","output":"(tanh x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))","start":58.297680365682226,"start-est":57.97945939329804,"status":"imp-start","target":false,"target-prog":"#f","time":8152.581787109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 58.15277442089494) (39296 0.5417700432590049) ())","end":0.5417700432590049,"end-est":0.8234452043711029,"identifier":"#f","input":"(/ (- (exp x) (exp (- x))) 2.0)","link":"174-Hyperbolicsine","name":"Hyperbolic sine","output":"(/ (fma 2.0 x (fma 0.016666666666666666 (pow x 5.0) (fma 0.3333333333333333 (pow x 3.0) (* 0.0003968253968253968 (pow x 7.0))))) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) (exp (- x))) 2.0)","start":58.15277442089494,"start-est":57.31958386589512,"status":"imp-start","target":false,"target-prog":"#f","time":8390.7109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 0.008198120312590144) (26304 0.010554323438491591) ())","end":0.010554323438491591,"end-est":0,"identifier":"#f","input":"(/ 2.0 (+ (exp x) (exp (- x))))","link":"175-Hyperbolicsecant","name":"Hyperbolic secant","output":"(* (sqrt (/ 2.0 (* 2.0 (cosh x)))) (sqrt (/ 2.0 (* 2.0 (cosh x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 2.0 (+ (exp x) (exp (- x))))","start":0.008198120312590144,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2627.879150390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 31.56975) (19840 0.2824109125302157) ())","end":0.2824109125302157,"end-est":0.06315267529745984,"identifier":"#f","input":"(log (+ x (sqrt (- (* x x) 1.0))))","link":"176-Hyperbolicarccosine","name":"Hyperbolic arc-cosine","output":"(log (+ (fma x 2.0 (/ -0.5 x)) (/ -0.125 (pow x 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (- (* x x) 1.0))))","start":31.56975,"start-est":35.25,"status":"imp-start","target":false,"target-prog":"#f","time":6022.66162109375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 58.622732606138655) (13184 0.00675) ())","end":0.00675,"end-est":0.0078125,"identifier":"#f","input":"(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))","link":"177-Hyperbolicarccotangent","name":"Hyperbolic arc-(co)tangent","output":"(* 0.5 (- (log1p x) (log1p (- x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))","start":58.622732606138655,"start-est":58.91045238156443,"status":"imp-start","target":false,"target-prog":"#f","time":9399.90771484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 0.0265) (32704 0.02789624062518029) ())","end":0.02789624062518029,"end-est":0,"identifier":"#f","input":"(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))","link":"178-Hyperbolicarccosecant","name":"Hyperbolic arc-(co)secant","output":"(log (fma (pow x -0.5) (pow x -0.5) (/ (sqrt (- 1.0 (* x x))) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))","start":0.0265,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":5584.781005859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13824 14.19571754254738) (21188 9.926275997385076) ())","end":9.926275997385076,"end-est":10.552234857606837,"identifier":"#f","input":"(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))","link":"179-HenrywoodandAgarwalEquation9a","name":"Henrywood and Agarwal, Equation (9a)","output":"(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+258) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) w0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))","start":14.19571754254738,"start-est":14.54296875,"status":"imp-start","target":false,"target-prog":"#f","time":14523.945068359375,"vars":["w0","M","D","h","l","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 19.36076188503966) (14156 6.658453558575939) ())","end":6.658453558575939,"end-est":9.623810003362292,"identifier":"#f","input":"(* c0 (sqrt (/ A (* V l))))","link":"180-HenrywoodandAgarwalEquation3","name":"Henrywood and Agarwal, Equation (3)","output":"(if (<= (* V l) (- INFINITY)) (* c0 (/ (sqrt (/ A V)) (sqrt l))) (if (<= (* V l) -5e-310) (* c0 (/ (sqrt (- A)) (sqrt (* V (- l))))) (if (<= (* V l) 0.0) (* c0 (/ (sqrt (/ A V)) (sqrt l))) (* c0 (* (sqrt A) (sqrt (/ 1.0 (* V l))))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort V l))","spec":"(* c0 (sqrt (/ A (* V l))))","start":19.36076188503966,"start-est":19.942158949779635,"status":"imp-start","target":false,"target-prog":"#f","time":9936.830078125,"vars":["c0","A","V","l"]},{"bits":128,"conversions":[],"cost-accuracy":"((9664 59.54886385466321) (960 21.153139456172593) ())","end":21.153139456172593,"end-est":22.608337313052907,"identifier":"#f","input":"(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))","link":"181-HenrywoodandAgarwalEquation13","name":"Henrywood and Agarwal, Equation (13)","output":"(* 0.25 (* (* (/ D d) h) (* M (/ D (/ d M)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))","start":59.54886385466321,"start-est":60.694312619541094,"status":"imp-start","target":false,"target-prog":"#f","time":30518.08544921875,"vars":["c0","w","h","D","d","M"]},{"bits":128,"conversions":[],"cost-accuracy":"((21248 26.77714369342738) (34320 20.047885166665168) ())","end":20.047885166665168,"end-est":16.689629133840494,"identifier":"#f","input":"(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))","link":"182-HenrywoodandAgarwalEquation12","name":"Henrywood and Agarwal, Equation (12)","output":"(if (<= d -1e-298) (* (/ (sqrt (- d)) (sqrt (- h))) (* (sqrt (/ d l)) (fma (pow (/ (/ D d) (/ 2.0 M)) 2.0) (* (/ h l) -0.5) 1.0))) (if (<= d 1e-28) (* (sqrt (/ d h)) (* (fma (pow (/ (/ D d) (/ 2.0 M)) 2.0) (* (/ h l) -0.5) 1.0) (/ (sqrt d) (sqrt l)))) (if (<= d 1e+75) (* (sqrt (/ d h)) (* (sqrt (/ d l)) (fma -0.125 (* h (* M (/ D (* (/ l M) (/ (* d d) D))))) 1.0))) (if (<= d 1e+76) (* (sqrt (/ d h)) (* (/ 1.0 (/ 1.0 (/ (sqrt d) (sqrt l)))) (fma (pow (* D (/ 1.0 (* d (/ 2.0 M)))) 2.0) (* (/ h l) -0.5) 1.0))) (* (* (sqrt d) (sqrt (/ 1.0 h))) (* (sqrt (/ d l)) (fma (pow (* D (/ 1.0 (* d (/ 2.0 M)))) 2.0) (* (/ h l) -0.5) 1.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort M D))","spec":"(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))","start":26.77714369342738,"start-est":28.25547775351223,"status":"imp-start","target":false,"target-prog":"#f","time":33238.993896484375,"vars":["d","h","l","M","D"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 8.899127111153938) (2628 0.8984536047573661) ())","end":0.8984536047573661,"end-est":0.1191322337380903,"identifier":"#f","input":"(+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x)))","link":"183-HakyllWebTagsrenderTagCloudfromhakyll4723","name":"Hakyll.Web.Tags:renderTagCloud from hakyll-4.7.2.3","output":"(if (<= (/ (- y z) (- (+ t 1.0) z)) 0.9999998) (- (/ (- y z) (/ (- (+ t 1.0) z) a)) (* x (- (/ y (+ 1.0 (- t z))) (+ 1.0 (/ z (+ 1.0 (- t z))))))) (if (<= (/ (- y z) (- (+ t 1.0) z)) 1.000001) (+ a (* (/ (- a x) z) (- (+ t 1.0) y))) (+ x (* (- x a) (/ (- z y) (- (+ t 1.0) z))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x)))","start":8.899127111153938,"start-est":10.347301214943622,"status":"imp-start","target":false,"target-prog":"#f","time":12854.427734375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 0.021309884708358432) (26176 0.01831376672913454) ())","end":0.01831376672913454,"end-est":0.006191259768442017,"identifier":"#f","input":"(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))","link":"184-HairBSDFsample_fcosTheta","name":"HairBSDF, sample_f, cosTheta","output":"(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)","pre":"(and (and (<= 1e-5 u) (<= u 1.0)) (and (<= 0.0 v) (<= v 109.746574)))","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))","start":0.021309884708358432,"start-est":0.006191259768442017,"status":"ex-start","target":false,"target-prog":"#f","time":5538.840087890625,"vars":["u","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 7.124065665301528) (26176 0.40152907567884294) ())","end":0.40152907567884294,"end-est":0.292645853893743,"identifier":"#f","input":"(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))","link":"185-HairBSDFgammaforarefractedray","name":"HairBSDF, gamma for a refracted ray","output":"(log1p (expm1 (asin (/ h (fma (* -0.5 sinTheta_O) (/ sinTheta_O eta) eta)))))","pre":"(and (and (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0)) (and (<= -1.0 h) (<= h 1.0))) (and (<= 0.0 eta) (<= eta 10.0)))","prec":"binary64","preprocess":"()","spec":"(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))","start":7.124065665301528,"start-est":6.013072670686637,"status":"imp-start","target":false,"target-prog":"#f","time":14350.386474609375,"vars":["sinTheta_O","h","eta"]},{"bits":128,"conversions":[],"cost-accuracy":"((14080 0.4702465243516182) (115328 0.47089664912499535) ())","end":0.47089664912499535,"end-est":0.3957763985431296,"identifier":"#f","input":"(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))","link":"186-HairBSDFMpupper","name":"HairBSDF, Mp, upper","output":"(fma -0.5 (* sinTheta_i (* sinTheta_i (/ (* (/ cosTheta_i (pow v 4.0)) (* (* sinTheta_O cosTheta_O) (- sinTheta_O))) (- (exp (/ 1.0 v)) (exp (/ -1.0 v)))))) (- (fma (/ cosTheta_i (* v v)) (/ cosTheta_O (* 2.0 (sinh (/ 1.0 v)))) (* (+ (/ (* (/ (* cosTheta_i (* sinTheta_O sinTheta_O)) (- (exp (/ 1.0 v)) (exp (/ -1.0 v)))) (/ cosTheta_O (pow v 4.0))) (/ v sinTheta_O)) (* (/ (/ cosTheta_i (/ (pow v 5.0) (* cosTheta_O (pow sinTheta_O 3.0)))) (- (exp (/ 1.0 v)) (exp (/ -1.0 v)))) -0.6666666666666666)) (* -0.5 (pow sinTheta_i 3.0)))) (* (/ (* sinTheta_i cosTheta_i) (- (exp (/ 1.0 v)) (exp (/ -1.0 v)))) (/ (* sinTheta_O cosTheta_O) (pow v 3.0)))))","pre":"(and (and (and (and (and (and (<= -1.0 cosTheta_i) (<= cosTheta_i 1.0)) (and (<= -1.0 cosTheta_O) (<= cosTheta_O 1.0))) (and (<= -1.0 sinTheta_i) (<= sinTheta_i 1.0))) (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0))) (< 0.1 v)) (<= v 1.5707964))","prec":"binary64","preprocess":"((sort cosTheta_i cosTheta_O))","spec":"(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))","start":0.4702465243516182,"start-est":0.4599039985428776,"status":"ex-start","target":false,"target-prog":"#f","time":18900.268798828125,"vars":["cosTheta_i","cosTheta_O","sinTheta_i","sinTheta_O","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14272 0.024119969420238977) (7360 0.022782083570450865) ())","end":0.022782083570450865,"end-est":0,"identifier":"#f","input":"(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))","link":"187-HairBSDFMplower","name":"HairBSDF, Mp, lower","output":"(* 0.5 (/ (exp (+ 0.6931 (- (/ -1.0 v) (/ (* sinTheta_i sinTheta_O) v)))) v))","pre":"(and (and (and (and (and (<= -1.0 cosTheta_i) (<= cosTheta_i 1.0)) (and (<= -1.0 cosTheta_O) (<= cosTheta_O 1.0))) (and (<= -1.0 sinTheta_i) (<= sinTheta_i 1.0))) (and (<= -1.0 sinTheta_O) (<= sinTheta_O 1.0))) (and (<= -1.5707964 v) (<= v 0.1)))","prec":"binary64","preprocess":"()","spec":"(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))","start":0.024119969420238977,"start-est":0.25,"status":"ex-start","target":false,"target-prog":"#f","time":8526.9697265625,"vars":["cosTheta_i","cosTheta_O","sinTheta_i","sinTheta_O","v"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.08583928068970828) (13504 0.03977124062518029) ())","end":0.03977124062518029,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x (+ (+ (+ (+ y z) z) y) t)) (* y 5.0))","link":"188-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, B","output":"(fma 5.0 y (fma x (* 2.0 (+ y z)) (* x t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (+ (+ (+ (+ y z) z) y) t)) (* y 5.0))","start":0.08583928068970828,"start-est":0.046875,"status":"ex-start","target":false,"target-prog":"#f","time":6475.63623046875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.06271936093777043) (13120 0.000625) ())","end":0.000625,"end-est":0,"identifier":"#f","input":"(+ (+ (+ (+ (+ x y) y) x) z) x)","link":"189-GraphicsRenderingPlotRenderPlotLegendrenderLegendI","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendInside from plot-0.2.3.4","output":"(fma x 3.0 (fma y 2.0 z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ (+ x y) y) x) z) x)","start":0.06271936093777043,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":3834.180419921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 0.05058405316774643) (13120 0.05058405316774643) ())","end":0.05058405316774643,"end-est":0.06640625,"identifier":"#f","input":"(+ x (/ (fabs (- y x)) 2.0))","link":"190-GraphicsRenderingChartPlotAreaSpotsrenderSpotLegen","name":"Graphics.Rendering.Chart.Plot.AreaSpots:renderSpotLegend from Chart-1.5.3","output":"(fma (fabs (- y x)) 0.5 x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (fabs (- y x)) 2.0))","start":0.05058405316774643,"start-est":0.06640625,"status":"ex-start","target":false,"target-prog":"#f","time":3395.818359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.013625) (6848 0.00725) ())","end":0.00725,"end-est":0,"identifier":"#f","input":"(+ (* x y) (* (- x 1.0) z))","link":"191-GraphicsRenderingChartDrawingdrawTextsRfromChart15","name":"Graphics.Rendering.Chart.Drawing:drawTextsR from Chart-1.5.3","output":"(fma y x (* (+ x -1.0) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* (- x 1.0) z))","start":0.013625,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":4626.328857421875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.05194812031259015) (13248 0.05194812031259015) ())","end":0.05194812031259015,"end-est":0.05859375,"identifier":"#f","input":"(+ (+ x (sin y)) (* z (cos y)))","link":"192-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, C","output":"(+ (+ x (sin y)) (* z (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x (sin y)) (* z (cos y)))","start":0.05194812031259015,"start-est":0.05859375,"status":"ex-start","target":false,"target-prog":"#f","time":8526.603759765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.05382312031259015) (19584 0.05269812031259015) ())","end":0.05269812031259015,"end-est":0.05078125,"identifier":"#f","input":"(- (+ x (cos y)) (* z (sin y)))","link":"193-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, B","output":"(- x (fma z (sin y) (- (cos y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x (cos y)) (* z (sin y)))","start":0.05382312031259015,"start-est":0.0546875,"status":"ex-start","target":false,"target-prog":"#f","time":10685.869140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0005) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* x x) 1.0)","link":"194-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, A","output":"(fma x x 1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x x) 1.0)","start":0.0005,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1478.873779296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00325) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* y y))","link":"195-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1","output":"(fma y (- y) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* y y))","start":0.00325,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":1927.61376953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.031375) (6848 0.01006372187554087) ())","end":0.01006372187554087,"end-est":0.00390625,"identifier":"#f","input":"(- (* x x) (* (* y 4.0) z))","link":"196-GraphicsRasterificQuadraticFormuladiscriminantfrom","name":"Graphics.Rasterific.QuadraticFormula:discriminant from Rasterific-0.6.1","output":"(fma -4.0 (* y z) (* x x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* (* y 4.0) z))","start":0.031375,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":3813.093017578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.00675) (6720 0.003375) ())","end":0.003375,"end-est":0,"identifier":"#f","input":"(+ (* x x) (* y y))","link":"197-GraphicsRasterificLinearcquadrancefromRasterific06","name":"Graphics.Rasterific.Linear:$cquadrance from Rasterific-0.6.1","output":"(fma x x (* y y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x x) (* y y))","start":0.00675,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2001.1708984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 16.0) x)","link":"198-GraphicsRasterificCubicBezierisSufficientlyFlatfro","name":"Graphics.Rasterific.CubicBezier:isSufficientlyFlat from Rasterific-0.6.1","output":"(* x (* x 16.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 16.0) x)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1479.974853515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13440 15.355114437365284) (39620 0.1460932889584239) ())","end":0.1460932889584239,"end-est":0,"identifier":"#f","input":"(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))","link":"199-GivensRotationSVDexamplesimplified","name":"Given's Rotation SVD example, simplified","output":"(if (<= (hypot 1.0 x) 2.0) (+ (fma x (* x 0.125) (* (pow x 6.0) 0.0673828125)) (fma (pow x 4.0) -0.0859375 (* (pow x 8.0) -0.056243896484375))) (* (+ 0.5 (/ -0.5 (hypot 1.0 x))) (/ 1.0 (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))","start":15.355114437365284,"start-est":16.0194705902668,"status":"imp-start","target":false,"target-prog":"#f","time":9281.620361328125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((14208 0.44852481407809575) (45824 0.4632687241465721) ())","end":0.4632687241465721,"end-est":0.43876389138884375,"identifier":"#f","input":"(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))","link":"200-GTR1distribution","name":"GTR1 distribution","output":"(pow (/ (log (pow (* alpha alpha) PI)) (/ (fma alpha alpha -1.0) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))) -1.0)","pre":"(and (and (<= 0.0 cosTheta) (<= cosTheta 1.0)) (and (<= 0.0001 alpha) (<= alpha 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))","start":0.44852481407809575,"start-est":0.44664003907376815,"status":"ex-start","target":false,"target-prog":"#f","time":10442.4169921875,"vars":["cosTheta","alpha"]},{"bits":128,"conversions":[],"cost-accuracy":"((28160 58.136380241123696) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))","link":"201-FromWarwickTuckersValidatedNumerics","name":"From Warwick Tucker's Validated Numerics","output":"-0.8273960599468214","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))","start":58.136380241123696,"start-est":58.1363802411197,"status":"imp-start","target":false,"target-prog":"#f","time":3796.96142578125,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 61.99859042973555) (39296 53.393002952606885) ())","end":53.393002952606885,"end-est":53.39300295260128,"identifier":"#f","input":"(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))","link":"202-FromRumpina1983paperrewritten","name":"From Rump in a 1983 paper, rewritten","output":"(expm1 (log1p (fma (cbrt 9.0) (* (cbrt 81.0) (pow x 4.0)) (* (* y y) (- 2.0 (* y y))))))","pre":"(and (== x 10864.0) (== y 18817.0))","prec":"binary64","preprocess":"()","spec":"(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))","start":61.99859042973555,"start-est":61.99859042974503,"status":"imp-start","target":false,"target-prog":"#f","time":5644.646484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 52.0) (1600 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))","link":"203-FromRumpina1983paper","name":"From Rump in a 1983 paper","output":"(+ (* (+ (* (* x x) 3.0) (* y y)) (- (* (* x x) 3.0) (* y y))) (* (* y y) 2.0))","pre":"(and (== x 10864.0) (== y 18817.0))","prec":"binary64","preprocess":"()","spec":"(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))","start":52.0,"start-est":52.0,"status":"imp-start","target":false,"target-prog":"#f","time":3447.42041015625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13952 0.9837712406251803) (39232 0.03132454490066471) ())","end":0.03132454490066471,"end-est":0.015625,"identifier":"#f","input":"(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))","link":"204-FalknerandBoettcherEquation22","name":"Falkner and Boettcher, Equation (22+)","output":"(/ -1.3333333333333333 (pow (cbrt (* (sqrt (fma v (* v -6.0) 2.0)) (* PI (fma v v -1.0)))) 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))","start":0.9837712406251803,"start-est":0.9921875,"status":"ex-start","target":false,"target-prog":"#f","time":6706.083740234375,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((14464 0.44344181570887553) (33216 0.11576428593921277) ())","end":0.11576428593921277,"end-est":0.09765625,"identifier":"#f","input":"(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))","link":"205-FalknerandBoettcherEquation2013","name":"Falkner and Boettcher, Equation (20:1,3)","output":"(/ (/ (/ (fma v (* v -5.0) 1.0) (* PI (sqrt (fma v (* v -6.0) 2.0)))) t) (fma v (- v) 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))","start":0.44344181570887553,"start-est":0.38185502930532605,"status":"ex-start","target":false,"target-prog":"#f","time":9551.84423828125,"vars":["v","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 0.012990601562950722) (32896 0.009948120312590146) ())","end":0.009948120312590146,"end-est":0.00390625,"identifier":"#f","input":"(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))","link":"206-FalknerandBoettcherAppendixB2","name":"Falkner and Boettcher, Appendix B, 2","output":"(* (sqrt (fma v (* v -3.0) 1.0)) (sqrt (* 2.0 (* (pow (fma v v -1.0) 2.0) 0.0625))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))","start":0.012990601562950722,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":5163.27880859375,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.5343541745375666) (32832 0.5348016612573603) ())","end":0.5348016612573603,"end-est":0.322911968045111,"identifier":"#f","input":"(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))","link":"207-FalknerandBoettcherAppendixB1","name":"Falkner and Boettcher, Appendix B, 1","output":"(exp (* (* 6.0 (log (acos (/ (fma v (* v -5.0) 1.0) (fma v v -1.0))))) 0.16666666666666666))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))","start":0.5343541745375666,"start-est":0.32700994032127806,"status":"ex-start","target":false,"target-prog":"#f","time":16536.430908203125,"vars":["v"]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 1.9543071398020158) (7296 1.9543071398020158) ())","end":1.9543071398020158,"end-est":1.2466182248680318,"identifier":"#f","input":"(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))","link":"208-FalknerandBoettcherAppendixA","name":"Falkner and Boettcher, Appendix A","output":"(/ (* a (pow k m)) (+ (+ 1.0 (* k 10.0)) (* k k)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))","start":1.9543071398020158,"start-est":1.2466182248680318,"status":"apx-start","target":false,"target-prog":"#f","time":13654.2021484375,"vars":["a","k","m"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 39.33560284013568) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* (+ x 1.0) (+ x 1.0)) 1.0)","link":"209-Expandingasquare","name":"Expanding a square","output":"(fma x x (* x 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (+ x 1.0) (+ x 1.0)) 1.0)","start":39.33560284013568,"start-est":40.35326525728827,"status":"imp-start","target":false,"target-prog":"#f","time":4582.508056640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* x x) (* y y))","link":"210-ExamplesBasicsBasicTestsf2fromsbv44","name":"Examples.Basics.BasicTests:f2 from sbv-4.4","output":"(* (+ x y) (- x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* y y))","start":0.007436481637041209,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2429.970703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.001) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(* (+ x y) (- x y))","link":"211-ExamplesBasicsBasicTestsf1fromsbv44","name":"Examples.Basics.BasicTests:f1 from sbv-4.4","output":"(* (+ x y) (- x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (+ x y) (- x y))","start":0.001,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2853.292236328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((58816 0.1252712406251803) (65088 0.12432312031259014) ())","end":0.12432312031259014,"end-est":0.12109375,"identifier":"#f","input":"(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))","link":"212-ExamplefromRobby","name":"Example from Robby","output":"(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* eh (* (cos t) (sin (atan (/ (/ eh ew) (tan t))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))","start":0.1252712406251803,"start-est":0.12109375,"status":"ex-start","target":false,"target-prog":"#f","time":25519.95654296875,"vars":["eh","ew","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((58944 0.12682312031259016) (65280 0.1265212406251803) ())","end":0.1265212406251803,"end-est":0.125,"identifier":"#f","input":"(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))","link":"213-Example2fromRobby","name":"Example 2 from Robby","output":"(fabs (fma ew (* (cos t) (cos (atan (/ (- (tan t)) (/ ew eh))))) (* (- (* eh (sin t))) (sin (atan (/ (- (tan t)) (/ ew eh)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))","start":0.12682312031259016,"start-est":0.125,"status":"ex-start","target":false,"target-prog":"#f","time":26989.4150390625,"vars":["eh","ew","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((21056 39.52817580125861) (79104 0.12653982222911062) ())","end":0.12653982222911062,"end-est":0.10901129138909578,"identifier":"#f","input":"(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))","link":"214-Equirectangularapproximationtodistanceonagreatcirc","name":"Equirectangular approximation to distance on a great circle","output":"(* R (hypot (* (- lambda1 lambda2) (fma (cos (* 0.5 phi1)) (cos (* 0.5 phi2)) (fma (sin (* 0.5 phi2)) (- (sin (* 0.5 phi1))) (fma (sin (* 0.5 phi2)) (- (sin (* 0.5 phi1))) (* (sin (* 0.5 phi2)) (sin (* 0.5 phi1))))))) (- phi1 phi2)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))","start":39.52817580125861,"start-est":36.154644581512464,"status":"imp-start","target":false,"target-prog":"#f","time":24705.215087890625,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 14.25682807947797) (32384 0.012555367936981091) ())","end":0.012555367936981091,"end-est":0.00390625,"identifier":"#f","input":"(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))","link":"215-Eccentricityofanellipse","name":"Eccentricity of an ellipse","output":"(sqrt (fabs (fma b (pow (/ (sqrt b) a) 2.0) -1.0)))","pre":"(and (and (<= 0.0 b) (<= b a)) (<= a 1.0))","prec":"binary64","preprocess":"()","spec":"(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))","start":14.25682807947797,"start-est":13.7578125,"status":"imp-start","target":false,"target-prog":"#f","time":6098.847412109375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 7.795304762161844) (6720 0.249875) ())","end":0.249875,"end-est":0.23046875,"identifier":"#f","input":"(/ 10.0 (- 1.0 (* x x)))","link":"216-ENASection14MentionedB","name":"ENA, Section 1.4, Mentioned, B","output":"(/ -10.0 (fma x x -1.0))","pre":"(and (<= 0.999 x) (<= x 1.001))","prec":"binary64","preprocess":"()","spec":"(/ 10.0 (- 1.0 (* x x)))","start":7.795304762161844,"start-est":7.76062034513366,"status":"imp-start","target":false,"target-prog":"#f","time":3647.208740234375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 7.265290543106895) (40264 0.3174932019479763) ())","end":0.3174932019479763,"end-est":0.3145779863758146,"identifier":"#f","input":"(- (pow (+ x eps) 5.0) (pow x 5.0))","link":"217-ENASection14Exercise4bn5","name":"ENA, Section 1.4, Exercise 4b, n=5","output":"(if (<= (- (pow (+ x eps) 5.0) (pow x 5.0)) -2e-316) (- (pow (+ x eps) 5.0) (pow x 5.0)) (if (<= (- (pow (+ x eps) 5.0) (pow x 5.0)) 0.0) (* eps (+ (* 5.0 (pow x 4.0)) (* eps (* (pow x 3.0) 10.0)))) (- (pow (+ x eps) 5.0) (pow x 5.0))))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x eps) 5.0) (pow x 5.0))","start":7.265290543106895,"start-est":7.611930366391315,"status":"imp-start","target":false,"target-prog":"#f","time":7648.391845703125,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 15.772192767180458) (6720 0.012) ())","end":0.012,"end-est":0.01171875,"identifier":"#f","input":"(- (pow (+ x eps) 2.0) (pow x 2.0))","link":"218-ENASection14Exercise4bn2","name":"ENA, Section 1.4, Exercise 4b, n=2","output":"(* eps (fma 2.0 x eps))","pre":"(and (and (<= -1000000000.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x eps) 2.0) (pow x 2.0))","start":15.772192767180458,"start-est":14.354868393754275,"status":"imp-start","target":false,"target-prog":"#f","time":5058.5947265625,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 3.5283803971540744) (26048 0.38332142969606414) ())","end":0.38332142969606414,"end-est":0.3561325195368841,"identifier":"#f","input":"(* (cos x) (exp (* 10.0 (* x x))))","link":"219-ENASection14Exercise1","name":"ENA, Section 1.4, Exercise 1","output":"(* (cos x) (pow (pow (exp 20.0) x) (* x 0.5)))","pre":"(and (<= 1.99 x) (<= x 2.01))","prec":"binary64","preprocess":"()","spec":"(* (cos x) (exp (* 10.0 (* x x))))","start":3.5283803971540744,"start-est":3.5782675582419143,"status":"imp-start","target":false,"target-prog":"#f","time":5925.719482421875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((99200 24.5362554296718) (157632 13.754894773812508) ())","end":13.754894773812508,"end-est":12.148789922381962,"identifier":"#f","input":"(* R (* 2.0 (atan2 (sqrt (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0))))) (sqrt (- 1.0 (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0)))))))))","link":"220-Distanceonagreatcircle","name":"Distance on a great circle","output":"(* R (* 2.0 (atan2 (sqrt (fma (cos phi2) (* (pow (sin (* 0.5 (- lambda1 lambda2))) 2.0) (cos phi1)) (pow (- (* (sin (* 0.5 phi1)) (cos (* phi2 0.5))) (* (cos (* 0.5 phi1)) (sin (* phi2 0.5)))) 2.0))) (sqrt (- 1.0 (+ (pow (- (* (sin (* 0.5 phi1)) (cos (* phi2 0.5))) (* (cos (* 0.5 phi1)) (sin (* phi2 0.5)))) 2.0) (* (* (* (cos phi2) (cos phi1)) (sin (/ (- lambda1 lambda2) 2.0))) (expm1 (log1p (sin (* 0.5 (- lambda1 lambda2))))))))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort lambda1 lambda2) (sort phi1 phi2))","spec":"(* R (* 2.0 (atan2 (sqrt (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0))))) (sqrt (- 1.0 (+ (pow (sin (/ (- phi1 phi2) 2.0)) 2.0) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2.0))) (sin (/ (- lambda1 lambda2) 2.0)))))))))","start":24.5362554296718,"start-est":22.12619676681753,"status":"imp-start","target":false,"target-prog":"#f","time":76180.61547851563,"vars":["R","lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 1.3249102073570505) (32512 0.6810799066780678) ())","end":0.6810799066780678,"end-est":0.6972598892029106,"identifier":"#f","input":"(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))","link":"221-DisneyBSSRDFsamplescatteringprofileupper","name":"Disney BSSRDF, sample scattering profile, upper","output":"(* s (sqrt (* (sqrt (pow (log1p (fma u -1.3333333333333333 0.3333333333333333)) 4.0)) 9.0)))","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (<= 0.25 u) (<= u 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))","start":1.3249102073570505,"start-est":1.3783629863701992,"status":"apx-start","target":false,"target-prog":"#f","time":7723.212158203125,"vars":["s","u"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 13.232548439746353) (6784 0.254375) ())","end":0.254375,"end-est":0.2421875,"identifier":"#f","input":"(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))","link":"222-DisneyBSSRDFsamplescatteringprofilelower","name":"Disney BSSRDF, sample scattering profile, lower","output":"(* s (- (log1p (* u -4.0))))","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (<= 2.328306437e-10 u) (<= u 0.25)))","prec":"binary64","preprocess":"()","spec":"(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))","start":13.232548439746353,"start-est":13.073227070665022,"status":"imp-start","target":false,"target-prog":"#f","time":10017.361328125,"vars":["s","u"]},{"bits":128,"conversions":[],"cost-accuracy":"((27456 0.03787531181555719) (20288 0.27243011340481676) ())","end":0.27243011340481676,"end-est":0.053112845964952984,"identifier":"#f","input":"(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))","link":"223-DisneyBSSRDFPDFofscatteringprofile","name":"Disney BSSRDF, PDF of scattering profile","output":"(* (/ (/ 0.125 (* s PI)) r) (+ (exp (/ (- r) s)) (exp (/ -0.3333333333333333 (/ s r)))))","pre":"(and (and (<= 0.0 s) (<= s 256.0)) (and (< 1e-6 r) (< r 1000000.0)))","prec":"binary64","preprocess":"()","spec":"(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))","start":0.03787531181555719,"start-est":0.05704632078844846,"status":"ex-start","target":false,"target-prog":"#f","time":9414.56201171875,"vars":["s","r"]},{"bits":128,"conversions":[],"cost-accuracy":"((72896 0.4673357979352417) (85568 0.4436974515771598) ())","end":0.4436974515771598,"end-est":0.3649788574528622,"identifier":"#f","input":"(/ (+ 2.0 (* (* (* (sqrt 2.0) (- (sin x) (/ (sin y) 16.0))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)))))","link":"224-DiagramsTwoDPathMetafontInternalhobbyFfromdiagrams","name":"Diagrams.TwoD.Path.Metafont.Internal:hobbyF from diagrams-contrib-1.3.0.5","output":"(/ (+ 2.0 (* (sqrt 2.0) (* (log (exp (- (cos x) (cos y)))) (* (+ (* -0.0625 (sin y)) (sin x)) (+ (sin y) (* -0.0625 (sin x))))))) (+ 3.0 (+ (* (cos y) (+ 4.5 (* (sqrt 5.0) -1.5))) (* 1.5 (* (cos x) (+ (sqrt 5.0) -1.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ 2.0 (* (* (* (sqrt 2.0) (- (sin x) (/ (sin y) 16.0))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)))))","start":0.4673357979352417,"start-est":0.4382401367581883,"status":"ex-start","target":false,"target-prog":"#f","time":28536.0087890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.003875) (13184 0.00025) ())","end":0.00025,"end-est":0,"identifier":"#f","input":"(sqrt (- 1.0 (* x x)))","link":"225-DiagramsTwoDEllipseellipsefromdiagramslib1303","name":"Diagrams.TwoD.Ellipse:ellipse from diagrams-lib-1.3.0.3","output":"(exp (* (log1p (* x (- x))) 0.5))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (- 1.0 (* x x)))","start":0.003875,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":3299.869873046875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.01425) (448 0.01425) ())","end":0.01425,"end-est":0.00390625,"identifier":"#f","input":"(/ (- x y) (- 1.0 y))","link":"226-DiagramsTrailsplitAtParamfromdiagramslib1303C","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, C","output":"(/ (- x y) (- 1.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- 1.0 y))","start":0.01425,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":7317.77783203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.12894812031259018) (13248 0.12894812031259018) ())","end":0.12894812031259018,"end-est":0.09765625,"identifier":"#f","input":"(+ (* x (cos y)) (* z (sin y)))","link":"227-DiagramsThreeDTransformaboutYfromdiagramslib1303","name":"Diagrams.ThreeD.Transform:aboutY from diagrams-lib-1.3.0.3","output":"(+ (* x (cos y)) (* z (sin y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (cos y)) (* z (sin y)))","start":0.12894812031259018,"start-est":0.09765625,"status":"ex-start","target":false,"target-prog":"#f","time":12550.080322265625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.12607312031259016) (19520 0.121) ())","end":0.121,"end-est":0.140625,"identifier":"#f","input":"(+ (* x (sin y)) (* z (cos y)))","link":"228-DiagramsThreeDTransformaboutXfromdiagramslib1303B","name":"Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, B","output":"(fma x (sin y) (* z (cos y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (sin y)) (* z (cos y)))","start":0.12607312031259016,"start-est":0.14453125,"status":"ex-start","target":false,"target-prog":"#f","time":13537.604736328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.12725) (19584 0.124125) ())","end":0.124125,"end-est":0.09765625,"identifier":"#f","input":"(- (* x (cos y)) (* z (sin y)))","link":"229-DiagramsThreeDTransformaboutXfromdiagramslib1303A","name":"Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, A","output":"(fma (- z) (sin y) (* (cos y) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x (cos y)) (* z (sin y)))","start":0.12725,"start-est":0.10546875,"status":"ex-start","target":false,"target-prog":"#f","time":12441.172119140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.015573120312590146) (6720 0.0065) ())","end":0.0065,"end-est":0,"identifier":"#f","input":"(+ x (* (- y x) z))","link":"230-DiagramsThreeDShapesfrustumfromdiagramslib1303B","name":"Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, B","output":"(fma (- y x) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y x) z))","start":0.015573120312590146,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3238.66552734375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.178375) (320 0.178375) ())","end":0.178375,"end-est":0.21875,"identifier":"#f","input":"(* (* x 3.0) x)","link":"231-DiagramsTangentcatParamfromdiagramslib1303F","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, F","output":"(* x (* x 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 3.0) x)","start":0.178375,"start-est":0.21875,"status":"ex-start","target":false,"target-prog":"#f","time":3021.715576171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (/ y 4.0))","link":"232-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, E","output":"(fma y -0.25 x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y 4.0))","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2513.463623046875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.037625) (6848 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (/ (* x y) 2.0) (/ z 8.0))","link":"233-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, D","output":"(fma x (* y 0.5) (* z -0.125))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ (* x y) 2.0) (/ z 8.0))","start":0.037625,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":4542.488037109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 0.12275) (19904 0.04982312031259015) ())","end":0.04982312031259015,"end-est":0,"identifier":"#f","input":"(+ (- (+ (* x y) (/ (* z t) 16.0)) (/ (* a b) 4.0)) c)","link":"234-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, C","output":"(fma x y (fma t (* z 0.0625) (fma (* a b) -0.25 c)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (* x y) (/ (* z t) 16.0)) (/ (* a b) 4.0)) c)","start":0.12275,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":7706.598876953125,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.08816524101186092) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* (/ 3.0 8.0) y))","link":"235-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, A","output":"(fma y -0.375 x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* (/ 3.0 8.0) y))","start":0.08816524101186092,"start-est":0.09765625,"status":"ex-start","target":false,"target-prog":"#f","time":2887.76611328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.03732949236706545) (320 0.03732949236706545) ())","end":0.03732949236706545,"end-est":0,"identifier":"#f","input":"(/ x (* y 2.0))","link":"236-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, C","output":"(/ x (* y 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y 2.0))","start":0.03732949236706545,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2433.05078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 0.13725) (13120 0.13575) ())","end":0.13575,"end-est":0.11328125,"identifier":"#f","input":"(* (/ 1.0 2.0) (+ x (* y (sqrt z))))","link":"237-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, B","output":"(* 0.5 (fma y (sqrt z) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (+ x (* y (sqrt z))))","start":0.13725,"start-est":0.11328125,"status":"ex-start","target":false,"target-prog":"#f","time":8016.92236328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.06294812031259014) (6720 0.032) ())","end":0.032,"end-est":0,"identifier":"#f","input":"(- x (* (* y 4.0) z))","link":"238-DiagramsSolvePolynomialquadFormfromdiagramssolve01","name":"Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, A","output":"(fma y (* z -4.0) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* (* y 4.0) z))","start":0.06294812031259014,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":3005.417236328125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.365) (320 0.365) ())","end":0.365,"end-est":0.4921875,"identifier":"#f","input":"(* (* x 27.0) y)","link":"239-DiagramsSolvePolynomialcubFormfromdiagramssolve01F","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, F","output":"(* (* x 27.0) y)","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* (* x 27.0) y)","start":0.365,"start-est":0.4921875,"status":"ex-start","target":false,"target-prog":"#f","time":2766.5712890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.129875) (6528 0.000375) ())","end":0.000375,"end-est":0,"identifier":"#f","input":"(* (* x x) x)","link":"240-DiagramsSegmentcatParamfromdiagramslib1303C","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, C","output":"(pow x 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) x)","start":0.129875,"start-est":0.140625,"status":"ex-start","target":false,"target-prog":"#f","time":1770.898193359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.015948120312590144) (6720 0.005) ())","end":0.005,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x y) (* (- 1.0 x) z))","link":"241-DiagramsBackendRasterificcrenderfromdiagramsraster","name":"Diagrams.Backend.Rasterific:$crender from diagrams-rasterific-1.3.1.3","output":"(fma x (- y z) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* (- 1.0 x) z))","start":0.015948120312590144,"start-est":0.0234375,"status":"ex-start","target":false,"target-prog":"#f","time":4325.322021484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((84480 0.1479833047214804) (71680 0.080936504609473) ())","end":0.080936504609473,"end-est":0.07650375976844201,"identifier":"#f","input":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))","link":"242-Destinationgivenbearingonagreatcircle","name":"Destination given bearing on a great circle","output":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (* (* (cos phi1) (cos phi1)) (cos delta)) (* (sin delta) (* (sin phi1) (* (cos phi1) (cos theta)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))","start":0.1479833047214804,"start-est":0.16212268734961288,"status":"ex-start","target":false,"target-prog":"#f","time":35333.97900390625,"vars":["lambda1","phi1","phi2","delta","theta"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.5949434028191372) (832 0.6552904445244431) ())","end":0.6552904445244431,"end-est":0.08203125,"identifier":"#f","input":"(- 1.0 (/ x (* (- y z) (- y t))))","link":"243-DataRandomDistributionTriangulartriangularCDFfromr","name":"Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, A","output":"(+ 1.0 (* x (/ (/ -1.0 (- y t)) (- y z))))","pre":"TRUE","prec":"binary64","preprocess":"((sort z t))","spec":"(- 1.0 (/ x (* (- y z) (- y t))))","start":0.5949434028191372,"start-est":0.09161534323313197,"status":"ex-start","target":false,"target-prog":"#f","time":7688.0029296875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.006486060753824081) (6720 0.006486060753824081) ())","end":0.006486060753824081,"end-est":0,"identifier":"#f","input":"(exp (* (* x y) y))","link":"244-DataRandomDistributionNormalnormalFfromrandomfu026","name":"Data.Random.Distribution.Normal:normalF from random-fu-0.2.6.2","output":"(exp (* y (* x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (* (* x y) y))","start":0.006486060753824081,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2946.073974609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ x x) 1.0)","link":"245-DataRandomDistributionNormaldoubleStdNormalZfromra","name":"Data.Random.Distribution.Normal:doubleStdNormalZ from random-fu-0.2.6.2","output":"(fma x 2.0 -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x x) 1.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1754.48095703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0009481203125901445) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x x) 1.0)","link":"246-DataRandomDicerollfromdice01","name":"Data.Random.Dice:roll from dice-0.1","output":"(fma x x -1.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) 1.0)","start":0.0009481203125901445,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1814.842041015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.036778602336311986) (6976 0.05235529379292672) ())","end":0.05235529379292672,"end-est":0.0390625,"identifier":"#f","input":"(- x (/ y (+ 1.0 (/ (* x y) 2.0))))","link":"247-DataNumberErfcinvnormcdffromerf2000B","name":"Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, B","output":"(+ x (/ 1.0 (fma x -0.5 (/ -1.0 y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y (+ 1.0 (/ (* x y) 2.0))))","start":0.036778602336311986,"start-est":0.12258214846976202,"status":"ex-start","target":false,"target-prog":"#f","time":5610.4423828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.16875) (320 0.16875) ())","end":0.16875,"end-est":0.21484375,"identifier":"#f","input":"(* (* x y) y)","link":"248-DataHyperLogLogConfighllfromhyperloglog034","name":"Data.HyperLogLog.Config:hll from hyperloglog-0.3.4","output":"(* y (* x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x y) y)","start":0.16875,"start-est":0.21484375,"status":"ex-start","target":false,"target-prog":"#f","time":3882.877197265625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.008125) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x y) x)","link":"249-DataHistogramBinLogBinDcbinSizeNfromhistogramfill0","name":"Data.Histogram.Bin.LogBinD:$cbinSizeN from histogram-fill-0.8.4.1","output":"(fma y x (- x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x y) x)","start":0.008125,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2541.073974609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.009755549264919807) (6720 0.004375) ())","end":0.004375,"end-est":0,"identifier":"#f","input":"(+ (+ (/ x 2.0) (* y x)) z)","link":"250-DataHistogramBinBinFcfromIndexfromhistogramfill084","name":"Data.Histogram.Bin.BinF:$cfromIndex from histogram-fill-0.8.4.1","output":"(fma x (+ 0.5 y) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (/ x 2.0) (* y x)) z)","start":0.009755549264919807,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3886.377685546875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.010094360937770434) (6720 0.0052193609377704335) ())","end":0.0052193609377704335,"end-est":0,"identifier":"#f","input":"(- (* (+ x 1.0) y) x)","link":"251-DataColourSRGBtransferFunctionfromcolour233","name":"Data.Colour.SRGB:transferFunction from colour-2.3.3","output":"(- (fma x y y) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (+ x 1.0) y) x)","start":0.010094360937770434,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":2544.279296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012875) (704 0.008375) ())","end":0.008375,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ x y) (+ y 1.0))","link":"252-DataColourSRGBinvTransferFunctionfromcolour233","name":"Data.Colour.SRGB:invTransferFunction from colour-2.3.3","output":"(+ (/ y (+ y 1.0)) (/ x (+ y 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (+ y 1.0))","start":0.012875,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":3885.796142578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 3.5543231203125902) (7304 0.11227124062518028) ())","end":0.11227124062518028,"end-est":0.11328125,"identifier":"#f","input":"(* x (- 1.0 (* y z)))","link":"253-DataColourRGBSpaceHSVhsvfromcolour233I","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, I","output":"(if (<= (* y z) -1e+253) (* z (* y (- x))) (if (<= (* y z) 1e+263) (- x (* (* y z) x)) (fma y (* z (- x)) x)))","pre":"TRUE","prec":"binary64","preprocess":"((sort y z))","spec":"(* x (- 1.0 (* y z)))","start":3.5543231203125902,"start-est":4.87109375,"status":"imp-start","target":false,"target-prog":"#f","time":5249.022705078125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0095) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* x (- 1.0 y))","link":"254-DataColourRGBSpaceHSVhsvfromcolour233H","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, H","output":"(fma y (- x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 y))","start":0.0095,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":2561.11962890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.010875) (192 0.010875) ())","end":0.010875,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ 1.0 3.0))","link":"255-DataColourRGBSpaceHSLhslfromcolour233G","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, G","output":"(+ x -0.3333333333333333)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ 1.0 3.0))","start":0.010875,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":3633.79345703125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.009375) (192 0.009375) ())","end":0.009375,"end-est":0.01953125,"identifier":"#f","input":"(+ x (/ 1.0 3.0))","link":"256-DataColourRGBSpaceHSLhslfromcolour233F","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, F","output":"(+ x 0.3333333333333333)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ 1.0 3.0))","start":0.009375,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":5243.1201171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.41489248282485014) (7488 0.15645772226222152) ())","end":0.15645772226222152,"end-est":0.125,"identifier":"#f","input":"(+ x (* (* (- y x) 6.0) (- (/ 2.0 3.0) z)))","link":"257-DataColourRGBSpaceHSLhslfromcolour233D","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, D","output":"(- (+ (* 4.0 y) (* -6.0 (* z y))) (fma x 3.0 (* x (* -6.0 z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* (- y x) 6.0) (- (/ 2.0 3.0) z)))","start":0.41489248282485014,"start-est":0.3551750488422101,"status":"ex-start","target":false,"target-prog":"#f","time":6919.492431640625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x 2.0) y)","link":"258-DataColourRGBSpaceHSLhslfromcolour233C","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, C","output":"(- (* x 2.0) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x 2.0) y)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2273.5458984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0085) (6720 0.00425) ())","end":0.00425,"end-est":0,"identifier":"#f","input":"(- (+ x y) (* x y))","link":"259-DataColourRGBSpaceHSLhslfromcolour233A","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, A","output":"(fma x (- 1.0 y) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) (* x y))","start":0.0085,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2423.13427734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(/ (+ x y) 2.0)","link":"260-DataColourRGBhslsvfromcolour233A","name":"Data.Colour.RGB:hslsv from colour-2.3.3, A","output":"(/ (+ x y) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) 2.0)","start":0,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":2258.367431640625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.008615601562950723) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (* x 116.0) 16.0)","link":"261-DataColourCIElightnessfromcolour233","name":"Data.Colour.CIE:lightness from colour-2.3.3","output":"(fma x 116.0 -16.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x 116.0) 16.0)","start":0.008615601562950723,"start-est":0.0078125,"status":"ex-start","target":false,"target-prog":"#f","time":1821.59814453125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.03325) (6720 0.017214280689708265) ())","end":0.017214280689708265,"end-est":0.00390625,"identifier":"#f","input":"(* 200.0 (- x y))","link":"262-DataColourCIEcieLABViewfromcolour233C","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, C","output":"(fma 200.0 x (* -200.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 200.0 (- x y))","start":0.03325,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3091.328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01675) (6720 0.009573120312590146) ())","end":0.009573120312590146,"end-est":0.01171875,"identifier":"#f","input":"(* 500.0 (- x y))","link":"263-DataColourCIEcieLABViewfromcolour233B","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, B","output":"(fma -500.0 y (* 500.0 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 500.0 (- x y))","start":0.01675,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":2937.775390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.07793648163704121) (6592 0.07554903967784733) ())","end":0.07554903967784733,"end-est":0.0703125,"identifier":"#f","input":"(+ (* (/ 841.0 108.0) x) (/ 4.0 29.0))","link":"264-DataColourCIEcieLABViewfromcolour233A","name":"Data.Colour.CIE:cieLABView from colour-2.3.3, A","output":"(fma 7.787037037037037 x 0.13793103448275862)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (/ 841.0 108.0) x) (/ 4.0 29.0))","start":0.07793648163704121,"start-est":0.0703125,"status":"ex-start","target":false,"target-prog":"#f","time":5209.346435546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.007674039677847345) (320 0.007674039677847345) ())","end":0.007674039677847345,"end-est":0.01171875,"identifier":"#f","input":"(- x (/ y 200.0))","link":"265-DataColourCIEcieLABfromcolour233D","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, D","output":"(- x (/ y 200.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ y 200.0))","start":0.007674039677847345,"start-est":0.01171875,"status":"ex-start","target":false,"target-prog":"#f","time":2798.69384765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0073231203125901445) (320 0.0073231203125901445) ())","end":0.0073231203125901445,"end-est":0.00390625,"identifier":"#f","input":"(+ x (/ y 500.0))","link":"266-DataColourCIEcieLABfromcolour233C","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, C","output":"(+ x (/ y 500.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ y 500.0))","start":0.0073231203125901445,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2761.719970703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00725) (320 0.00725) ())","end":0.00725,"end-est":0.00390625,"identifier":"#f","input":"(/ (+ x 16.0) 116.0)","link":"267-DataColourCIEcieLABfromcolour233B","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, B","output":"(/ (+ x 16.0) 116.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x 16.0) 116.0)","start":0.00725,"start-est":0.00390625,"status":"ex-start","target":false,"target-prog":"#f","time":2378.20458984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.000875) (320 0.000875) ())","end":0.000875,"end-est":0,"identifier":"#f","input":"(- (- 1.0 x) y)","link":"268-DataColourCIEChromaticitychromaCoordsfromcolour233","name":"Data.Colour.CIE.Chromaticity:chromaCoords from colour-2.3.3","output":"(- (- 1.0 x) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- 1.0 x) y)","start":0.000875,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":1850.78662109375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.0965) (6976 0.0085) ())","end":0.0085,"end-est":0.00390625,"identifier":"#f","input":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.25)) z)) y))","link":"269-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, C","output":"(fma 4.0 (- (/ x y) (/ z y)) 2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.25)) z)) y))","start":0.0965,"start-est":0.26953125,"status":"ex-start","target":false,"target-prog":"#f","time":4325.421630859375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.161125) (832 0.0085) ())","end":0.0085,"end-est":0.00390625,"identifier":"#f","input":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.75)) z)) y))","link":"270-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, A","output":"(+ 4.0 (+ (* -4.0 (/ z y)) (* 4.0 (/ x y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ 1.0 (/ (* 4.0 (- (+ x (* y 0.75)) z)) y))","start":0.161125,"start-est":0.5625,"status":"ex-start","target":false,"target-prog":"#f","time":4418.093017578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 0.4559594298923382) (27456 0.2189093717326517) ())","end":0.2189093717326517,"end-est":0.24032218702388497,"identifier":"#f","input":"(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))","link":"271-Curveintersectionscalewidthbasedonribbonorientatio","name":"Curve intersection, scale width based on ribbon orientation","output":"(fma u n1_i (fma (* normAngle normAngle) (* -0.16666666666666666 (+ (* n1_i (- (pow u 3.0) u)) (* n0_i (+ (pow (- 1.0 u) 3.0) (+ u -1.0))))) (- n0_i (* u n0_i))))","pre":"(and (and (and (and (<= 0.0 normAngle) (<= normAngle (/ PI 2.0))) (and (<= -1.0 n0_i) (<= n0_i 1.0))) (and (<= -1.0 n1_i) (<= n1_i 1.0))) (and (<= 2.328306437e-10 u) (<= u 1.0)))","prec":"binary64","preprocess":"()","spec":"(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))","start":0.4559594298923382,"start-est":0.46119851489691627,"status":"ex-start","target":false,"target-prog":"#f","time":15176.36865234375,"vars":["normAngle","u","n0_i","n1_i"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 52.43419072798439) (59968 1.5176041563873977) ())","end":1.5176041563873977,"end-est":1.6252099833136895,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"272-Cubiccriticalwiderange","name":"Cubic critical, wide range","output":"(fma -0.16666666666666666 (* (/ (pow a 3.0) b) (* (/ (pow c 4.0) (pow b 6.0)) 6.328125)) (fma -0.5 (/ c b) (fma -0.375 (* a (/ c (/ (pow b 3.0) c))) (/ (* -0.5625 (pow c 3.0)) (/ (pow b 5.0) (* a a))))))","pre":"(and (and (and (< 4.930380657631324e-32 a) (< a 2.028240960365167e+31)) (and (< 4.930380657631324e-32 b) (< b 2.028240960365167e+31))) (and (< 4.930380657631324e-32 c) (< c 2.028240960365167e+31)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":52.43419072798439,"start-est":51.594050466988485,"status":"imp-start","target":false,"target-prog":"#f","time":11247.2607421875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 28.40231257286644) (54276 5.316661531209652) ())","end":5.316661531209652,"end-est":3.993276648929993,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"273-Cubiccriticalnarrowrange","name":"Cubic critical, narrow range","output":"(if (<= (/ (- (sqrt (- (* b b) (* (* 3.0 a) c))) b) (* 3.0 a)) -200.0) (/ (- (sqrt (+ (* b b) (fma c (* a -3.0) (fma c (* a -3.0) (* 3.0 (* a c)))))) b) (* 3.0 a)) (fma -0.5 (/ c b) (fma -1.0546875 (* (/ (pow a 3.0) (pow b 7.0)) (pow c 4.0)) (* (* a (* c c)) (+ (/ -0.375 (pow b 3.0)) (/ (* c -0.5625) (/ (pow b 5.0) a)))))))","pre":"(and (and (and (< 1.0536712127723509e-8 a) (< a 94906265.62425156)) (and (< 1.0536712127723509e-8 b) (< b 94906265.62425156))) (and (< 1.0536712127723509e-8 c) (< c 94906265.62425156)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":28.40231257286644,"start-est":29.791476765804404,"status":"imp-start","target":false,"target-prog":"#f","time":11121.507080078125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 43.925406672528574) (46848 3.0317560478212258) ())","end":3.0317560478212258,"end-est":2.359943724732009,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"274-Cubiccriticalmediumrange","name":"Cubic critical, medium range","output":"(fma -0.5 (/ c b) (fma -1.0546875 (* (pow a 3.0) (/ (pow c 4.0) (pow b 7.0))) (* (* a (* c c)) (+ (/ -0.375 (pow b 3.0)) (/ (* c -0.5625) (/ (pow b 5.0) a))))))","pre":"(and (and (and (< 1.1102230246251565e-16 a) (< a 9007199254740992.0)) (and (< 1.1102230246251565e-16 b) (< b 9007199254740992.0))) (and (< 1.1102230246251565e-16 c) (< c 9007199254740992.0)))","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":43.925406672528574,"start-est":45.24483962062715,"status":"imp-start","target":false,"target-prog":"#f","time":10101.990478515625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.39822533787267) (7624 13.483057568337523) ())","end":13.483057568337523,"end-est":13.734090110846925,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","link":"275-Cubiccritical","name":"Cubic critical","output":"(if (<= b -7.6e+119) (/ (* b -2.0) (* 3.0 a)) (if (<= b 2.05e-55) (/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a)) (/ (* (* a (/ c b)) (+ -1.5 (/ (* c -1.125) (/ b (/ a b))))) (* 3.0 a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))","start":34.39822533787267,"start-est":36.56801711318677,"status":"imp-start","target":false,"target-prog":"#f","time":15558.955322265625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.015164669951762516) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ (+ x y) z) (+ x (+ y z)))","link":"276-Commuteandassociate","name":"Commute and associate","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (+ x y) z) (+ x (+ y z)))","start":0.015164669951762516,"start-est":0,"status":"ex-start","target":false,"target-prog":"#f","time":6889.626220703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 29.1165038001713) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ 1.0 x) x)","link":"277-Cancelliketerms","name":"Cancel like terms","output":"1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ 1.0 x) x)","start":29.1165038001713,"start-est":29.55792200167556,"status":"imp-start","target":false,"target-prog":"#f","time":2063.748779296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((14656 0.025403970356125953) (27520 0.03404355461454926) ())","end":0.03404355461454926,"end-est":0.014003759768442016,"identifier":"#f","input":"(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))","link":"278-BulmashinitializePoisson","name":"Bulmash initializePoisson","output":"(+ (* NdChar (/ 1.0 (+ 1.0 (exp (/ (+ Vef (+ EDonor (- mu Ec))) KbT))))) (/ NaChar (+ 1.0 (pow (cbrt (exp (/ (+ (- EAccept mu) (+ Vef Ev)) KbT))) 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))","start":0.025403970356125953,"start-est":0.01953125,"status":"ex-start","target":false,"target-prog":"#f","time":17748.935302734375,"vars":["NdChar","Ec","Vef","EDonor","mu","KbT","NaChar","Ev","EAccept"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 0.1859876250461718) (26560 0.009375) ())","end":0.009375,"end-est":0.0078125,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)","link":"279-BoulandandAaronsonEquation26","name":"Bouland and Aaronson, Equation (26)","output":"(+ (pow b 4.0) (+ (pow a 4.0) (fma (* b b) (fma 2.0 (* a a) 4.0) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)","start":0.1859876250461718,"start-est":0.16863251953688405,"status":"ex-start","target":false,"target-prog":"#f","time":5742.862548828125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((8320 0.18413293546031992) (39936 0.021425491201501) ())","end":0.021425491201501,"end-est":0.0078125,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)","link":"280-BoulandandAaronsonEquation25","name":"Bouland and Aaronson, Equation (25)","output":"(+ (fma (fma a a (pow a 3.0)) 4.0 (fma (* b b) (+ 4.0 (* a (+ (* a 2.0) -12.0))) (pow a 4.0))) (+ (pow b 4.0) -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)","start":0.18413293546031992,"start-est":0.14681625976844204,"status":"ex-start","target":false,"target-prog":"#f","time":11587.768798828125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((8192 0.1849552740249568) (46336 0.02354105267860531) ())","end":0.02354105267860531,"end-est":0.01953125,"identifier":"#f","input":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)","link":"281-BoulandandAaronsonEquation24","name":"Bouland and Aaronson, Equation (24)","output":"(+ (fma (- (* a a) (pow a 3.0)) 4.0 (fma b (* b (fma 2.0 (* a a) (fma a 4.0 12.0))) (pow a 4.0))) (+ -1.0 (pow b 4.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)","start":0.1849552740249568,"start-est":0.1797748742696424,"status":"ex-start","target":false,"target-prog":"#f","time":13412.58447265625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((26944 0.39504138458650956) (26944 0.39504138458650956) ())","end":0.39504138458650956,"end-est":0.35546875,"identifier":"#f","input":"(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))","link":"282-BeckmannSamplenormalizationfactor","name":"Beckmann Sample, normalization factor","output":"(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (- (* cosTheta cosTheta))))))","pre":"(and (and (< 0.0 cosTheta) (< cosTheta 0.9999)) (and (< -1.0 c) (< c 1.0)))","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))","start":0.39504138458650956,"start-est":0.35546875,"status":"ex-start","target":false,"target-prog":"#f","time":12075.49462890625,"vars":["cosTheta","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 12.58302090559287) (26112 0.5190204667999576) ())","end":0.5190204667999576,"end-est":0.5144340431959218,"identifier":"#f","input":"(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))","link":"283-BeckmannSamplenearnormalslope_y","name":"Beckmann Sample, near normal, slope_y","output":"(* (sqrt (- (log1p (- u1)))) (sin (* 2.0 (* PI u2))))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))","start":12.58302090559287,"start-est":11.542536200529,"status":"imp-start","target":false,"target-prog":"#f","time":11251.427490234375,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((26176 12.586527809452916) (77888 0.39689470451766345) ())","end":0.39689470451766345,"end-est":0.3629613978555929,"identifier":"#f","input":"(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))","link":"284-BeckmannSamplenearnormalslope_x","name":"Beckmann Sample, near normal, slope_x","output":"(* (sqrt (- (log1p (- u1)))) (+ (cos (* 2.0 (* PI u2))) (fma (- (sin (* PI u2))) (sin (* PI u2)) (pow (sin (* PI u2)) 2.0))))","pre":"(and (and (and (> cosTheta_i 0.9999) (<= cosTheta_i 1.0)) (and (<= 2.328306437e-10 u1) (<= u1 1.0))) (and (<= 2.328306437e-10 u2) (<= u2 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))","start":12.586527809452916,"start-est":11.52897205062917,"status":"imp-start","target":false,"target-prog":"#f","time":10092.591796875,"vars":["cosTheta_i","u1","u2"]},{"bits":128,"conversions":[],"cost-accuracy":"((6912 13.257717104342259) (6848 0.35226672969029454) ())","end":0.35226672969029454,"end-est":0.375663769536884,"identifier":"#f","input":"(* (* (- alpha) alpha) (log (- 1.0 u0)))","link":"285-BeckmannDistributionsampletan2thetaalphaxalphay","name":"Beckmann Distribution sample, tan2theta, alphax == alphay","output":"(* alpha (* alpha (- (log1p (- u0)))))","pre":"(and (and (<= 0.0001 alpha) (<= alpha 1.0)) (and (<= 2.328306437e-10 u0) (<= u0 1.0)))","prec":"binary64","preprocess":"()","spec":"(* (* (- alpha) alpha) (log (- 1.0 u0)))","start":13.257717104342259,"start-est":13.661415832208254,"status":"imp-start","target":false,"target-prog":"#f","time":8379.29833984375,"vars":["alpha","u0"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 13.225339957029876) (7360 0.5519909456636427) ())","end":0.5519909456636427,"end-est":0.5801739741034082,"identifier":"#f","input":"(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))","link":"286-BeckmannDistributionsampletan2thetaalphaxalphayu10","name":"Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5","output":"(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))","pre":"(and (and (and (and (and (<= 0.0001 alphax) (<= alphax 1.0)) (and (<= 0.0001 alphay) (<= alphay 1.0))) (and (<= 2.328306437e-10 u0) (<= u0 1.0))) (and (<= 0.0 cos2phi) (<= cos2phi 1.0))) (<= 0.0 sin2phi))","prec":"binary64","preprocess":"()","spec":"(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))","start":13.225339957029876,"start-est":11.771495550979543,"status":"imp-start","target":false,"target-prog":"#f","time":11271.1044921875,"vars":["alphax","alphay","u0","cos2phi","sin2phi"]},{"bits":128,"conversions":[],"cost-accuracy":"((52224 12.85388811764045) (116544 0.18155360327821335) ())","end":0.18155360327821335,"end-est":0.18512623993272953,"identifier":"#f","input":"(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))","link":"287-Bearingonagreatcircle","name":"Bearing on a great circle","output":"(atan2 (* (fma (sin lambda1) (cos lambda2) (* (cos lambda1) (- (sin lambda2)))) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (expm1 (log1p (* (cos phi2) (sin phi1)))) (fma (cos lambda1) (cos lambda2) (* (sin lambda1) (sin lambda2))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))","start":12.85388811764045,"start-est":10.887698259007689,"status":"imp-start","target":false,"target-prog":"#f","time":35819.465576171875,"vars":["lambda1","lambda2","phi1","phi2"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 29.129358188954537) (8132 0.2369688049113241) ())","end":0.2369688049113241,"end-est":0.015625,"identifier":"#f","input":"(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))","link":"288-AsymptoteC","name":"Asymptote C","output":"(if (<= (+ (/ x (+ x 1.0)) (/ (- -1.0 x) (+ x -1.0))) 4e-10) (fma (/ 1.0 (* x x)) (+ -1.0 (/ -3.0 x)) (/ -3.0 x)) (fma x (/ 1.0 (+ x 1.0)) (/ (- -1.0 x) (+ x -1.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))","start":29.129358188954537,"start-est":27.185551827362957,"status":"imp-start","target":false,"target-prog":"#f","time":7863.752685546875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.012125) (14400 0.015993045314032464) ())","end":0.015993045314032464,"end-est":0,"identifier":"#f","input":"(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))","link":"289-AsymptoteB","name":"Asymptote B","output":"(* (- (pow (+ x -1.0) -2.0) (pow (/ x (+ x 1.0)) 2.0)) (/ 1.0 (- (/ 1.0 (+ x -1.0)) (/ x (+ x 1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))","start":0.012125,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":5150.068359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 14.500338363949538) (6720 0.34491309844033674) ())","end":0.34491309844033674,"end-est":0.07210715476030194,"identifier":"#f","input":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))","link":"290-AsymptoteA","name":"Asymptote A","output":"(/ -2.0 (fma x x -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))","start":14.500338363949538,"start-est":14.767992358644088,"status":"imp-start","target":false,"target-prog":"#f","time":5043.100830078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0155) (320 0.0155) ())","end":0.0155,"end-est":0.015625,"identifier":"#f","input":"(/ x (+ y x))","link":"291-AIClusteringHierarchicalInternalaveragefromcluster","name":"AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, B","output":"(/ x (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ y x))","start":0.0155,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3112.5986328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0155) (320 0.0155) ())","end":0.0155,"end-est":0.015625,"identifier":"#f","input":"(/ x (+ x y))","link":"292-AIClusteringHierarchicalInternalaveragefromcluster","name":"AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, A","output":"(/ x (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ x y))","start":0.0155,"start-est":0.015625,"status":"ex-start","target":false,"target-prog":"#f","time":3137.12744140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((40576 52.55180632179246) (162316 36.912532119210425) ())","end":36.912532119210425,"end-est":41.141102493383535,"identifier":"#f","input":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","link":"293-ABCFabangleb","name":"ABCF->ab-angle b","output":"(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (- INFINITY)) (/ (* (sqrt (* F (fma 2.0 A (/ -0.5 (/ C (* B B)))))) (- (sqrt (* 2.0 (fma (* A -4.0) C (* B B)))))) (fma B B (* A (* C -4.0)))) (if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) -1e-180) (/ (- (sqrt (* 2.0 (* (+ C (- A (hypot B (- A C)))) (* F (fma B B (* C (* A -4.0)))))))) (fma B B (* A (* C -4.0)))) (if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) INFINITY) (/ (- (sqrt (* 2.0 (pow (sqrt (* (fma 2.0 A (/ -0.5 (/ C (* B B)))) (* F (fma (* A -4.0) C (* B B))))) 2.0)))) (fma B B (* A (* C -4.0)))) (* (sqrt (* F (- A (hypot B A)))) (/ (- (sqrt 2.0)) B)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort A C))","spec":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","start":52.55180632179246,"start-est":51.39819220198114,"status":"imp-start","target":false,"target-prog":"#f","time":29531.236083984375,"vars":["A","B","C","F"]},{"bits":128,"conversions":[],"cost-accuracy":"((33152 29.09779590408139) (60488 7.349005520325715) ())","end":7.349005520325715,"end-est":5.5031740550550134,"identifier":"#f","input":"(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))","link":"294-ABCFabangleangle","name":"ABCF->ab-angle angle","output":"(if (<= (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) -1e-42) (* 180.0 (log (exp (/ (atan (/ (- (- C A) (hypot (- C A) B)) B)) PI)))) (if (<= (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) 0.0) (/ 1.0 (/ PI (* 180.0 (atan (* -0.5 (/ B (- C A))))))) (* 180.0 (/ (atan (/ (- (- C A) (hypot B (- C A))) B)) PI))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))","start":29.09779590408139,"start-est":27.769502334282794,"status":"imp-start","target":false,"target-prog":"#f","time":15271.20068359375,"vars":["A","B","C"]},{"bits":128,"conversions":[],"cost-accuracy":"((40576 52.52693574538774) (169292 32.41875771268355) ())","end":32.41875771268355,"end-est":30.05544372823756,"identifier":"#f","input":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","link":"295-ABCFabanglea","name":"ABCF->ab-angle a","output":"(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) -2e-216) (* (* (sqrt (* 2.0 (fma B B (* A (* C -4.0))))) (sqrt F)) (* (sqrt (+ A (+ C (hypot B (- A C))))) (/ -1.0 (fma B B (* A (* C -4.0)))))) (if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+129) (/ (- (sqrt (* 2.0 (* (* F (fma B B (* A (* C -4.0)))) (+ C (fma -0.5 (/ B (/ A B)) C)))))) (fma B B (* A (* C -4.0)))) (if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) INFINITY) (* (sqrt (* 2.0 (* F (fma B B (* A (* C -4.0)))))) (* (/ (pow (+ A (+ C (hypot B (- A C)))) 0.25) (fma B B (* A (* C -4.0)))) (- (pow (+ A (+ C (hypot B (- A C)))) 0.25)))) (* (/ (sqrt 2.0) B) (- (sqrt (* F (+ C (hypot B C)))))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort A C))","spec":"(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))","start":52.52693574538774,"start-est":51.84964267216948,"status":"imp-start","target":false,"target-prog":"#f","time":31020.48583984375,"vars":["A","B","C","F"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 32.41392480093671) (67088 12.326633770497232) ())","end":12.326633770497232,"end-est":8.804056341490751,"identifier":"#f","input":"(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))","link":"296-2nthrtproblem346","name":"2nthrt (problem 3.4.6)","output":"(if (<= (/ 1.0 n) -2.1e-9) (pow (pow (- (exp (/ (log1p x) n)) (pow x (/ 1.0 n))) 3.0) 0.3333333333333333) (if (<= (/ 1.0 n) 1e-206) (+ (- (/ (log (/ (+ 1.0 x) x)) n) (/ (- (pow (log1p x) 3.0) (pow (log x) 3.0)) (/ (pow n 3.0) -0.16666666666666666))) (* (/ 0.5 n) (- (/ (pow (log1p x) 2.0) n) (/ (pow (log x) 2.0) n)))) (if (<= (/ 1.0 n) 1e-150) (fma (/ (exp (/ (log x) n)) (* x x)) (+ (/ 0.5 (* n n)) (/ -0.5 n)) (/ (exp (/ (log x) n)) (* n x))) (if (<= (/ 1.0 n) 1e-27) (+ (- (/ (log (/ (+ 1.0 x) x)) n) (/ (- (pow (log1p x) 3.0) (pow (log x) 3.0)) (/ (pow n 3.0) -0.16666666666666666))) (* (/ 0.5 n) (- (/ (pow (log1p x) 2.0) n) (/ (pow (log x) 2.0) n)))) (if (<= (/ 1.0 n) 0.004) (fma (/ (exp (/ (log x) n)) (* x x)) (+ (/ 0.5 (* n n)) (/ -0.5 n)) (/ (exp (/ (log x) n)) (* n x))) (pow (pow (- (exp (/ (log1p x) n)) (pow x (/ 1.0 n))) 3.0) 0.3333333333333333))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))","start":32.41392480093671,"start-est":33.20623557247954,"status":"imp-start","target":false,"target-prog":"#f","time":26389.099609375,"vars":["x","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 28.955645868126744) (46084 0.06843908312547513) ())","end":0.06843908312547513,"end-est":0.01171875,"identifier":"#f","input":"(- (log (+ N 1.0)) (log N))","link":"297-2logproblem336","name":"2log (problem 3.3.6)","output":"(if (<= (- (log (+ N 1.0)) (log N)) 5e-5) (+ (* -0.25 (pow N -4.0)) (fma -0.5 (pow N -2.0) (fma 0.3333333333333333 (pow N -3.0) (/ 1.0 N)))) (- (log1p N) (log N)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (+ N 1.0)) (log N))","start":28.955645868126744,"start-est":29.64113548263881,"status":"imp-start","target":false,"target-prog":"#f","time":7486.30419921875,"vars":["N"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.528223310931253) (448 0.07069812031259015) ())","end":0.07069812031259015,"end-est":0.0625,"identifier":"#f","input":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","link":"298-2fracproblem331","name":"2frac (problem 3.3.1)","output":"(/ (/ -1.0 x) (+ x 1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))","start":14.528223310931253,"start-est":13.616993713721426,"status":"imp-start","target":false,"target-prog":"#f","time":3982.60791015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 39.2873817874248) (45448 1.1636044228088023) ())","end":1.1636044228088023,"end-est":0.43272879063764236,"identifier":"#f","input":"(- (cos (+ x eps)) (cos x))","link":"299-2cosproblem335","name":"2cos (problem 3.3.5)","output":"(if (<= eps -0.0015384434069952173) (fma (cos eps) (cos x) (- (fma (sin x) (sin eps) (cos x)))) (if (<= eps 1.3325182536144267e-19) (* (* -2.0 (sin (* eps 0.5))) (sin (* 0.5 (+ x (+ eps x))))) (fma (cos eps) (cos x) (- (fma (sin x) (sin eps) (cos x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (cos (+ x eps)) (cos x))","start":39.2873817874248,"start-est":39.744630232718805,"status":"imp-start","target":false,"target-prog":"#f","time":16259.533935546875,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.50313296406671) (59008 0.5519181419873435) ())","end":0.5519181419873435,"end-est":0.5280329586096439,"identifier":"#f","input":"(- (cbrt (+ x 1.0)) (cbrt x))","link":"300-2cbrtproblem334","name":"2cbrt (problem 3.3.4)","output":"(/ 1.0 (+ (* (cbrt (pow (cbrt (+ 1.0 x)) 2.0)) (* (cbrt (+ 1.0 x)) (cbrt (cbrt (+ 1.0 x))))) (* (cbrt x) (+ (cbrt (+ 1.0 x)) (cbrt x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (cbrt (+ x 1.0)) (cbrt x))","start":29.50313296406671,"start-est":30.223691979253534,"status":"imp-start","target":false,"target-prog":"#f","time":5958.2568359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 16.170960516925767) (13120 0.8338914858991796) ())","end":0.8338914858991796,"end-est":0.786349182126777,"identifier":"#f","input":"(cbrt (/ g (* 2.0 a)))","link":"301-2ancestrymixingzerodiscriminant","name":"2-ancestry mixing, zero discriminant","output":"(/ (cbrt (* g 0.5)) (cbrt a))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(cbrt (/ g (* 2.0 a)))","start":16.170960516925767,"start-est":17.667760054827063,"status":"imp-start","target":false,"target-prog":"#f","time":3390.493896484375,"vars":["g","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((27712 36.274428943484835) (33408 34.13793895606713) ())","end":34.13793895606713,"end-est":35.44079258012895,"identifier":"#f","input":"(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))","link":"302-2ancestrymixingpositivediscriminant","name":"2-ancestry mixing, positive discriminant","output":"(+ (/ (cbrt (* (- (hypot g h) g) 0.5)) (cbrt a)) (cbrt (* (+ g (sqrt (- (* g g) (* h h)))) (/ -0.5 a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))","start":36.274428943484835,"start-est":38.435174545333744,"status":"imp-start","target":false,"target-prog":"#f","time":13944.530517578125,"vars":["g","h","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.9902552640694422) (109888 1.2679562556964519) ())","end":1.2679562556964519,"end-est":0.8821215649984551,"identifier":"#f","input":"(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))","link":"303-2ancestrymixingnegativediscriminant","name":"2-ancestry mixing, negative discriminant","output":"(* 2.0 (+ (log (pow (cbrt (exp (cos (fma PI 0.6666666666666666 (* (acos (/ g h)) 0.3333333333333333))))) 2.0)) (log (cbrt (exp (cos (fma PI 0.6666666666666666 (cbrt (pow (* (acos (/ g h)) 0.3333333333333333) 3.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))","start":0.9902552640694422,"start-est":0.9928512695368841,"status":"ex-start","target":false,"target-prog":"#f","time":11145.413330078125,"vars":["g","h"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 61.998113490722915) (53504 50.02743726788314) ())","end":50.02743726788314,"end-est":49.89916307845858,"identifier":"#f","input":"(/ (- x lo) (- hi lo))","link":"304-xlohilo","name":"(/ (- x lo) (- hi lo))","output":"(fma -0.75 (* (/ lo hi) (fma (/ x hi) 0.25 -0.5)) (fma 0.75 (/ (fma x -0.5 (fma (* x (/ x hi)) -0.125 hi)) hi) (fma 0.140625 (* lo (/ lo (* hi hi))) (pow (fma (/ x hi) 0.25 -0.5) 2.0))))","pre":"(and (< lo -1e+308) (> hi 1e+308))","prec":"binary64","preprocess":"()","spec":"(/ (- x lo) (- hi lo))","start":61.998113490722915,"start-est":62.01279314736873,"status":"imp-start","target":false,"target-prog":"#f","time":9110.50732421875,"vars":["lo","hi","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 14.672047602240252) (52552 0.23865036799941347) ())","end":0.23865036799941347,"end-est":0.01171875,"identifier":"#f","input":"(/ x (+ (* x x) 1.0))","link":"305-xx21","name":"x / (x^2 + 1)","output":"(if (<= x -6040261615.299245) (+ (/ 1.0 x) (/ -1.0 (pow x 3.0))) (if (<= x 9.544882123799739e-5) (* (/ 1.0 (sqrt (fma x x 1.0))) (* (sqrt (pow (fma x x 1.0) -0.5)) (* x (sqrt (pow (fma x x 1.0) -0.5))))) (+ (/ 1.0 x) (/ -1.0 (pow x 3.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ (* x x) 1.0))","start":14.672047602240252,"start-est":13.932598847809244,"status":"eq-target","target":0.09219812031259014,"target-prog":"(/ 1.0 (+ x (/ 1.0 x)))","time":7468.6005859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.885035113246303) (6592 0.000375) ())","end":0.000375,"end-est":0,"identifier":"#f","input":"(/ (- 1.0 (cos x)) (sin x))","link":"306-tanhfexample34","name":"tanhf (example 3.4)","output":"(tan (/ x 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- 1.0 (cos x)) (sin x))","start":29.885035113246303,"start-est":28.778145897409775,"status":"eq-target","target":0.000375,"target-prog":"(tan (/ x 2.0))","time":14744.4609375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 32.02220385542953) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (/ x x) (* (/ 1.0 x) (sqrt (* x x))))","link":"307-sqrtsqr","name":"sqrt sqr","output":"(- 1.0 (/ (fabs x) x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x x) (* (/ 1.0 x) (sqrt (* x x))))","start":32.02220385542953,"start-est":30.649855487758856,"status":"eq-target","target":0,"target-prog":"(if (< x 0.0) 2.0 0.0)","time":7125.015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 45.131060686163956) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (fma x y z) (+ 1.0 (+ (* x y) z)))","link":"308-simplefmatest","name":"simple fma test","output":"-1.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (fma x y z) (+ 1.0 (+ (* x y) z)))","start":45.131060686163956,"start-est":45.81064491022098,"status":"eq-target","target":0,"target-prog":"-1.0","time":7606.9267578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35819812078519) (13896 11.177061634378054) ())","end":11.177061634378054,"end-est":8.107225346096225,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"309-quadpp42positive","name":"quadp (p42, positive)","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) (* a 2.0)) (/ (- c) b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.35819812078519,"start-est":36.52266464947487,"status":"gt-target","target":21.487900506318958,"target-prog":"(if (< b 0.0) (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (/ c (* a (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))))","time":13650.544189453125,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.20065493770275) (13960 10.645326028873919) ())","end":10.645326028873919,"end-est":9.167358440729585,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"310-quadmp42negative","name":"quadm (p42, negative)","output":"(if (<= b -6.7e-112) (- (/ c b)) (if (<= b 2.4e+91) (/ (- (- b) (sqrt (fma (* c -4.0) a (* b b)))) (* a 2.0)) (/ (- b) a)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.20065493770275,"start-est":34.0148828873389,"status":"gt-target","target":20.897235592582238,"target-prog":"(if (< b 0.0) (/ c (* a (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))) (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))","time":16302.61181640625,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 61.345336999236395) (19520 0.0264624062518029) ())","end":0.0264624062518029,"end-est":0.033535009768442016,"identifier":"#f","input":"(/ (log (- 1.0 x)) (log (+ 1.0 x)))","link":"311-qlogexample310","name":"qlog (example 3.10)","output":"(pow (/ (log1p x) (log1p (- x))) -1.0)","pre":"(and (< -1.0 x) (< x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (log (- 1.0 x)) (log (+ 1.0 x)))","start":61.345336999236395,"start-est":59.71430173934616,"status":"eq-target","target":0.3638129519277175,"target-prog":"(- (+ (+ (+ 1.0 x) (/ (* x x) 2.0)) (* 0.4166666666666667 (pow x 3.0))))","time":16088.693359375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 38.362725568095286) (40260 10.430185287925982) ())","end":10.430185287925982,"end-est":10.286989219200942,"identifier":"#f","input":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re))))","link":"312-mathsqrtoncomplexrealpart","name":"math.sqrt on complex, real part","output":"(if (<= (sqrt (* 2.0 (+ re (sqrt (+ (* re re) (* im im)))))) 0.0) (* 0.5 (sqrt (* 2.0 (fma (* im (/ im re)) -0.5 (* (pow im 4.0) (/ 0.125 (pow re 3.0))))))) (* 0.5 (sqrt (* 2.0 (+ re (hypot re im))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re))))","start":38.362725568095286,"start-est":38.14747123803534,"status":"gt-target","target":33.32562589381907,"target-prog":"(if (< re 0.0) (* 0.5 (* (sqrt 2.0) (sqrt (/ (* im im) (- (sqrt (+ (* re re) (* im im))) re))))) (* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re)))))","time":6134.818603515625,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19776 57.85245952112349) (26752 0.7687638424839974) ())","end":0.7687638424839974,"end-est":0.5786876667880401,"identifier":"#f","input":"(* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im)))","link":"313-mathsinoncompleximaginarypart","name":"math.sin on complex, imaginary part","output":"(* (cos re) (- (+ (* (pow im 5.0) -0.008333333333333333) (+ (* (pow im 7.0) -0.0001984126984126984) (* (pow im 3.0) -0.16666666666666666))) im))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im)))","start":57.85245952112349,"start-est":58.342558807791505,"status":"eq-target","target":0.2481030439567222,"target-prog":"(if (< (fabs im) 1.0) (- (* (cos re) (+ (+ im (* (* (* 0.16666666666666666 im) im) im)) (* (* (* (* (* 0.008333333333333333 im) im) im) im) im)))) (* (* 0.5 (cos re)) (- (exp (- 0.0 im)) (exp im))))","time":20682.294189453125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.129875) (6528 0.000375) ())","end":0.000375,"end-est":0,"identifier":"#f","input":"(* (* x x) x)","link":"314-mathcubeonreal","name":"math.cube on real","output":"(pow x 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) x)","start":0.129875,"start-est":0.140625,"status":"eq-target","target":0.000375,"target-prog":"(pow x 3.0)","time":1859.89208984375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 7.399872159990437) (13312 0.1718067671895733) ())","end":0.1718067671895733,"end-est":0.14453125,"identifier":"#f","input":"(- (* (- (* x.re x.re) (* x.im x.im)) x.re) (* (+ (* x.re x.im) (* x.im x.re)) x.im))","link":"315-mathcubeoncomplexrealpart","name":"math.cube on complex, real part","output":"(fma x.im (* -3.0 (* x.im x.re)) (pow x.re 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (- (* x.re x.re) (* x.im x.im)) x.re) (* (+ (* x.re x.im) (* x.im x.re)) x.im))","start":7.399872159990437,"start-est":8.1640625,"status":"eq-target","target":0.25231860937770434,"target-prog":"(+ (* (* x.re x.re) (- x.re x.im)) (* (* x.re x.im) (- x.re (* 3.0 x.im))))","time":6704.659912109375,"vars":["x.re","x.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 7.521198120312591) (13376 0.17830921094065502) ())","end":0.17830921094065502,"end-est":0.18359375,"identifier":"#f","input":"(+ (* (- (* x.re x.re) (* x.im x.im)) x.im) (* (+ (* x.re x.im) (* x.im x.re)) x.re))","link":"316-mathcubeoncompleximaginarypart","name":"math.cube on complex, imaginary part","output":"(fma (* x.re (* x.im x.re)) 3.0 (- (pow x.im 3.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (- (* x.re x.re) (* x.im x.im)) x.im) (* (+ (* x.re x.im) (* x.im x.re)) x.re))","start":7.521198120312591,"start-est":9.1640625,"status":"eq-target","target":0.24579736875252392,"target-prog":"(+ (* (* x.re x.im) (* 2.0 x.re)) (* (* x.im (- x.re x.im)) (+ x.re x.im)))","time":7364.63330078125,"vars":["x.re","x.im"]},{"bits":128,"conversions":[],"cost-accuracy":"((19712 43.57991380685651) (52480 0.7763453829738459) ())","end":0.7763453829738459,"end-est":0.5730776568427052,"identifier":"#f","input":"(* (* 0.5 (sin re)) (- (exp (- im)) (exp im)))","link":"317-mathcosoncompleximaginarypart","name":"math.cos on complex, imaginary part","output":"(fma (* 0.5 (sin re)) (* -2.0 im) (* (* 0.5 (sin re)) (fma -0.0003968253968253968 (pow im 7.0) (fma -0.3333333333333333 (pow im 3.0) (* -0.016666666666666666 (pow im 5.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 0.5 (sin re)) (- (exp (- im)) (exp im)))","start":43.57991380685651,"start-est":43.643783591510825,"status":"eq-target","target":0.2615457414550207,"target-prog":"(if (< (fabs im) 1.0) (- (* (sin re) (+ (+ im (* (* (* 0.16666666666666666 im) im) im)) (* (* (* (* (* 0.008333333333333333 im) im) im) im) im)))) (* (* 0.5 (sin re)) (- (exp (- im)) (exp im))))","time":21092.182861328125,"vars":["re","im"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 63.00970925069711) (6464 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)","link":"318-logsexample38","name":"logs (example 3.8)","output":"(log n)","pre":"(> n 6.8e+15)","prec":"binary64","preprocess":"()","spec":"(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)","start":63.00970925069711,"start-est":62.98030791109286,"status":"eq-target","target":0,"target-prog":"(- (log (+ n 1.0)) (- (/ 1.0 (* 2.0 n)) (- (/ 1.0 (* 3.0 (* n n))) (/ 4.0 (pow n 3.0)))))","time":10075.477783203125,"vars":["n"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 58.63234895728534) (13056 0.00675) ())","end":0.00675,"end-est":0.0078125,"identifier":"#f","input":"(log (/ (- 1.0 eps) (+ 1.0 eps)))","link":"319-logqproblem343","name":"logq (problem 3.4.3)","output":"(- (log1p (- eps)) (log1p eps))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (/ (- 1.0 eps) (+ 1.0 eps)))","start":58.63234895728534,"start-est":58.9023254419129,"status":"eq-target","target":0.20961226694348029,"target-prog":"(* -2.0 (+ (+ eps (/ (pow eps 3.0) 3.0)) (/ (pow eps 5.0) 5.0)))","time":9769.766845703125,"vars":["eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 39.06500429743133) (6464 0.000125) ())","end":0.000125,"end-est":0.00390625,"identifier":"#f","input":"(log (+ 1.0 x))","link":"320-ln1x","name":"ln(1 + x)","output":"(log1p x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ 1.0 x))","start":39.06500429743133,"start-est":40.84416115613398,"status":"eq-target","target":0.2485,"target-prog":"(if (== (+ 1.0 x) 1.0) x (/ (* x (log (+ 1.0 x))) (- (+ 1.0 x) 1.0)))","time":5455.278076171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 59.92960428321895) (20352 0.33425) ())","end":0.33425,"end-est":0.359375,"identifier":"#f","input":"(- (/ 1.0 x) (/ 1.0 (tan x)))","link":"321-invcotexample39","name":"invcot (example 3.9)","output":"(+ (* 0.3333333333333333 x) (+ (* 0.0021164021164021165 (pow x 5.0)) (+ (* 0.022222222222222223 (pow x 3.0)) (* 0.00021164021164021165 (pow x 7.0)))))","pre":"(and (< -0.026 x) (< x 0.026))","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 x) (/ 1.0 (tan x)))","start":59.92960428321895,"start-est":59.96451796393683,"status":"eq-target","target":0.0674463485084159,"target-prog":"(if (< (fabs x) 0.026) (* (/ x 3.0) (+ 1.0 (/ (* x x) 15.0))) (- (/ 1.0 x) (/ 1.0 (tan x))))","time":23787.675048828125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 64.0) (6592 0.302875) ())","end":0.302875,"end-est":0.30078125,"identifier":"#f","input":"(- (* 1.7e+308 t) 1.7e+308)","link":"322-fma_test2","name":"fma_test2","output":"(fma 1.7e+308 t -1.7e+308)","pre":"(and (<= 1.9 t) (<= t 2.1))","prec":"binary64","preprocess":"()","spec":"(- (* 1.7e+308 t) 1.7e+308)","start":64.0,"start-est":64.0,"status":"eq-target","target":0.302875,"target-prog":"(fma 1.7e+308 t (- 1.7e+308))","time":5697.98779296875,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 61.843252599384606) (6848 0.3172193609377704) ())","end":0.3172193609377704,"end-est":0.33984375,"identifier":"#f","input":"(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))","link":"323-fma_test1","name":"fma_test1","output":"(* t (sqrt (* 1.6e-63 (* t t))))","pre":"(and (<= 0.9 t) (<= t 1.1))","prec":"binary64","preprocess":"()","spec":"(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))","start":61.843252599384606,"start-est":61.84322916352899,"status":"gt-target","target":50.55748504121275,"target-prog":"(fma (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16)) (- -1.0 (* 2.0 (* t 2e-16))))","time":5455.922119140625,"vars":["t"]},{"bits":128,"conversions":[],"cost-accuracy":"((20544 60.26092710131941) (61384 0.20526948678701865) ())","end":0.20526948678701865,"end-est":0.01953125,"identifier":"#f","input":"(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))","link":"324-expq3problem342","name":"expq3 (problem 3.4.2)","output":"(if (<= (/ (* eps (+ (exp (* eps (+ a b))) -1.0)) (* (+ (exp (* eps a)) -1.0) (+ (exp (* eps b)) -1.0))) (- INFINITY)) (+ (/ 1.0 b) (/ 1.0 a)) (if (<= (/ (* eps (+ (exp (* eps (+ a b))) -1.0)) (* (+ (exp (* eps a)) -1.0) (+ (exp (* eps b)) -1.0))) 2e-13) (* eps (/ (expm1 (* eps (+ a b))) (* (expm1 (* eps a)) (expm1 (* eps b))))) (+ (/ 1.0 b) (/ 1.0 a))))","pre":"(and (< -1.0 eps) (< eps 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))","start":60.26092710131941,"start-est":60.560961164635984,"status":"gt-target","target":15.356675657496833,"target-prog":"(/ (+ a b) (* a b))","time":23765.094970703125,"vars":["a","b","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 41.19760355192374) (12992 0.3881462406251803) ())","end":0.3881462406251803,"end-est":0.2578125,"identifier":"#f","input":"(/ (exp x) (- (exp x) 1.0))","link":"325-expq2section311","name":"expq2 (section 3.11)","output":"(/ (exp x) (expm1 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp x) (- (exp x) 1.0))","start":41.19760355192374,"start-est":41.85498152272795,"status":"gt-target","target":40.82575978557078,"target-prog":"(/ 1.0 (- 1.0 (exp (- x))))","time":7384.93212890625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 58.61592291719038) (6464 0.001125) ())","end":0.001125,"end-est":0,"identifier":"#f","input":"(- (exp x) 1.0)","link":"326-expm1example37","name":"expm1 (example 3.7)","output":"(expm1 x)","pre":"(< -0.00017 x)","prec":"binary64","preprocess":"()","spec":"(- (exp x) 1.0)","start":58.61592291719038,"start-est":58.72985941678107,"status":"eq-target","target":0.5063472117212211,"target-prog":"(* x (+ (+ 1.0 (/ x 2.0)) (/ (* x x) 6.0)))","time":5254.85791015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 29.73614103727864) (6592 0.0208914574715443) ())","end":0.0208914574715443,"end-est":0.00390625,"identifier":"#f","input":"(- (exp (* a x)) 1.0)","link":"327-expaxsection35","name":"expax (section 3.5)","output":"(expm1 (* a x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (exp (* a x)) 1.0)","start":29.73614103727864,"start-est":28.748252547817856,"status":"eq-target","target":0.17768162939552956,"target-prog":"(if (< (fabs (* a x)) 0.1) (* (* a x) (+ 1.0 (+ (/ (* a x) 2.0) (/ (pow (* a x) 2.0) 6.0)))) (- (exp (* a x)) 1.0))","time":6921.17431640625,"vars":["a","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13184 29.990390252030377) (45696 0.5396821427940061) ())","end":0.5396821427940061,"end-est":0.8088367273746091,"identifier":"#f","input":"(+ (- (exp x) 2.0) (exp (- x)))","link":"328-exp2problem337","name":"exp2 (problem 3.3.7)","output":"(+ (* 0.002777777777777778 (pow x 6.0)) (pow (hypot x (sqrt (fma 0.08333333333333333 (pow x 4.0) (* 4.96031746031746e-5 (pow x 8.0))))) 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (exp x) 2.0) (exp (- x)))","start":29.990390252030377,"start-est":28.925992145059208,"status":"eq-target","target":0.045085339067998775,"target-prog":"(* 4.0 (pow (sinh (/ x 2.0)) 2.0))","time":12367.54296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.20065493770275) (13960 10.653789261174792) ())","end":10.653789261174792,"end-est":9.167358440729585,"identifier":"#f","input":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","link":"329-Thequadraticformular2","name":"The quadratic formula (r2)","output":"(if (<= b -6.7e-112) (/ (- c) b) (if (<= b 2.4e+91) (/ (- (- b) (sqrt (fma (* -4.0 a) c (* b b)))) (* a 2.0)) (/ (- b) a)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))","start":34.20065493770275,"start-est":34.0148828873389,"status":"gt-target","target":20.897235592582238,"target-prog":"(if (< b 0.0) (/ c (* a (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))) (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))","time":12569.48046875,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((7424 34.35858459675237) (13896 11.153524866678929) ())","end":11.153524866678929,"end-est":8.107225346096225,"identifier":"#f","input":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","link":"330-Thequadraticformular1","name":"The quadratic formula (r1)","output":"(if (<= b -7.6e+119) (- (/ c b) (/ b a)) (if (<= b 3e-158) (/ (- b (sqrt (fma b b (* c (* a -4.0))))) (* a -2.0)) (/ (- c) b)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))","start":34.35858459675237,"start-est":36.50359847605632,"status":"gt-target","target":21.487914553483446,"target-prog":"(if (< b 0.0) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ c (* a (/ (- (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))))","time":13999.521484375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 24.701894834756622) (13248 0.9430396294326653) ())","end":0.9430396294326653,"end-est":1.1817663589702014,"identifier":"#f","input":"(- x (/ (log (+ (- 1.0 y) (* y (exp z)))) t))","link":"331-SystemRandomMWCDistributionstruncatedExpfrommwcran","name":"System.Random.MWC.Distributions:truncatedExp from mwc-random-0.13.3.2","output":"(- x (/ (log1p (* y (expm1 z))) t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (log (+ (- 1.0 y) (* y (exp z)))) t))","start":24.701894834756622,"start-est":25.370484795629334,"status":"gt-target","target":16.440789859130234,"target-prog":"(if (< z -2.8874623088207947e+119) (- (- x (/ (/ (- 0.5) (* y t)) (* z z))) (* (/ (- 0.5) (* y t)) (/ (/ 2.0 z) (* z z)))) (- x (/ (log (+ 1.0 (* z y))) t)))","time":40635.37158203125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 0.08645996250072116) (19648 0.0876793234384916) ())","end":0.0876793234384916,"end-est":0.09994125976844202,"identifier":"#f","input":"(+ (* x 0.5) (* y (+ (- 1.0 z) (log z))))","link":"332-SystemRandomMWCDistributionsgammafrommwcrandom0133","name":"System.Random.MWC.Distributions:gamma from mwc-random-0.13.3.2","output":"(fma x 0.5 (fma y (- (log z) z) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x 0.5) (* y (+ (- 1.0 z) (log z))))","start":0.08645996250072116,"start-est":0.09994125976844202,"status":"eq-target","target":0.11454268476294266,"target-prog":"(- (+ y (* 0.5 x)) (* y (- z (log z))))","time":8743.804931640625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13632 4.828230017352628) (13632 2.0123490432047464) ())","end":2.0123490432047464,"end-est":1.4894179560860132,"identifier":"#f","input":"(+ x (* (* y z) (- (tanh (/ t y)) (tanh (/ x y)))))","link":"333-SynthBasicsmoogVCFfromYampaSynth02","name":"SynthBasics:moogVCF from YampaSynth-0.2","output":"(+ x (* y (* z (- (tanh (/ t y)) (tanh (/ x y))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* y z) (- (tanh (/ t y)) (tanh (/ x y)))))","start":4.828230017352628,"start-est":3.440753628762578,"status":"eq-target","target":2.0123490432047464,"target-prog":"(+ x (* y (* z (- (tanh (/ t y)) (tanh (/ x y))))))","time":11741.790771484375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.100648413331932) (448 0.091875) ())","end":0.091875,"end-est":0.09375,"identifier":"#f","input":"(- (/ x (* y y)) 3.0)","link":"334-StatisticsSampleskurtosisfrommathfunctions0152","name":"Statistics.Sample:$skurtosis from math-functions-0.1.5.2","output":"(+ (/ (/ x y) y) -3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ x (* y y)) 3.0)","start":5.100648413331932,"start-est":3.620993806991428,"status":"eq-target","target":0.091875,"target-prog":"(- (/ (/ x y) y) 3.0)","time":4192.773193359375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 24.429558595904464) (7496 7.14189738852154) ())","end":7.14189738852154,"end-est":6.792060674942179,"identifier":"#f","input":"(/ (* (* x y) z) (sqrt (- (* z z) (* t a))))","link":"335-StatisticsMathRootFindingriddersfrommathfunctions0","name":"Statistics.Math.RootFinding:ridders from math-functions-0.1.5.2","output":"(if (<= z -2.3465727487740706e+125) (* x (- y)) (if (<= z 3.035675077955773e+68) (* x (/ (* z y) (sqrt (- (* z z) (* t a))))) (* x y)))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (* (* x y) z) (sqrt (- (* z z) (* t a))))","start":24.429558595904464,"start-est":23.48835011319649,"status":"eq-target","target":7.520607961744813,"target-prog":"(if (< z -3.1921305903852764e+46) (- (* y x)) (if (< z 5.976268120920894e+90) (/ (* x z) (/ (sqrt (- (* z z) (* a t))) y)) (* y x)))","time":14263.89111328125,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.006904188118605655) (13248 0.006904188118605655) ())","end":0.006904188118605655,"end-est":0,"identifier":"#f","input":"(exp (- (+ x (* y (log y))) z))","link":"336-StatisticsDistributionPoissonInternalprobabilityfr","name":"Statistics.Distribution.Poisson.Internal:probability from math-functions-0.1.5.2","output":"(exp (- (+ x (* y (log y))) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (- (+ x (* y (log y))) z))","start":0.006904188118605655,"start-est":0,"status":"eq-target","target":0.006904188118605655,"target-prog":"(exp (+ (- x z) (* (log y) y)))","time":5649.699462890625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 6.344748841846276) (7492 1.1597492948252497) ())","end":1.1597492948252497,"end-est":2.5838289796804856,"identifier":"#f","input":"(/ (/ 1.0 x) (* y (+ 1.0 (* z z))))","link":"337-StatisticsDistributionCauchyLorentzcdensityfrommat","name":"Statistics.Distribution.CauchyLorentz:$cdensity from math-functions-0.1.5.2","output":"(if (<= (* y (+ 1.0 (* z z))) 2e+307) (/ (/ 1.0 x) (fma (* y z) z y)) (/ (/ 1.0 (* z x)) (* y z)))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (/ 1.0 x) (* y (+ 1.0 (* z z))))","start":6.344748841846276,"start-est":6.811433675725763,"status":"gt-target","target":4.890981793972182,"target-prog":"(if (< (* y (+ 1.0 (* z z))) (- INFINITY)) (/ (/ 1.0 y) (* (+ 1.0 (* z z)) x)) (if (< (* y (+ 1.0 (* z z))) 8.680743250567252e+305) (/ (/ 1.0 x) (* (+ 1.0 (* z z)) y)) (/ (/ 1.0 y) (* (+ 1.0 (* z z)) x))))","time":6543.41845703125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 14.908414738009514) (7748 2.873380791012913) ())","end":2.873380791012913,"end-est":1.7269793013469514,"identifier":"#f","input":"(/ (* x y) (* (* z z) (+ z 1.0)))","link":"338-StatisticsDistributionBetacvariancefrommathfunctio","name":"Statistics.Distribution.Beta:$cvariance from math-functions-0.1.5.2","output":"(if (<= (/ (* x y) (* (* z z) (+ z 1.0))) 5e+304) (/ (* x (/ y z)) (fma z z z)) (/ 1.0 (* (/ z y) (+ (/ z x) (* z (/ z x))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (* x y) (* (* z z) (+ z 1.0)))","start":14.908414738009514,"start-est":13.902067095363186,"status":"gt-target","target":3.95072479256855,"target-prog":"(if (< z 249.6182814532307) (/ (* y (/ x z)) (+ z (* z z))) (/ (* (/ (/ y z) (+ 1.0 z)) x) z))","time":6894.15234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.01075) (320 0.01075) ())","end":0.01075,"end-est":0.01171875,"identifier":"#f","input":"(* x (- x 1.0))","link":"339-StatisticsCorrelationKendallnumOfTiesByfrommathfun","name":"Statistics.Correlation.Kendall:numOfTiesBy from math-functions-0.1.5.2","output":"(* x (+ x -1.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- x 1.0))","start":0.01075,"start-est":0.01171875,"status":"eq-target","target":0.006875,"target-prog":"(- (* x x) x)","time":2209.662841796875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 100.0 (/ (- x x) x))","link":"340-ReportTypesexplainFloatfromgipeda0121","name":"ReportTypes:explainFloat from gipeda-0.1.2.1","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 100.0 (/ (- x x) x))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"0.0","time":1994.4228515625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))","link":"341-Rectangularparallelepipedofdimensionabc","name":"Rectangular parallelepiped of dimension a×b×c","output":"0.4691358024691358","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(+ (+ (* (* (/ 1.0 9.0) 1.0) 2.0) (* 2.0 (* (/ 1.0 9.0) (/ 1.0 9.0)))) (* 2.0 (* 1.0 (/ 1.0 9.0))))","time":3038.45458984375,"vars":[]},{"bits":128,"conversions":[],"cost-accuracy":"((19520 0.5957712406251803) (52864 0.64404734906033) ())","end":0.64404734906033,"end-est":0.33113484653116365,"identifier":"#f","input":"(/ (exp a) (+ (exp a) (exp b)))","link":"342-Quotientofsumofexps","name":"Quotient of sum of exps","output":"(exp (- a (+ (log1p (exp b)) (fma 0.5 (* a (* a (+ (/ 1.0 (+ (exp b) 1.0)) (/ -1.0 (pow (+ (exp b) 1.0) 2.0))))) (/ a (+ (exp b) 1.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp a) (+ (exp a) (exp b)))","start":0.5957712406251803,"start-est":0.515625,"status":"eq-target","target":0.01713739792625991,"target-prog":"(/ 1.0 (+ 1.0 (exp (- b a))))","time":6525.533203125,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 11.026430014198537) (8976 2.848649168951436) ())","end":2.848649168951436,"end-est":1.3493299256285527,"identifier":"#f","input":"(/ (* a1 a2) (* b1 b2))","link":"343-Quotientofproducts","name":"Quotient of products","output":"(if (<= (/ (* a1 a2) (* b1 b2)) -5e+287) (* a2 (* (/ a1 b1) (/ 1.0 b2))) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-312) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+299) (/ (* a1 a2) (* b1 b2)) (* a2 (pow (/ b2 (/ a1 b1)) -1.0))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort a1 a2))","spec":"(/ (* a1 a2) (* b1 b2))","start":11.026430014198537,"start-est":8.36046894093571,"status":"gt-target","target":11.537437025356107,"target-prog":"(* (/ a1 b1) (/ a2 b2))","time":6634.55419921875,"vars":["a1","a2","b1","b2"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 10.23516417063087) (320 0.17875) ())","end":0.17875,"end-est":0.17578125,"identifier":"#f","input":"(/ x (* y y))","link":"344-PhysicsForceLayoutcoulombForcefromforcelayout0402","name":"Physics.ForceLayout:coulombForce from force-layout-0.4.0.2","output":"(/ (/ x y) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y y))","start":10.23516417063087,"start-est":8.857365164819884,"status":"eq-target","target":0.17875,"target-prog":"(/ (/ x y) y)","time":4103.744140625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.10390104449816) (1352 0.4647004379556152) ())","end":0.4647004379556152,"end-est":0.125,"identifier":"#f","input":"(- x (/ (* y (- z t)) a))","link":"345-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, F","output":"(if (<= (* y (- z t)) -2e+255) (+ x (/ (- t z) (/ a y))) (if (<= (* y (- z t)) 5e+186) (+ x (/ (* y (- t z)) a)) (+ x (/ (- t z) (/ a y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (* y (- z t)) a))","start":6.10390104449816,"start-est":4.38671875,"status":"eq-target","target":0.7356426800102036,"target-prog":"(if (< y -1.0761266216389975e-10) (- x (/ 1.0 (/ (/ a (- z t)) y))) (if (< y 2.894426862792089e-49) (- x (/ (* y (- z t)) a)) (- x (/ y (/ a (- z t))))))","time":27526.912109375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.103704257651568) (7752 1.2083277868691444) ())","end":1.2083277868691444,"end-est":0.12890625,"identifier":"#f","input":"(+ x (/ (* y (- z t)) a))","link":"346-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, E","output":"(if (<= (* y (- z t)) (- INFINITY)) (fma (- z t) (* y (/ 1.0 a)) x) (if (<= (* y (- z t)) 1e+82) (+ x (/ (* y (- z t)) a)) (fma y (/ 1.0 (/ a (- z t))) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) a))","start":6.103704257651568,"start-est":4.3828125,"status":"eq-target","target":0.7394118948676032,"target-prog":"(if (< y -1.0761266216389975e-10) (+ x (/ 1.0 (/ (/ a (- z t)) y))) (if (< y 2.894426862792089e-49) (+ x (/ (* y (- z t)) a)) (+ x (/ y (/ a (- z t))))))","time":23018.48193359375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.135339203263691) (8136 1.1067660829511015) ())","end":1.1067660829511015,"end-est":0.6100305258134963,"identifier":"#f","input":"(+ x (/ (* y (- z x)) t))","link":"347-OptimisationCirclePackingplacefromcirclepacking010","name":"Optimisation.CirclePacking:place from circle-packing-0.1.0.4, D","output":"(if (<= (+ x (/ (* y (- z x)) t)) -1e+301) (fma y (/ (- z x) t) x) (if (<= (+ x (/ (* y (- z x)) t)) 1e+300) (+ (/ (* y z) t) (- x (/ (* x y) t))) (fma y (/ (- z x) t) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z x)) t))","start":7.135339203263691,"start-est":7.848311775813497,"status":"eq-target","target":1.908726560884393,"target-prog":"(- x (+ (* x (/ y t)) (* (- z) (/ y t))))","time":35005.561279296875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 0.11085620312590146) (13376 0.08466748125036057) ())","end":0.08466748125036057,"end-est":0.07421875,"identifier":"#f","input":"(- (+ (- x (* (+ y 0.5) (log y))) y) z)","link":"348-NumericSpecFunctionsstirlingErrorfrommathfunctions","name":"Numeric.SpecFunctions:stirlingError from math-functions-0.1.5.2","output":"(+ x (fma (log y) (- -0.5 y) (- y z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (- x (* (+ y 0.5) (log y))) y) z)","start":0.11085620312590146,"start-est":0.11556625976844202,"status":"eq-target","target":0.11178308281331131,"target-prog":"(- (- (+ y x) z) (* (+ y 0.5) (log y)))","time":25281.618408203125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 0.26077019662631146) (26304 0.25772562614317235) ())","end":0.25772562614317235,"end-est":0.28470379109026733,"identifier":"#f","input":"(+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t)))","link":"349-NumericSpecFunctionslogGammaLfrommathfunctions0152","name":"Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2","output":"(+ (log (+ x y)) (- (log z) (fma (log t) (- 0.5 a) t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t)))","start":0.26077019662631146,"start-est":0.3008414650483855,"status":"eq-target","target":0.2584545890305742,"target-prog":"(+ (log (+ x y)) (+ (- (log z) t) (* (- a 0.5) (log t))))","time":34105.566162109375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((2368 29.92939682070506) (125384 0.6800283058911694) ())","end":0.6800283058911694,"end-est":0.1171875,"identifier":"#f","input":"(+ x (/ (* y (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)) (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771)))","link":"350-NumericSpecFunctionslogGammafrommathfunctions0152D","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, D","output":"(if (<= z -6.587780488420653e+72) (fma y (+ 3.13060547623 (+ (/ 457.9610022158428 (* z z)) (+ (/ t (* z z)) (+ (/ (+ a (+ (* t -15.234687407) -5864.8025282699045)) (pow z 3.0)) (/ -36.52704169880642 z))))) x) (if (<= z 20000000.0) (fma y (fma (* (/ 1.0 (sqrt (fma z (fma z (fma z (+ z 15.234687407) 31.4690115749) 11.9400905721) 0.607771387771))) (/ a (sqrt (fma z (fma z (fma z (+ z 15.234687407) 31.4690115749) 11.9400905721) 0.607771387771)))) z (fma (/ (fma z (fma z 3.13060547623 11.1667541262) t) (fma z (fma z (fma z (+ z 15.234687407) 31.4690115749) 11.9400905721) 0.607771387771)) (* z z) (/ b (fma z (fma z (fma z (+ z 15.234687407) 31.4690115749) 11.9400905721) 0.607771387771)))) x) (fma y (+ 3.13060547623 (+ (/ 457.9610022158428 (* z z)) (+ (/ t (* z z)) (+ (/ (+ a (+ (* t -15.234687407) -5864.8025282699045)) (pow z 3.0)) (/ -36.52704169880642 z))))) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)) (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771)))","start":29.92939682070506,"start-est":27.111660009768443,"status":"eq-target","target":1.1381629273599854,"target-prog":"(if (< z -6.499344996252632e+53) (+ x (* (+ (- 3.13060547623 (/ 36.527041698806414 z)) (/ t (* z z))) (/ y 1.0))) (if (< z 7.066965436914287e+59) (+ x (/ y (/ (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771) (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)))) (+ x (* (+ (- 3.13060547623 (/ 36.527041698806414 z)) (/ t (* z z))) (/ y 1.0)))))","time":33777.60546875,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((2368 26.90364941894305) (46536 0.922592692593364) ())","end":0.922592692593364,"end-est":0.32259750976844204,"identifier":"#f","input":"(/ (* (- x 2.0) (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z)) (+ (* (+ (* (+ (* (+ x 43.3400022514) x) 263.505074721) x) 313.399215894) x) 47.066876606))","link":"351-NumericSpecFunctionslogGammafrommathfunctions0152C","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, C","output":"(if (<= x -1.4326590106160222e+65) (+ (fma x 4.16438922228 -110.1139242984811) (+ (/ 3655.1204654076414 x) (/ (+ y -130977.50649958357) (* x x)))) (if (<= x 2.8170607507181647e+55) (* (+ x -2.0) (/ (fma x (fma x (fma x (fma x 4.16438922228 78.6994924154) 137.519416416) y) z) (fma x (fma x (fma x (+ x 43.3400022514) 263.505074721) 313.399215894) 47.066876606))) (+ (fma x 4.16438922228 -110.1139242984811) (+ (/ 3655.1204654076414 x) (/ (+ y -130977.50649958357) (* x x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- x 2.0) (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z)) (+ (* (+ (* (+ (* (+ x 43.3400022514) x) 263.505074721) x) 313.399215894) x) 47.066876606))","start":26.90364941894305,"start-est":24.900722509768443,"status":"eq-target","target":0.9389993333672358,"target-prog":"(if (< x -3.326128725870005e+62) (- (+ (/ y (* x x)) (* 4.16438922228 x)) 110.1139242984811) (if (< x 9.429991714554673e+55) (* (/ (- x 2.0) 1.0) (/ (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z) (+ (* (+ (+ (* 263.505074721 x) (+ (* 43.3400022514 (* x x)) (* x (* x x)))) 313.399215894) x) 47.066876606))) (- (+ (/ y (* x x)) (* 4.16438922228 x)) 110.1139242984811)))","time":29972.982421875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 20.739156571019052) (26696 0.21416978822543556) ())","end":0.21416978822543556,"end-est":0.178066259768442,"identifier":"#f","input":"(+ x (/ (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))","link":"352-NumericSpecFunctionslogGammafrommathfunctions0152B","name":"Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, B","output":"(if (<= z -1.370998388361503e+25) (fma 0.0692910599291889 y x) (if (<= z 1319827911.3249626) (fma y (/ (fma z (fma z 0.0692910599291889 0.4917317610505968) 0.279195317918525) (fma z (+ z 6.012459259764103) 3.350343815022304)) x) (fma 0.0692910599291889 y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))","start":20.739156571019052,"start-est":17.672538769536885,"status":"eq-target","target":0.3687404229830953,"target-prog":"(if (< z -8120153.652456675) (- (* (+ (/ 0.07512208616047561 z) 0.0692910599291889) y) (- (/ (* 0.40462203869992125 y) (* z z)) x)) (if (< z 6.576118972787377e+20) (+ x (* (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (/ 1.0 (+ (* (+ z 6.012459259764103) z) 3.350343815022304)))) (- (* (+ (/ 0.07512208616047561 z) 0.0692910599291889) y) (- (/ (* 0.40462203869992125 y) (* z z)) x))))","time":27367.5537109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7360 0.0949791112517706) (20608 0.10725544289169647) ())","end":0.10725544289169647,"end-est":0.05859375,"identifier":"#f","input":"(+ (- (+ (+ x y) z) (* z (log t))) (* (- a 0.5) b))","link":"353-NumericSpecFunctionslogBetafrommathfunctions0152A","name":"Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, A","output":"(+ y (+ (* a b) (+ (* b -0.5) (+ (* (- 1.0 (pow (log t) 2.0)) (/ z (+ 1.0 (log t)))) x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (+ x y) z) (* z (log t))) (* (- a 0.5) b))","start":0.0949791112517706,"start-est":0.10546875,"status":"eq-target","target":0.32203720825639975,"target-prog":"(+ (+ (+ x y) (/ (* (- 1.0 (pow (log t) 2.0)) z) (+ 1.0 (log t)))) (* (- a 0.5) b))","time":29989.775390625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.21101184218813096) (7232 0.21101184218813096) ())","end":0.21101184218813096,"end-est":0.18359375,"identifier":"#f","input":"(- (- 1.0 (/ 1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x))))","link":"354-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, D","output":"(- (+ 1.0 (/ -1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- 1.0 (/ 1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x))))","start":0.21101184218813096,"start-est":0.18359375,"status":"eq-target","target":0.21526184218813096,"target-prog":"(- (- 1.0 (/ (/ 1.0 x) 9.0)) (/ y (* 3.0 (sqrt x))))","time":24077.314453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 18.710408037836388) (19904 0.04808264774669869) ())","end":0.04808264774669869,"end-est":0.01953125,"identifier":"#f","input":"(- 1.0 (log (- 1.0 (/ (- x y) (- 1.0 y)))))","link":"355-NumericSpecFunctionsinvIncompleteGammafrommathfunc","name":"Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, B","output":"(log (- (/ E (- 1.0 x)) (/ y (/ (- 1.0 x) E))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (log (- 1.0 (/ (- x y) (- 1.0 y)))))","start":18.710408037836388,"start-est":16.635185414317228,"status":"eq-target","target":0.09814989054288809,"target-prog":"(if (< y -81284752.61947241) (- 1.0 (log (- (/ x (* y y)) (- (/ 1.0 y) (/ x y))))) (if (< y 3.0094271212461764e+25) (log (/ (exp 1.0) (- 1.0 (/ (- x y) (- 1.0 y))))) (- 1.0 (log (- (/ x (* y y)) (- (/ 1.0 y) (/ x y)))))))","time":28183.215087890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((14784 4.10979786421018) (46536 2.4144446874000516) ())","end":2.4144446874000516,"end-est":0.7375122117628655,"identifier":"#f","input":"(/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))","link":"356-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, I","output":"(if (<= y -9.294063111127494e-293) (/ x (fma y (pow (exp 2.0) (cbrt (pow (fma z (/ (sqrt (+ t a)) t) (* (+ a (+ (/ -0.6666666666666666 t) 0.8333333333333334)) (- c b))) 3.0))) x)) (if (<= y 5.812241585903538e+100) (/ x (fma y (pow (exp 2.0) (fma (+ a (+ (/ -0.6666666666666666 t) 0.8333333333333334)) (- c b) (/ (* z (sqrt (+ t a))) t))) x)) (/ x (fma y (pow (exp 2.0) (cbrt (pow (fma z (/ (sqrt (+ t a)) t) (* (+ a (+ (/ -0.6666666666666666 t) 0.8333333333333334)) (- c b))) 3.0))) x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))","start":4.10979786421018,"start-est":3.5031482240304803,"status":"eq-target","target":3.034436573794318,"target-prog":"(if (< t -2.118326644891581e-50) (/ x (+ x (* y (exp (* 2.0 (- (+ (* a c) (* 0.8333333333333334 c)) (* a b))))))) (if (< t 5.196588770651547e-123) (/ x (+ x (* y (exp (* 2.0 (/ (- (* (* z (sqrt (+ t a))) (* (* 3.0 t) (- a (/ 5.0 6.0)))) (* (- (* (+ (/ 5.0 6.0) a) (* 3.0 t)) 2.0) (* (- a (/ 5.0 6.0)) (* (- b c) t)))) (* (* (* t t) 3.0) (- a (/ 5.0 6.0))))))))) (/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))))))","time":33838.0654296875,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 6.478940796614227) (33928 2.0922637154227983) ())","end":2.0922637154227983,"end-est":0.8074175198472052,"identifier":"#f","input":"(+ x (/ (exp (* y (log (/ y (+ z y))))) y))","link":"357-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, G","output":"(if (<= (+ x (/ (exp (* y (log (/ y (+ y z))))) y)) -1e+19) (+ x (/ 1.0 y)) (if (<= (+ x (/ (exp (* y (log (/ y (+ y z))))) y)) 2e-33) (+ x (/ (exp (- z)) y)) (+ x (/ 1.0 y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (exp (* y (log (/ y (+ z y))))) y))","start":6.478940796614227,"start-est":5.440442030053174,"status":"lt-target","target":1.05678961395075,"target-prog":"(if (< (/ y (+ z y)) 7.11541576e-315) (+ x (/ (exp (/ -1.0 z)) y)) (+ x (/ (exp (log (pow (/ y (+ y z)) y))) y)))","time":13684.71923828125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 11.409595285687818) (13320 0.32346347856202373) ())","end":0.32346347856202373,"end-est":0.7697588586814843,"identifier":"#f","input":"(/ (exp (* x (log (/ x (+ x y))))) x)","link":"358-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, F","output":"(if (<= x -0.017) (pow (* x (exp y)) -1.0) (if (<= x 4.5) (/ 1.0 x) (pow (* x (exp y)) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (exp (* x (log (/ x (+ x y))))) x)","start":11.409595285687818,"start-est":13.976253471971566,"status":"gt-target","target":8.106348974842854,"target-prog":"(if (< y -3.7311844206647956e+94) (/ (exp (/ -1.0 y)) x) (if (< y 2.817959242728288e+37) (/ (pow (/ x (+ y x)) x) x) (if (< y 2.347387415166998e+178) (log (exp (/ (pow (/ x (+ y x)) x) x))) (/ (exp (/ -1.0 y)) x))))","time":11970.736083984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 4.524311496380748) (9680 0.9090493179631502) ())","end":0.9090493179631502,"end-est":0.21995444933648206,"identifier":"#f","input":"(* x (- (/ y z) (/ t (- 1.0 z))))","link":"359-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, C","output":"(if (<= (- (/ y z) (/ t (- 1.0 z))) (- INFINITY)) (- (/ (* y x) z) (/ (* t x) (- 1.0 z))) (if (<= (- (/ y z) (/ t (- 1.0 z))) -1e-178) (* (- (/ y z) (/ t (- 1.0 z))) x) (if (<= (- (/ y z) (/ t (- 1.0 z))) 1e-196) (* (/ x z) (+ y t)) (if (<= (- (/ y z) (/ t (- 1.0 z))) 2e+139) (* x (fma t (/ -1.0 (- 1.0 z)) (/ y z))) (- (/ (* y x) z) (/ (* t x) (- 1.0 z)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- (/ y z) (/ t (- 1.0 z))))","start":4.524311496380748,"start-est":6.266019470859463,"status":"gt-target","target":3.9576077633354303,"target-prog":"(if (< (* x (- (/ y z) (/ t (- 1.0 z)))) -7.623226303312042e-196) (* x (- (/ y z) (* t (/ 1.0 (- 1.0 z))))) (if (< (* x (- (/ y z) (/ t (- 1.0 z)))) 1.4133944927702302e-211) (+ (/ (* y x) z) (- (/ (* t x) (- 1.0 z)))) (* x (- (/ y z) (* t (/ 1.0 (- 1.0 z)))))))","time":11189.924560546875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 9.41768901330132) (19712 0.11757312031259015) ())","end":0.11757312031259015,"end-est":0.0859375,"identifier":"#f","input":"(- (+ (* x (log y)) (* z (log (- 1.0 y)))) t)","link":"360-NumericSpecFunctionsinvIncompleteBetaWorkerfrommat","name":"Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, B","output":"(fma z (log1p (- y)) (- (* x (log y)) t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (* x (log y)) (* z (log (- 1.0 y)))) t)","start":9.41768901330132,"start-est":9.517650867418748,"status":"eq-target","target":0.22450614164422122,"target-prog":"(- (* (- z) (+ (+ (* 0.5 (* y y)) y) (* (/ 0.3333333333333333 (* 1.0 (* 1.0 1.0))) (* y (* y y))))) (- t (* x (log y))))","time":10995.296630859375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 3.2313654686373656) (13376 0.05289075584698257) ())","end":0.05289075584698257,"end-est":0.0390625,"identifier":"#f","input":"(+ x (/ y (- (* 1.1283791670955126 (exp z)) (* x y))))","link":"361-NumericSpecFunctionsinvErfcfrommathfunctions0152A","name":"Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, A","output":"(+ x (/ -1.0 (fma (exp z) (/ -1.1283791670955126 y) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ y (- (* 1.1283791670955126 (exp z)) (* x y))))","start":3.2313654686373656,"start-est":3.5987177816016116,"status":"eq-target","target":0.05289075584698257,"target-prog":"(+ x (/ 1.0 (- (* (/ 1.1283791670955126 y) (exp z)) x)))","time":10390.00244140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.4031000015744897) (26176 0.4258123164544933) ())","end":0.4258123164544933,"end-est":0.34375,"identifier":"#f","input":"(* (* 3.0 (sqrt x)) (- (+ y (/ 1.0 (* x 9.0))) 1.0))","link":"362-NumericSpecFunctionsincompleteGammafrommathfunctio","name":"Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, B","output":"(fma 0.3333333333333333 (sqrt (/ 1.0 x)) (* (sqrt x) (fma 3.0 y -3.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 (sqrt x)) (- (+ y (/ 1.0 (* x 9.0))) 1.0))","start":0.4031000015744897,"start-est":0.4388275390737681,"status":"eq-target","target":0.39076748282484997,"target-prog":"(* 3.0 (+ (* y (sqrt x)) (* (- (/ 1.0 (* x 9.0)) 1.0) (sqrt x))))","time":7677.605224609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20160 1.9167397700439481) (20160 1.9167397700439481) ())","end":1.9167397700439481,"end-est":1.336836046285569,"identifier":"#f","input":"(/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y)","link":"363-NumericSpecFunctionsincompleteBetaWorkerfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaWorker from math-functions-0.1.5.2, A","output":"(/ (* x (exp (- (+ (* y (log z)) (* (+ t -1.0) (log a))) b))) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y)","start":1.9167397700439481,"start-est":1.336836046285569,"status":"gt-target","target":11.152922353809153,"target-prog":"(if (< t -0.8845848504127471) (/ (* x (/ (pow a (- t 1.0)) y)) (- (+ b 1.0) (* y (log z)))) (if (< t 852031.2288374073) (/ (* (/ x y) (pow a (- t 1.0))) (exp (- b (* (log z) y)))) (/ (* x (/ (pow a (- t 1.0)) y)) (- (+ b 1.0) (* y (log z))))))","time":35597.004638671875,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 19.748457628416332) (14280 7.205859005571005) ())","end":7.205859005571005,"end-est":8.672914093188506,"identifier":"#f","input":"(/ (* x y) (* (* (+ x y) (+ x y)) (+ (+ x y) 1.0)))","link":"364-NumericSpecFunctionsincompleteBetaApproxfrommathfu","name":"Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, A","output":"(if (<= y -3.6190497537820114e-190) (/ x (/ (fma (+ y x) (+ y x) (pow (+ y x) 3.0)) y)) (if (<= y 3.118675829533101e-179) (/ x (+ (fma y y y) (* x (+ (fma y 3.0 2.0) (+ (* x 3.0) (/ x y)))))) (if (<= y 5.188258844902246e+67) (/ x (/ (fma (+ y x) (+ y x) (pow (+ y x) 3.0)) y)) (- (/ (/ x y) y) (* x (/ (fma 3.0 x 1.0) (pow y 3.0)))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (* x y) (* (* (+ x y) (+ x y)) (+ (+ x y) 1.0)))","start":19.748457628416332,"start-est":20.747113564854292,"status":"lt-target","target":0.14765394844570318,"target-prog":"(/ (/ (/ x (+ (+ y 1.0) x)) (+ y x)) (/ 1.0 (/ y (+ y x))))","time":11798.937255859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 12.343737003327718) (8268 1.0042103420736357) ())","end":1.0042103420736357,"end-est":0.07421875,"identifier":"#f","input":"(/ (* x (+ y z)) z)","link":"365-NumericSpecFunctionschoosefrommathfunctions0152","name":"Numeric.SpecFunctions:choose from math-functions-0.1.5.2","output":"(if (<= (/ (* x (+ y z)) z) (- INFINITY)) (+ x (* x (/ 1.0 (/ z y)))) (if (<= (/ (* x (+ y z)) z) -2e+153) (+ x (/ (* x y) z)) (if (<= (/ (* x (+ y z)) z) 0.0) (fma x (/ y z) x) (if (<= (/ (* x (+ y z)) z) 4e+279) (+ x (/ (* x y) z)) (+ x (* x (* y (/ 1.0 z))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ y z)) z)","start":12.343737003327718,"start-est":10.988984066735751,"status":"gt-target","target":3.1701879770447223,"target-prog":"(/ x (/ z (+ y z)))","time":7484.7412109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7872 6.31502943715376) (20608 0.8788995931430386) ())","end":0.8788995931430386,"end-est":0.5760382199466995,"identifier":"#f","input":"(+ (+ (- (* (- x 0.5) (log x)) x) 0.91893853320467) (/ (+ (* (- (* (+ y 0.0007936500793651) z) 0.0027777777777778) z) 0.083333333333333) x))","link":"366-NumericSpecFunctionsslogFactorialfrommathfunctions","name":"Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, B","output":"(+ 0.91893853320467 (- (+ (pow (* x 12.000000000000048) -1.0) (* (+ y 0.0007936500793651) (* z (/ z x)))) (fma (log x) (- 0.5 x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (- (* (- x 0.5) (log x)) x) 0.91893853320467) (/ (+ (* (- (* (+ y 0.0007936500793651) z) 0.0027777777777778) z) 0.083333333333333) x))","start":6.31502943715376,"start-est":8.055351269536885,"status":"eq-target","target":1.2214833722355498,"target-prog":"(+ (+ (+ (* (- x 0.5) (log x)) (- 0.91893853320467 x)) (/ 0.083333333333333 x)) (* (/ z x) (- (* z (+ y 0.0007936500793651)) 0.0027777777777778)))","time":12265.930419921875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.5697675424034196) (6528 0.000625) ())","end":0.000625,"end-est":0,"identifier":"#f","input":"(/ 1.0 (* x x))","link":"367-NumericSpecFunctionsslogFactorialfrommathfunctions","name":"Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, A","output":"(pow x -2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ 1.0 (* x x))","start":0.5697675424034196,"start-est":0.33092515430673014,"status":"eq-target","target":0.1745,"target-prog":"(/ (/ 1.0 x) x)","time":2124.387451171875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 15.63355491686514) (13508 0.3319398623085375) ())","end":0.3319398623085375,"end-est":0.27326635917053294,"identifier":"#f","input":"(- (* x (log (/ x y))) z)","link":"368-NumericSpecFunctionsExtrabd0frommathfunctions0152","name":"Numeric.SpecFunctions.Extra:bd0 from math-functions-0.1.5.2","output":"(if (<= x 0.0) (- (* x (- (log (- x)) (log (- y)))) z) (- (* x (- (log x) (log y))) z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x (log (/ x y))) z)","start":15.63355491686514,"start-est":14.33984375,"status":"gt-target","target":7.971301486686755,"target-prog":"(if (< y 7.595077799083773e-308) (- (* x (log (/ x y))) z) (- (* x (- (log x) (log y))) z))","time":9089.5625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 2.1050395212320328) (8584 2.6775969982280188) ())","end":2.6775969982280188,"end-est":0.5003799194735908,"identifier":"#f","input":"(* (/ (- x y) (- z y)) t)","link":"369-NumericSignalMultichannelcputfromhsignal0271","name":"Numeric.Signal.Multichannel:$cput from hsignal-0.2.7.1","output":"(if (<= (* (/ (- x y) (- z y)) t) -5e-261) (* (/ (- x y) (- z y)) t) (if (<= (* (/ (- x y) (- z y)) t) 0.0) (/ (- x y) (/ (- z y) t)) (/ t (fma z (/ 1.0 (- x y)) (/ (- y) (- x y))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ (- x y) (- z y)) t)","start":2.1050395212320328,"start-est":1.836332818938797,"status":"eq-target","target":2.086709310168366,"target-prog":"(/ t (/ (- z y) (- x y)))","time":13412.578857421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 1.7569815696172815) (968 1.8825980537576752) ())","end":1.8825980537576752,"end-est":0.8221194673505163,"identifier":"#f","input":"(+ (* (/ x y) (- z t)) t)","link":"370-NumericSignalMultichannelcgetfromhsignal0271","name":"Numeric.Signal.Multichannel:$cget from hsignal-0.2.7.1","output":"(if (<= t -1.12022160803714e-251) (+ t (/ (- z t) (/ y x))) (if (<= t 1.9438689082974852e-115) (+ t (* x (- (/ z y) (/ t y)))) (+ t (/ (- z t) (/ y x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (/ x y) (- z t)) t)","start":1.7569815696172815,"start-est":2.3253742467294547,"status":"eq-target","target":2.0777018131336984,"target-prog":"(if (< z 2.759456554562692e-282) (+ (* (/ x y) (- z t)) t) (if (< z 2.326994450874436e-110) (+ (* x (/ (- z t) y)) t) (+ (* (/ x y) (- z t)) t)))","time":10075.430908203125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.013073120312590145) (6848 0.007375) ())","end":0.007375,"end-est":0.01171875,"identifier":"#f","input":"(+ (+ (* x 2.0) (* x x)) (* y y))","link":"371-NumericLogclog1pfromlogdomain01021A","name":"Numeric.Log:$clog1p from log-domain-0.10.2.1, A","output":"(fma y y (* x (+ x 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x 2.0) (* x x)) (* y y))","start":0.013073120312590145,"start-est":0.029628759768442016,"status":"eq-target","target":0.013073120312590145,"target-prog":"(+ (* y y) (+ (* 2.0 x) (* x x)))","time":4934.114013671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* x 2.0) x)","link":"372-NumericLogcexpm1fromlogdomain01021A","name":"Numeric.Log:$cexpm1 from log-domain-0.10.2.1, A","output":"(* x (* x 2.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 2.0) x)","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(* (* 2.0 x) x)","time":2341.015380859375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012447414492197502) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (/ (- y x) 2.0))","link":"373-NumericIntervalInternalbisectfromintervals071A","name":"Numeric.Interval.Internal:bisect from intervals-0.7.1, A","output":"(* 0.5 (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- y x) 2.0))","start":0.012447414492197502,"start-est":0.00390625,"status":"eq-target","target":0,"target-prog":"(* 0.5 (+ x y))","time":3596.515380859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.206) (6720 0.082) ())","end":0.082,"end-est":0.12109375,"identifier":"#f","input":"(* x (+ 1.0 (* y y)))","link":"374-NumericIntegrationTanhSinheverywherefromintegratio","name":"Numeric.Integration.TanhSinh:everywhere from integration-0.2.1","output":"(fma y (* y x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ 1.0 (* y y)))","start":5.206,"start-est":4.33984375,"status":"eq-target","target":0.084375,"target-prog":"(+ x (* (* x y) y))","time":6440.96142578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 6.830177056537211) (7492 1.5225022591705026) ())","end":1.5225022591705026,"end-est":0.3524212753139631,"identifier":"#f","input":"(+ x (/ (* (- y x) z) t))","link":"375-NumericHistogrambinBoundsfromChart153","name":"Numeric.Histogram:binBounds from Chart-1.5.3","output":"(if (<= (+ x (/ (* (- y x) z) t)) 1e-239) (fma (- y x) (/ z t) x) (if (<= (+ x (/ (* (- y x) z) t)) 5e+297) (- (+ x (/ (* y z) t)) (/ (* x z) t)) (+ x (* z (- (/ y t) (/ x t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y x) z) t))","start":6.830177056537211,"start-est":6.473034382889811,"status":"eq-target","target":1.977628526292232,"target-prog":"(if (< x -9.025511195533005e-135) (- x (* (/ z t) (- x y))) (if (< x 4.275032163700715e-250) (+ x (* (/ (- y x) t) z)) (+ x (/ (- y x) (/ t z)))))","time":9660.8232421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 11.81834415705272) (832 0.06045772226222149) ())","end":0.06045772226222149,"end-est":0.03515625,"identifier":"#f","input":"(- x (/ (* (* y 2.0) z) (- (* (* z 2.0) z) (* y t))))","link":"376-NumericADRank1HalleyfindZerofromad424","name":"Numeric.AD.Rank1.Halley:findZero from ad-4.2.4","output":"(+ x (/ -2.0 (- (/ 2.0 (/ y z)) (/ t z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (* (* y 2.0) z) (- (* (* z 2.0) z) (* y t))))","start":11.81834415705272,"start-est":16.185433491700543,"status":"eq-target","target":0.07345772226222148,"target-prog":"(- x (/ 1.0 (- (/ z y) (/ (/ t 2.0) z))))","time":10006.250732421875,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((52672 4.953789948123738) (53568 0.3808788849188223) ())","end":0.3808788849188223,"end-est":1.7815376022440796,"identifier":"#f","input":"(+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t)))","link":"377-Mainzfrom","name":"Main:z from ","output":"(+ (+ (+ (/ (+ 1.0 (- x x)) (+ (sqrt (+ 1.0 x)) (sqrt x))) (/ (+ 1.0 (- y y)) (+ (sqrt (+ 1.0 y)) (sqrt y)))) (/ 1.0 (+ (sqrt (+ 1.0 z)) (sqrt z)))) (- (sqrt (+ 1.0 t)) (sqrt t)))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y z t))","spec":"(+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t)))","start":4.953789948123738,"start-est":4.416260013693683,"status":"eq-target","target":0.3808788849188223,"target-prog":"(+ (+ (+ (/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x))) (/ 1.0 (+ (sqrt (+ y 1.0)) (sqrt y)))) (/ 1.0 (+ (sqrt (+ z 1.0)) (sqrt z)))) (- (sqrt (+ t 1.0)) (sqrt t)))","time":36183.6806640625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.485905139390646) (26048 0.2677466218117658) ())","end":0.2677466218117658,"end-est":0.16634750976844204,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"378-Mainbigenough3fromC","name":"Main:bigenough3 from C","output":"(pow (pow (+ (sqrt (+ 1.0 x)) (sqrt x)) 2.0) -0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":29.485905139390646,"start-est":29.550838072395354,"status":"eq-target","target":0.16330676718957327,"target-prog":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","time":7121.2705078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 0.517698316962573) (19456 0.481625) ())","end":0.481625,"end-est":0.25390625,"identifier":"#f","input":"(- (log (+ 1.0 (exp x))) (* x y))","link":"379-Logisticregression2","name":"Logistic regression 2","output":"(fma y (- x) (log1p (exp x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (log (+ 1.0 (exp x))) (* x y))","start":0.517698316962573,"start-est":0.26171875,"status":"eq-target","target":0.041884595087031934,"target-prog":"(if (<= x 0.0) (- (log (+ 1.0 (exp x))) (* x y)) (- (log (+ 1.0 (exp (- x)))) (* (- x) (- 1.0 y))))","time":14667.568603515625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 2.5672847489665243) (33224 0.18473178320576106) ())","end":0.18473178320576106,"end-est":0.13900375976844204,"identifier":"#f","input":"(/ (* x (/ (sin y) y)) z)","link":"380-LinearQuaternionctanhfromlinear11913","name":"Linear.Quaternion:$ctanh from linear-1.19.1.3","output":"(if (<= (* x (/ (sin y) y)) -5e-211) (/ (* x (/ (sin y) y)) z) (if (<= (* x (/ (sin y) y)) 4e-267) (* (/ (sin y) y) (/ x z)) (/ (* x (/ (log1p (expm1 (sin y))) y)) z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (/ (sin y) y)) z)","start":2.5672847489665243,"start-est":3.963322689535031,"status":"eq-target","target":0.3091215628687635,"target-prog":"(if (< z -4.2173720203427147e-29) (/ (* x (/ 1.0 (/ y (sin y)))) z) (if (< z 4.446702369113811e+64) (/ x (* z (/ y (sin y)))) (/ (* x (/ 1.0 (/ y (sin y)))) z)))","time":9352.882568359375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 7.57887744375108) (7112 0.4709394270491027) ())","end":0.4709394270491027,"end-est":0.45703125,"identifier":"#f","input":"(/ (* (cosh x) (/ y x)) z)","link":"381-LinearQuaternionctanfromlinear11913","name":"Linear.Quaternion:$ctan from linear-1.19.1.3","output":"(if (<= z -1.6e-41) (/ (* (cosh x) y) (* z x)) (if (<= z 6.356807180506271e+59) (/ (* (cosh x) (/ y x)) z) (/ (* (cosh x) y) (* z x))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (cosh x) (/ y x)) z)","start":7.57887744375108,"start-est":6.4765625,"status":"eq-target","target":0.47833132474366813,"target-prog":"(if (< y -4.618902267687042e-52) (* (/ (/ y z) x) (cosh x)) (if (< y 1.038530535935153e-39) (/ (/ (* (cosh x) y) x) z) (* (/ (/ y z) x) (cosh x))))","time":14146.46630859375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 0.1278114816370412) (13120 0.1278114816370412) ())","end":0.1278114816370412,"end-est":0.12109375,"identifier":"#f","input":"(* (cosh x) (/ (sin y) y))","link":"382-LinearQuaternioncsinhfromlinear11913","name":"Linear.Quaternion:$csinh from linear-1.19.1.3","output":"(* (cosh x) (/ (sin y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (cosh x) (/ (sin y) y))","start":0.1278114816370412,"start-est":0.12109375,"status":"eq-target","target":0.12621936093777045,"target-prog":"(/ (* (cosh x) (sin y)) y)","time":20432.939208984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 20.740375) (13256 0.1603392734924472) ())","end":0.1603392734924472,"end-est":0.0078125,"identifier":"#f","input":"(sqrt (+ (* x x) y))","link":"383-LinearQuaternionclogfromlinear11913","name":"Linear.Quaternion:$clog from linear-1.19.1.3","output":"(if (<= x -1.7526032698725896e+154) (- (* (/ y x) -0.5) x) (if (<= x 4.3388556039437286e+102) (sqrt (fma x x y)) (fma 0.5 (/ y x) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) y))","start":20.740375,"start-est":24.2578125,"status":"eq-target","target":0.4591363595262356,"target-prog":"(if (< x -1.5097698010472593e+153) (- (+ (* 0.5 (/ y x)) x)) (if (< x 5.582399551122541e+57) (sqrt (+ (* x x) y)) (+ (* 0.5 (/ y x)) x)))","time":4739.990478515625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 14.499249774652574) (13120 0.11078308281331131) ())","end":0.11078308281331131,"end-est":0.109375,"identifier":"#f","input":"(/ (* (sin x) (sinh y)) x)","link":"384-LinearQuaternionccoshfromlinear11913","name":"Linear.Quaternion:$ccosh from linear-1.19.1.3","output":"(* (/ (sin x) x) (sinh y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (sin x) (sinh y)) x)","start":14.499249774652574,"start-est":12.945661290097753,"status":"eq-target","target":0.21145996250072113,"target-prog":"(* (sin x) (/ (sinh y) x))","time":18223.317626953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.14119116562662265) (13376 0.055875) ())","end":0.055875,"end-est":0.046875,"identifier":"#f","input":"(+ (+ (+ (* x x) (* y y)) (* y y)) (* y y))","link":"385-LinearQuaternioncfromlinear11913E","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, E","output":"(fma x x (fma y y (* (* y y) 2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x x) (* y y)) (* y y)) (* y y))","start":0.14119116562662265,"start-est":0.1171875,"status":"eq-target","target":0.12425,"target-prog":"(+ (* x x) (* y (+ y (+ y y))))","time":4759.456298828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 12.989216340727873) (320 0.0125) ())","end":0.0125,"end-est":0.00390625,"identifier":"#f","input":"(- (+ (- (* x y) (* y y)) (* y y)) (* y z))","link":"386-LinearQuaternioncfromlinear11913D","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, D","output":"(* y (- x z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ (- (* x y) (* y y)) (* y y)) (* y z))","start":12.989216340727873,"start-est":13.01656383987639,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":6091.8134765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 17.83725677328059) (320 0.0125) ())","end":0.0125,"end-est":0.00390625,"identifier":"#f","input":"(- (- (+ (* x y) (* y y)) (* y z)) (* y y))","link":"387-LinearQuaternioncfromlinear11913C","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, C","output":"(* y (- x z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (- (+ (* x y) (* y y)) (* y z)) (* y y))","start":17.83725677328059,"start-est":18.75111491369989,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":6282.816162109375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 17.83711390353636) (320 0.0125) ())","end":0.0125,"end-est":0.00390625,"identifier":"#f","input":"(+ (- (- (* x y) (* y z)) (* y y)) (* y y))","link":"388-LinearQuaternioncfromlinear11913B","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, B","output":"(* y (- x z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (- (* x y) (* y z)) (* y y)) (* y y))","start":17.83711390353636,"start-est":18.75111491369989,"status":"eq-target","target":0.0125,"target-prog":"(* (- x z) y)","time":8837.02197265625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.12310620312590145) (6848 0.10525) ())","end":0.10525,"end-est":0.10546875,"identifier":"#f","input":"(+ (+ (+ (* x y) (* z z)) (* z z)) (* z z))","link":"389-LinearQuaternioncfromlinear11913A","name":"Linear.Quaternion:$c/ from linear-1.19.1.3, A","output":"(fma z (* z 3.0) (* x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (* x y) (* z z)) (* z z)) (* z z))","start":0.12310620312590145,"start-est":0.12109375,"status":"eq-target","target":0.106125,"target-prog":"(+ (* (* 3.0 z) z) (* y x))","time":13366.289306640625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.91844014420503) (7112 0.4878387141877928) ())","end":0.4878387141877928,"end-est":0.03125,"identifier":"#f","input":"(/ (* (* x 2.0) y) (- x y))","link":"390-LinearProjectionperspectivefromlinear11913B","name":"Linear.Projection:perspective from linear-1.19.1.3, B","output":"(if (<= y -2.65046080191604e+106) (/ x (fma 0.5 (/ x y) -0.5)) (if (<= y 2.5266211310122185e-43) (* y (/ (+ x x) (- x y))) (/ x (fma 0.5 (/ x y) -0.5))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (* x 2.0) y) (- x y))","start":14.91844014420503,"start-est":13.097266994459217,"status":"eq-target","target":0.29188192251819656,"target-prog":"(if (< x -1.7210442634149447e+81) (* (/ (* 2.0 x) (- x y)) y) (if (< x 83645045635564430.0) (/ (* x 2.0) (/ (- x y) y)) (* (/ (* 2.0 x) (- x y)) y)))","time":6948.004150390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.026044925001442315) (27840 0.03626429670589612) ())","end":0.03626429670589612,"end-est":0.01953125,"identifier":"#f","input":"(/ (+ x y) (- x y))","link":"391-LinearProjectionperspectivefromlinear11913A","name":"Linear.Projection:perspective from linear-1.19.1.3, A","output":"(log (exp (/ (+ 1.0 (pow (+ (/ (+ x y) (- x y)) -1.0) 3.0)) (+ 1.0 (+ (pow (+ (/ (+ x y) (- x y)) -1.0) 2.0) (- 1.0 (/ (+ x y) (- x y))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (- x y))","start":0.026044925001442315,"start-est":0.02734375,"status":"eq-target","target":0.025743248826614547,"target-prog":"(/ 1.0 (- (/ x (+ x y)) (/ y (+ x y))))","time":15992.40283203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.67147182709287) (448 0.014198120312590145) ())","end":0.014198120312590145,"end-est":0.01953125,"identifier":"#f","input":"(/ (+ x y) (* (* x 2.0) y))","link":"392-LinearProjectioninversePerspectivefromlinear11913C","name":"Linear.Projection:inversePerspective from linear-1.19.1.3, C","output":"(+ (/ 0.5 y) (/ 0.5 x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (* (* x 2.0) y))","start":15.67147182709287,"start-est":14.81204757690762,"status":"eq-target","target":0.014198120312590145,"target-prog":"(+ (/ 0.5 x) (/ 0.5 y))","time":7032.39404296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.670594877653832) (448 0.014065445244507126) ())","end":0.014065445244507126,"end-est":0.015625,"identifier":"#f","input":"(/ (- x y) (* (* x 2.0) y))","link":"393-LinearProjectioninversePerspectivefromlinear11913B","name":"Linear.Projection:inversePerspective from linear-1.19.1.3, B","output":"(+ (/ -0.5 x) (/ 0.5 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (* (* x 2.0) y))","start":15.670594877653832,"start-est":14.8175750598401,"status":"eq-target","target":0.014065445244507126,"target-prog":"(- (/ 0.5 y) (/ 0.5 x))","time":15644.732177734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.198798947063035) (2640 0.6844428208939335) ())","end":0.6844428208939335,"end-est":0.7265625,"identifier":"#f","input":"(* (- (* x y) (* z y)) t)","link":"394-LinearProjectioninverseInfinitePerspectivefromline","name":"Linear.Projection:inverseInfinitePerspective from linear-1.19.1.3","output":"(if (<= (- (* x y) (* y z)) -5e+197) (* y (* t (- x z))) (if (<= (- (* x y) (* y z)) -4e-134) (* (- (* x y) (* y z)) t) (if (<= (- (* x y) (* y z)) 2e-275) (* y (* t (- x z))) (if (<= (- (* x y) (* y z)) 2e+184) (* (- (* x y) (* y z)) t) (* y (* t (- x z)))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort y t))","spec":"(* (- (* x y) (* z y)) t)","start":7.198798947063035,"start-est":5.929623376229602,"status":"gt-target","target":3.4650980218398937,"target-prog":"(if (< t -9.231879582886777e-80) (* (* y t) (- x z)) (if (< t 2.543067051564877e+83) (* y (* t (- x z))) (* (* y (- x z)) t)))","time":17141.359375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 7.151013001761037) (2640 0.4161571251791887) ())","end":0.4161571251791887,"end-est":0.14453125,"identifier":"#f","input":"(/ (* x 2.0) (- (* y z) (* t z)))","link":"395-LinearProjectioninfinitePerspectivefromlinear11913","name":"Linear.Projection:infinitePerspective from linear-1.19.1.3, A","output":"(if (<= (- (* y z) (* z t)) -5e+247) (* (/ x z) (/ 2.0 (- y t))) (if (<= (- (* y z) (* z t)) -5e-185) (/ x (* z (* (- y t) 0.5))) (if (<= (- (* y z) (* z t)) 0.0) (* (/ x z) (/ 2.0 (- y t))) (if (<= (- (* y z) (* z t)) 1e+192) (/ x (* z (* (- y t) 0.5))) (* (/ x z) (/ 2.0 (- y t)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x 2.0) (- (* y z) (* t z)))","start":7.151013001761037,"start-est":7.90671972535238,"status":"gt-target","target":2.2582801954273886,"target-prog":"(if (< (/ (* x 2.0) (- (* y z) (* t z))) -2.559141628295061e-13) (* (/ x (* (- y t) z)) 2.0) (if (< (/ (* x 2.0) (- (* y z) (* t z))) 1.045027827330126e-269) (/ (* (/ x z) 2.0) (- y t)) (* (/ x (* (- y t) z)) 2.0)))","time":12631.749755859375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01854024101186092) (6848 0.012823120312590145) ())","end":0.012823120312590145,"end-est":0.0078125,"identifier":"#f","input":"(* 2.0 (+ (* x x) (* x y)))","link":"396-LinearMatrixfromQuaternionfromlinear11913B","name":"Linear.Matrix:fromQuaternion from linear-1.19.1.3, B","output":"(* 2.0 (fma x x (* x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (+ (* x x) (* x y)))","start":0.01854024101186092,"start-est":0.015625,"status":"eq-target","target":0.009375,"target-prog":"(* (* x 2.0) (+ x y))","time":4106.625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.017698120312590146) (704 0.010448120312590145) ())","end":0.010448120312590145,"end-est":0.0078125,"identifier":"#f","input":"(* 2.0 (- (* x x) (* x y)))","link":"397-LinearMatrixfromQuaternionfromlinear11913A","name":"Linear.Matrix:fromQuaternion from linear-1.19.1.3, A","output":"(+ (* x (* 2.0 x)) (* y (* x -2.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (- (* x x) (* x y)))","start":0.017698120312590146,"start-est":0.015625,"status":"eq-target","target":0.00775,"target-prog":"(* (* x 2.0) (- x y))","time":3963.02392578125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6080 26.669136525537326) (8408 26.55351346229791) ())","end":26.55351346229791,"end-est":19.366633898896048,"identifier":"#f","input":"(+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))","link":"398-LinearMatrixdet44fromlinear11913","name":"Linear.Matrix:det44 from linear-1.19.1.3","output":"(if (<= b -1e+50) (- (* (- (* y0 y5) (* y1 y4)) (- (* j y3) (* k y2))) (+ (* (- (* t y2) (* y y3)) (- (* c y4) (* a y5))) (+ (* b (* y4 (- (* y k) (* t j)))) (- (* (- (* x y2) (* z y3)) (- (* a y1) (* c y0))) (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0)))))))) (if (<= b -2.5309107290970932e-213) (+ (* (- (* y0 y5) (* y1 y4)) (- (* j y3) (* k y2))) (- (- (* y (* y3 (- (* c y4) (* a y5)))) (* t (* y2 (- (* c y4) (* a y5))))) (- (- (* (- (* x y2) (* z y3)) (- (* a y1) (* c y0))) (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0))))) (- (* t (* j (- (* b y4) (* i y5)))) (* k (* y (- (* b y4) (* i y5)))))))) (if (<= b -3.6233951878339285e-274) (+ (+ (+ (- (* t (* j (- (* b y4) (* i y5)))) (* k (* y (- (* b y4) (* i y5))))) (+ (* (- (* c y0) (* a y1)) (- (* x y2) (* z y3))) (+ (- (* y (* x (- (* b a) (* c i)))) (* t (* z (- (* b a) (* c i))))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0)))))) (* (- (* t y2) (* y y3)) (- (* a y5) (* c y4)))) (+ (* k (* y2 (- (* y1 y4) (* y0 y5)))) (* y3 (* j (- (* y0 y5) (* y1 y4)))))) (if (<= b 2.6233213361973486e-295) (+ (* (- (* y0 y5) (* y1 y4)) (- (* j y3) (* k y2))) (- (+ (* a (* (- (* t y2) (* y y3)) y5)) (* c (* y4 (- (* y y3) (* t y2))))) (- (- (* (- (* x y2) (* z y3)) (- (* a y1) (* c y0))) (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0))))) (- (* t (* j (- (* b y4) (* i y5)))) (* k (* y (- (* b y4) (* i y5)))))))) (if (<= b 5.230607603591033e-198) (+ (* (- (* y0 y5) (* y1 y4)) (- (* j y3) (* k y2))) (+ (+ (- (* t (* j (- (* b y4) (* i y5)))) (* k (* y (- (* b y4) (* i y5))))) (+ (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0)))) (+ (* c (* y0 (- (* x y2) (* z y3)))) (* a (* y1 (- (* z y3) (* x y2))))))) (* (- (* t y2) (* y y3)) (- (* a y5) (* c y4))))) (if (<= b 1e+32) (+ (+ (* k (* y2 (- (* y1 y4) (* y0 y5)))) (* y3 (* j (- (* y0 y5) (* y1 y4))))) (+ (+ (- (* t (* j (- (* b y4) (* i y5)))) (* k (* y (- (* b y4) (* i y5))))) (+ (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0)))) (+ (* c (* y0 (- (* x y2) (* z y3)))) (* a (* y1 (- (* z y3) (* x y2))))))) (* (- (* t y2) (* y y3)) (- (* a y5) (* c y4))))) (+ (+ (* k (* y2 (- (* y1 y4) (* y0 y5)))) (* y3 (* j (- (* y0 y5) (* y1 y4))))) (+ (- (* (- (* t j) (* y k)) (- (* b y4) (* i y5))) (- (* (- (* x y2) (* z y3)) (- (* a y1) (* c y0))) (+ (* (- (* x y) (* z t)) (- (* b a) (* c i))) (* (- (* x j) (* z k)) (- (* i y1) (* b y0)))))) (* (- (* t y2) (* y y3)) (- (* a y5) (* c y4)))))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))","start":26.669136525537326,"start-est":25.459316259768443,"status":"gt-target","target":30.463279790476886,"target-prog":"(if (< y4 -7.206256231996481e+60) (- (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))))) (- (/ (- (* y2 t) (* y3 y)) (/ 1.0 (- (* y4 c) (* y5 a)))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (if (< y4 -3.364603505246317e-66) (+ (- (- (- (* (* t c) (* i z)) (* (* a t) (* b z))) (* (* y c) (* i x))) (* (- (* b y0) (* i y1)) (- (* j x) (* k z)))) (- (* (- (* y0 c) (* a y1)) (- (* x y2) (* z y3))) (- (* (- (* t y2) (* y y3)) (- (* y4 c) (* a y5))) (* (- (* y1 y4) (* y5 y0)) (- (* k y2) (* j y3)))))) (if (< y4 -1.2000065055686116e-105) (+ (+ (- (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))) (* (* y3 y) (- (* y5 a) (* y4 c)))) (+ (* (* y5 a) (* t y2)) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* x y2) (* z y3)) (- (* c y0) (* a y1))) (- (* (- (* b y0) (* i y1)) (- (* j x) (* k z))) (* (- (* y x) (* z t)) (- (* b a) (* i c)))))) (if (< y4 6.718963124057495e-279) (+ (- (- (- (* (* k y) (* y5 i)) (* (* y b) (* y4 k))) (* (* y5 t) (* i j))) (- (* (- (* y2 t) (* y3 y)) (- (* y4 c) (* y5 a))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* y2 x) (* y3 z)) (- (* c y0) (* y1 a)))))) (if (< y4 4.77962681403792e-222) (+ (+ (- (* (- (* j t) (* k y)) (- (* y4 b) (* y5 i))) (* (* y3 y) (- (* y5 a) (* y4 c)))) (+ (* (* y5 a) (* t y2)) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* x y2) (* z y3)) (- (* c y0) (* a y1))) (- (* (- (* b y0) (* i y1)) (- (* j x) (* k z))) (* (- (* y x) (* z t)) (- (* b a) (* i c)))))) (if (< y4 2.2852241541266835e-175) (+ (- (- (- (* (* k y) (* y5 i)) (* (* y b) (* y4 k))) (* (* y5 t) (* i j))) (- (* (- (* y2 t) (* y3 y)) (- (* y4 c) (* y5 a))) (* (- (* y2 k) (* y3 j)) (- (* y4 y1) (* y5 y0))))) (- (* (- (* b a) (* i c)) (- (* y x) (* t z))) (- (* (- (* j x) (* k z)) (- (* y0 b) (* i y1))) (* (- (* y2 x) (* y3 z)) (- (* c y0) (* y1 a)))))) (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (- (* k (* i (* z y1))) (+ (* j (* i (* x y1))) (* y0 (* k (* z b)))))) (- (* z (* y3 (* a y1))) (+ (* y2 (* x (* a y1))) (* y0 (* z (* c y3)))))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0))))))))))","time":118173.45288085938,"vars":["x","y","z","t","a","b","c","i","j","k","y0","y1","y2","y3","y4","y5"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.755924491404958) (24584 3.572698572039702) ())","end":3.572698572039702,"end-est":2.2481772610898565,"identifier":"#f","input":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y))))","link":"399-LinearMatrixdet33fromlinear11913","name":"Linear.Matrix:det33 from linear-1.19.1.3","output":"(if (<= (+ (+ (* x (- (* y z) (* t a))) (* b (- (* a i) (* z c)))) (* j (- (* t c) (* y i)))) (- INFINITY)) (+ (* t (- (* c j) (* x a))) (- (+ (* y (* x z)) (* i (- (* a b) (* y j)))) (* c (* z b)))) (if (<= (+ (+ (* x (- (* y z) (* t a))) (* b (- (* a i) (* z c)))) (* j (- (* t c) (* y i)))) 2e+291) (fma j (- (* t c) (* y i)) (fma x (fma y z (* t (- a))) (* b (- (* a i) (* z c))))) (+ (* z (- (* x y) (* b c))) (+ (* t (- (* c j) (* x a))) (- (* a (* b i)) (* i (* y j)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y))))","start":12.755924491404958,"start-est":11.740364761089857,"status":"gt-target","target":16.967971093008966,"target-prog":"(if (< t -8.120978919195912e-33) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j))) (if (< t -4.712553818218485e-169) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (/ (* j (- (pow (* c t) 2.0) (pow (* i y) 2.0))) (+ (* c t) (* i y)))) (if (< t -7.633533346031584e-308) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j))) (if (< t 1.0535888557455487e-139) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (/ (* j (- (pow (* c t) 2.0) (pow (* i y) 2.0))) (+ (* c t) (* i y)))) (- (* x (- (* z y) (* a t))) (- (* b (- (* z c) (* a i))) (* (- (* c t) (* y i)) j)))))))","time":22588.554931640625,"vars":["x","y","z","t","a","b","c","i","j"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 39.544210226354835) (6592 0.010625) ())","end":0.010625,"end-est":0.0078125,"identifier":"#f","input":"(/ (- (exp x) 1.0) x)","link":"400-Kahansexpquotient","name":"Kahan's exp quotient","output":"(/ (expm1 x) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (exp x) 1.0) x)","start":39.544210226354835,"start-est":40.439957439819686,"status":"gt-target","target":39.9555,"target-prog":"(if (and (< x 1.0) (> x -1.0)) (/ (- (exp x) 1.0) (log (exp x))) (/ (- (exp x) 1.0) x))","time":5155.42919921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 20.7724737471046) (13632 0.037113534379146655) ())","end":0.037113534379146655,"end-est":0.020195019536884032,"identifier":"#f","input":"(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))","link":"401-Kahanp9Example","name":"Kahan p9 Example","output":"(* (/ (+ x y) (hypot x y)) (/ (- x y) (hypot x y)))","pre":"(and (and (< 0.0 x) (< x 1.0)) (< y 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))","start":20.7724737471046,"start-est":22.2578125,"status":"eq-target","target":0.07310169219101559,"target-prog":"(if (and (< 0.5 (fabs (/ x y))) (< (fabs (/ x y)) 2.0)) (/ (* (- x y) (+ x y)) (+ (* x x) (* y y))) (- 1.0 (/ 2.0 (+ 1.0 (* (/ x y) (/ x y))))))","time":9381.5224609375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 13.52227128631196) (32896 1.8425725542859928) ())","end":1.8425725542859928,"end-est":1.1635888115809399,"identifier":"#f","input":"(- wj (/ (- (* wj (exp wj)) x) (+ (exp wj) (* wj (exp wj)))))","link":"402-JmatReallambertwnewtonloopstep","name":"Jmat.Real.lambertw, newton loop step","output":"(fma wj (fma x (fma wj 2.5 -2.0) wj) (- x (* (fma x 2.6666666666666665 1.0) (pow wj 3.0))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- wj (/ (- (* wj (exp wj)) x) (+ (exp wj) (* wj (exp wj)))))","start":13.52227128631196,"start-est":14.030664636487524,"status":"gt-target","target":12.718893717596696,"target-prog":"(- wj (- (/ wj (+ wj 1.0)) (/ x (+ (exp wj) (* wj (exp wj))))))","time":15705.32666015625,"vars":["wj","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13248 53.292084896964994) (13444 0.2539543788861443) ())","end":0.2539543788861443,"end-est":0.18524384291297372,"identifier":"#f","input":"(log (+ x (sqrt (+ (* x x) 1.0))))","link":"403-Hyperbolicarcsine","name":"Hyperbolic arcsine","output":"(if (<= x -10640.765013896878) (log (+ (/ 0.125 (pow x 3.0)) (/ -0.5 x))) (if (<= x 4.397566801236614e-7) (fma -0.16666666666666666 (pow x 3.0) x) (log (+ x (hypot 1.0 x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(log (+ x (sqrt (+ (* x x) 1.0))))","start":53.292084896964994,"start-est":55.429844981022455,"status":"gt-target","target":45.278137270350676,"target-prog":"(if (< x 0.0) (log (/ -1.0 (- x (sqrt (+ (* x x) 1.0))))) (log (+ x (sqrt (+ (* x x) 1.0)))))","time":9506.304931640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(/ (* (pow (/ 1.0 (+ 1.0 (exp (- s)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- s))))) c_n)) (* (pow (/ 1.0 (+ 1.0 (exp (- t)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- t))))) c_n)))","link":"404-Harleysexample","name":"Harley's example","output":"#f","pre":"(and (< 0.0 c_p) (< 0.0 c_n))","prec":"binary64","preprocess":"()","spec":"(/ (* (pow (/ 1.0 (+ 1.0 (exp (- s)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- s))))) c_n)) (* (pow (/ 1.0 (+ 1.0 (exp (- t)))) c_p) (pow (- 1.0 (/ 1.0 (+ 1.0 (exp (- t))))) c_n)))","start":false,"start-est":false,"status":"timeout","target":false,"target-prog":"(* (pow (/ (+ 1.0 (exp (- t))) (+ 1.0 (exp (- s)))) c_p) (pow (/ (+ 1.0 (exp t)) (+ 1.0 (exp s))) c_n))","time":300000,"vars":["c_p","c_n","t","s"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.06057312031259014) (6848 0.01875) ())","end":0.01875,"end-est":0.0078125,"identifier":"#f","input":"(+ (* x (+ y z)) (* z 5.0))","link":"405-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, C","output":"(fma 5.0 z (* x (+ z y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x (+ y z)) (* z 5.0))","start":0.06057312031259014,"start-est":0.0546875,"status":"eq-target","target":0.05775,"target-prog":"(+ (* (+ x 5.0) z) (* x y))","time":5387.84521484375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.018875) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ x y) x)","link":"406-GraphicsRenderingPlotRenderPlotLegendrenderLegendO","name":"Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, A","output":"(fma x 2.0 y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ x y) x)","start":0.018875,"start-est":0.015625,"status":"eq-target","target":0,"target-prog":"(+ y (* 2.0 x))","time":2105.434326171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 2.015005561621178) (6848 2.0127316118898357) ())","end":2.0127316118898357,"end-est":1.3648771650523426,"identifier":"#f","input":"(+ x (* (- y x) (/ z t)))","link":"407-GraphicsRenderingPlotRenderPlotAxistickPositionfro","name":"Graphics.Rendering.Plot.Render.Plot.Axis:tickPosition from plot-0.2.3.4","output":"(fma (- y x) (/ z t) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y x) (/ z t)))","start":2.015005561621178,"start-est":1.3726896650523426,"status":"eq-target","target":2.1943588370716522,"target-prog":"(if (< (* (- y x) (/ z t)) -1013646692435.8867) (+ x (/ (- y x) (/ t z))) (if (< (* (- y x) (/ z t)) 0.0) (+ x (/ (* (- y x) z) t)) (+ x (/ (- y x) (/ t z)))))","time":8084.405517578125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.620424254225126) (8004 0.58182298264148) ())","end":0.58182298264148,"end-est":0.2994672514806582,"identifier":"#f","input":"(+ x (/ (* y (- z t)) (- a t)))","link":"408-GraphicsRenderingPlotRenderPlotAxisrenderAxisTicks","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, B","output":"(if (<= y -1.6245718036745385e-60) (+ (* y (+ (/ (- t z) (- t a)) (fma (/ -1.0 (- t a)) z (/ z (- t a))))) x) (if (<= y 5.496840460686529e-136) (+ x (- (/ (* y t) (- t a)) (/ (* y z) (- t a)))) (+ x (* y (- (/ t (- t a)) (/ z (- t a)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) (- a t)))","start":10.620424254225126,"start-est":7.59375,"status":"eq-target","target":1.1045808384901772,"target-prog":"(+ x (/ y (/ (- a t) (- z t))))","time":11565.906005859375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.63087506276876) (2376 0.30957318308134985) ())","end":0.30957318308134985,"end-est":0.06640625,"identifier":"#f","input":"(+ x (/ (* y (- z t)) (- z a)))","link":"409-GraphicsRenderingPlotRenderPlotAxisrenderAxisTicks","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, A","output":"(if (<= (/ (* y (- z t)) (- z a)) (- INFINITY)) (+ (/ y (* (- z a) (/ 1.0 (- z t)))) x) (if (<= (/ (* y (- z t)) (- z a)) 1e+298) (- (+ x (/ (* y z) (- z a))) (/ (* y t) (- z a))) (+ x (/ y (- (/ z (- z t)) (/ a (- z t)))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y (- z t)) (- z a)))","start":10.63087506276876,"start-est":8.3203125,"status":"eq-target","target":1.1588526894725966,"target-prog":"(+ x (/ y (/ (- z a) (- z t))))","time":11162.000732421875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 16.39775566413597) (3016 5.648977743226629) ())","end":5.648977743226629,"end-est":2.535158135765823,"identifier":"#f","input":"(- (+ x y) (/ (* (- z t) y) (- a t)))","link":"410-GraphicsRenderingPlotRenderPlotAxisrenderAxisTickf","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, B","output":"(if (<= (+ (+ x y) (/ (* y (- t z)) (- a t))) (- INFINITY)) (+ x (* (/ y t) (- z a))) (if (<= (+ (+ x y) (/ (* y (- t z)) (- a t))) 5e+304) (+ x (+ (/ (* y z) (- t a)) (- y (/ (* y t) (- t a))))) (+ x (* (/ y t) (- z a)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) (/ (* (- z t) y) (- a t)))","start":16.39775566413597,"start-est":13.310948839189669,"status":"gt-target","target":8.100679151626704,"target-prog":"(if (< (- (+ x y) (/ (* (- z t) y) (- a t))) -1.3664970889390727e-7) (- (+ y x) (* (* (- z t) (/ 1.0 (- a t))) y)) (if (< (- (+ x y) (/ (* (- z t) y) (- a t))) 1.4754293444577233e-239) (/ (- (* y (- a z)) (* x t)) (- a t)) (- (+ y x) (* (* (- z t) (/ 1.0 (- a t))) y))))","time":12515.628662109375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.616422701686078) (7240 0.6336353924861242) ())","end":0.6336353924861242,"end-est":0.07421875,"identifier":"#f","input":"(+ x (/ (* (- y z) t) (- a z)))","link":"411-GraphicsRenderingPlotRenderPlotAxisrenderAxisTickf","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, A","output":"(if (<= t -6.7997067365034e+20) (fma t (/ (- y z) (- a z)) x) (if (<= t 3.817522808621204e-124) (+ x (/ (* t (- y z)) (- a z))) (fma t (/ (- y z) (- a z)) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y z) t) (- a z)))","start":10.616422701686078,"start-est":10.31640625,"status":"eq-target","target":0.6552603924861242,"target-prog":"(if (< t -1.0682974490174067e-39) (+ x (* (/ (- y z) (- a z)) t)) (if (< t 3.9110949887586375e-141) (+ x (/ (* (- y z) t) (- a z))) (+ x (* (/ (- y z) (- a z)) t))))","time":11174.80126953125,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 1.2156367417544713) (7556 0.5819998623288899) ())","end":0.5819998623288899,"end-est":0.3033735014806582,"identifier":"#f","input":"(+ x (* y (/ (- z t) (- a t))))","link":"412-GraphicsRenderingPlotRenderPlotAxisrenderAxisLinef","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, B","output":"(if (<= y -1.6245718036745385e-60) (+ x (* y (fma z (/ 1.0 (- a t)) (/ (- t) (- a t))))) (if (<= y 5.496840460686529e-136) (- (+ x (/ (* y z) (- a t))) (/ (* y t) (- a t))) (+ x (* y (/ (- z t) (- a t))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (/ (- z t) (- a t))))","start":1.2156367417544713,"start-est":1.8033735014806582,"status":"eq-target","target":0.46115535691736925,"target-prog":"(if (< y -8.508084860551241e-17) (+ x (* y (/ (- z t) (- a t)))) (if (< y 2.894426862792089e-49) (+ x (* (* y (- z t)) (/ 1.0 (- a t)))) (+ x (* y (/ (- z t) (- a t))))))","time":13885.23193359375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 1.2395858090768164) (1352 0.4624608718455761) ())","end":0.4624608718455761,"end-est":0.29435940817864903,"identifier":"#f","input":"(+ x (* y (/ (- z t) (- z a))))","link":"413-GraphicsRenderingPlotRenderPlotAxisrenderAxisLinef","name":"Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, A","output":"(if (<= y -3.1623289069246473e+22) (+ x (* y (/ (- z t) (- z a)))) (if (<= y 4.49072903864277e-21) (+ (/ (* y t) (- a z)) (- x (/ (* y z) (- a z)))) (+ x (* y (/ (- z t) (- z a))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* y (/ (- z t) (- z a))))","start":1.2395858090768164,"start-est":1.5482656581786491,"status":"eq-target","target":1.1588526894725966,"target-prog":"(+ x (/ y (/ (- z a) (- z t))))","time":10361.49072265625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 2.1227740416967973) (7104 0.32381424301624046) ())","end":0.32381424301624046,"end-est":0.36380806805425847,"identifier":"#f","input":"(- x (/ (- y z) (/ (+ (- t z) 1.0) a)))","link":"414-GraphicsRenderingChartSparkLinerenderSparkLinefrom","name":"Graphics.Rendering.Chart.SparkLine:renderSparkLine from Chart-1.5.3","output":"(fma a (/ (- z y) (+ t (- 1.0 z))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (/ (- y z) (/ (+ (- t z) 1.0) a)))","start":2.1227740416967973,"start-est":1.6629903733469236,"status":"eq-target","target":0.3255313637155112,"target-prog":"(- x (* (/ (- y z) (+ (- t z) 1.0)) a))","time":10725.396484375,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 15.85449506491106) (6720 0.00375) ())","end":0.00375,"end-est":0.0078125,"identifier":"#f","input":"(+ x (* (- 1.0 x) (- 1.0 y)))","link":"415-GraphicsRenderingChartPlotVectorsrenderPlotVectors","name":"Graphics.Rendering.Chart.Plot.Vectors:renderPlotVectors from Chart-1.5.3","output":"(- (fma x y 1.0) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- 1.0 x) (- 1.0 y)))","start":15.85449506491106,"start-est":15.463400315908315,"status":"eq-target","target":0.004573120312590145,"target-prog":"(- (* y x) (- y 1.0))","time":3620.417236328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 29.39181404787259) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- (+ x y) x)","link":"416-GraphicsRenderingChartPlotPierenderPiefromChart153","name":"Graphics.Rendering.Chart.Plot.Pie:renderPie from Chart-1.5.3","output":"y","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (+ x y) x)","start":29.39181404787259,"start-est":27.70879030963593,"status":"eq-target","target":0,"target-prog":"(- y 0.0)","time":4012.440185546875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 11.29144831125165) (840 2.3076748726365586) ())","end":2.3076748726365586,"end-est":0.823072335280093,"identifier":"#f","input":"(/ (* x (- y z)) (- t z))","link":"417-GraphicsRenderingChartPlotAreaSpotsrenderAreaSpots","name":"Graphics.Rendering.Chart.Plot.AreaSpots:renderAreaSpots4D from Chart-1.5.3","output":"(if (<= x -265550142.1674508) (* (- z y) (/ x (- z t))) (if (<= x -3.2889982621126373e-271) (/ (* x (- y z)) (- t z)) (/ x (/ (- t z) (- y z)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (- y z)) (- t z))","start":11.29144831125165,"start-est":11.041527996448902,"status":"eq-target","target":2.4164131564944227,"target-prog":"(/ x (/ (- t z) (- y z)))","time":10515.58837890625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 14.12648176677916) (1100 1.9792046884107906) ())","end":1.9792046884107906,"end-est":1.477038390029331,"identifier":"#f","input":"(* x (/ (* (/ y z) t) t))","link":"418-GraphicsRenderingChartBackendDiagramscalcFontMetri","name":"Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, B","output":"(if (<= (/ y z) -1e-212) (/ x (/ z y)) (if (<= (/ y z) 5e-316) (/ (* y x) z) (if (<= (/ y z) 3.5e+144) (/ x (/ z y)) (* y (/ x z)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* x (/ (* (/ y z) t) t))","start":14.12648176677916,"start-est":14.385566746740608,"status":"eq-target","target":1.5761578146171515,"target-prog":"(if (< (/ (* (/ y z) t) t) -1.20672205123045e+245) (/ y (/ z x)) (if (< (/ (* (/ y z) t) t) -5.907522236933906e-275) (* x (/ y z)) (if (< (/ (* (/ y z) t) t) 5.658954423153415e-65) (/ y (/ z x)) (if (< (/ (* (/ y z) t) t) 2.0087180502407133e+217) (* x (/ y z)) (/ (* y x) z)))))","time":6674.1328125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.702036497087167) (1864 0.4167249581459036) ())","end":0.4167249581459036,"end-est":0.06640625,"identifier":"#f","input":"(/ (+ x y) (- 1.0 (/ y z)))","link":"419-GraphicsRenderingChartBackendDiagramscalcFontMetri","name":"Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, A","output":"(if (<= (/ (+ x y) (- 1.0 (/ y z))) -1e-252) (/ (+ x y) (- 1.0 (/ y z))) (if (<= (/ (+ x y) (- 1.0 (/ y z))) 0.0) (* (/ (+ x y) y) (- z)) (/ (+ x y) (- 1.0 (/ y z)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (- 1.0 (/ y z)))","start":7.702036497087167,"start-est":8.893762559347234,"status":"gt-target","target":4.070447258539773,"target-prog":"(if (< y -3.7429310762689856e+171) (* (/ (+ y x) (- y)) z) (if (< y 3.5534662456086734e+168) (/ (+ x y) (- 1.0 (/ y z))) (* (/ (+ y x) (- y)) z)))","time":9535.4228515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 24.076745585802207) (1864 6.775186057270777) ())","end":6.775186057270777,"end-est":5.532303824474704,"identifier":"#f","input":"(+ x (/ (* (- y x) (- z t)) (- a t)))","link":"420-GraphicsRenderingChartAxisTypeslinMapfromChart153","name":"Graphics.Rendering.Chart.Axis.Types:linMap from Chart-1.5.3","output":"(if (<= t -4.38544886833803e+170) (+ (* (- (/ z (- a t)) (/ t (- a t))) y) (/ x (/ t (- z a)))) (if (<= t 1.3773847430366094e+184) (+ (* (- (/ z (- a t)) (/ t (- a t))) y) (+ x (* (/ x (- a t)) (- t z)))) (+ (* (- (/ z (- a t)) (/ t (- a t))) y) (/ x (/ t (- z a))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y x) (- z t)) (- a t)))","start":24.076745585802207,"start-est":24.187941194885553,"status":"gt-target","target":8.863746150417333,"target-prog":"(if (< a -1.6153062845442575e-142) (+ x (* (/ (- y x) 1.0) (/ (- z t) (- a t)))) (if (< a 3.774403170083174e-182) (- y (* (/ z t) (- y x))) (+ x (* (/ (- y x) 1.0) (/ (- z t) (- a t))))))","time":11837.951171875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 24.2491951816857) (11208 2.9438322194275552) ())","end":2.9438322194275552,"end-est":2.949642442640453,"identifier":"#f","input":"(+ x (/ (* (- y z) (- t x)) (- a z)))","link":"421-GraphicsRenderingChartAxisTypesinvLinMapfromChart1","name":"Graphics.Rendering.Chart.Axis.Types:invLinMap from Chart-1.5.3","output":"(if (<= (+ x (/ (* (- y z) (- t x)) (- a z))) -1e-274) (- (* x (+ (/ y (- z a)) (/ (+ 1.0 (pow (/ (- z) (- z a)) 3.0)) (+ 1.0 (+ (* (/ z (- z a)) (/ z (- z a))) (/ z (- z a))))))) (/ t (/ (- z a) (- y z)))) (if (<= (+ x (/ (* (- y z) (- t x)) (- a z))) 0.0) (- (* x (+ (/ y (- z a)) (* (/ a z) (- -1.0 (/ a z))))) (/ t (/ (- z a) (- y z)))) (- (* x (+ (/ y (- z a)) (/ (+ 1.0 (pow (/ (- z) (- z a)) 3.0)) (+ 1.0 (+ (* (/ z (- z a)) (/ z (- z a))) (/ z (- z a))))))) (/ t (/ (- z a) (- y z))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* (- y z) (- t x)) (- a z)))","start":24.2491951816857,"start-est":26.859385055326896,"status":"gt-target","target":11.872975674379008,"target-prog":"(if (< z -1.2536131056095036e+188) (- t (* (/ y z) (- t x))) (if (< z 4.446702369113811e+64) (+ x (/ (- y z) (/ (- a z) (- t x)))) (- t (* (/ y z) (- t x)))))","time":13707.648681640625,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.089875) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (/ (- x y) 2.0))","link":"422-GraphicsRenderingChartAxisTypeshBufferRectfromChar","name":"Graphics.Rendering.Chart.Axis.Types:hBufferRect from Chart-1.5.3","output":"(fma 1.5 x (* -0.5 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (- x y) 2.0))","start":0.089875,"start-est":0.08203125,"status":"eq-target","target":0.08907312031259015,"target-prog":"(- (* 1.5 x) (* 0.5 y))","time":3013.864501953125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((20032 14.654369647725304) (19904 0.30876616877560104) ())","end":0.30876616877560104,"end-est":0.27085878907376804,"identifier":"#f","input":"(/ (* (* (/ 8.0 3.0) (sin (* x 0.5))) (sin (* x 0.5))) (sin x))","link":"423-GraphicsRasterificSvgPathConvertersegmentToBezierf","name":"Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, A","output":"(/ (sin (* x 0.5)) (* 0.375 (/ (sin x) (sin (* x 0.5)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (* (/ 8.0 3.0) (sin (* x 0.5))) (sin (* x 0.5))) (sin x))","start":14.654369647725304,"start-est":14.363575391861522,"status":"eq-target","target":0.30864361252668276,"target-prog":"(/ (/ (* 8.0 (sin (* x 0.5))) 3.0) (/ (sin x) (sin (* x 0.5))))","time":13972.369384765625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 33.5531896762362) (7168 0.3604366546917369) ())","end":0.3604366546917369,"end-est":0.3795700195368841,"identifier":"#f","input":"(+ (/ (* x x) (* y y)) (/ (* z z) (* t t)))","link":"424-GraphicsRasterificSvgPathConverterarcToSegmentsfro","name":"Graphics.Rasterific.Svg.PathConverter:arcToSegments from rasterific-svg-0.2.3.1","output":"(+ (pow (/ z t) 2.0) (/ (/ x y) (/ y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ (* x x) (* y y)) (/ (* z z) (* t t)))","start":33.5531896762362,"start-est":33.575045439293845,"status":"eq-target","target":0.4206915421939004,"target-prog":"(+ (pow (/ x y) 2.0) (pow (/ z t) 2.0))","time":11369.419189453125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 5.743561481637042) (13632 0.10767403967784735) ())","end":0.10767403967784735,"end-est":0.3203125,"identifier":"#f","input":"(- (* x x) (* (* y 4.0) (- (* z z) t)))","link":"425-GraphicsRasterificShadingsradialGradientWithFocusS","name":"Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, B","output":"(fma (* (* y -4.0) z) z (fma y (* t 4.0) (* x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* x x) (* (* y 4.0) (- (* z z) t)))","start":5.743561481637042,"start-est":5.828125,"status":"gt-target","target":5.738844564450351,"target-prog":"(- (* x x) (* 4.0 (* y (- (* z z) t))))","time":9614.031005859375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.025625) (448 0.025625) ())","end":0.025625,"end-est":0.015625,"identifier":"#f","input":"(/ (- x y) (- z y))","link":"426-GraphicsRasterificShadingsgradientColorAtfromRaste","name":"Graphics.Rasterific.Shading:$sgradientColorAt from Rasterific-0.6.1","output":"(/ (- y x) (- y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- z y))","start":0.025625,"start-est":0.015625,"status":"eq-target","target":0.019125,"target-prog":"(- (/ x (- z y)) (/ y (- z y)))","time":11024.2744140625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 2.3219602733617086) (20676 1.4910852733617088) ())","end":1.4910852733617088,"end-est":0.7874803543395638,"identifier":"#f","input":"(+ (+ (+ x (* y z)) (* t a)) (* (* a z) b))","link":"427-GraphicsRasterificCubicBeziercachedBezierAtfromRas","name":"Graphics.Rasterific.CubicBezier:cachedBezierAt from Rasterific-0.6.1","output":"(if (<= (+ (+ (+ x (* y z)) (* t a)) (* (* z a) b)) 1e+288) (+ (+ (+ x (* y z)) (* t a)) (* (* z a) b)) (fma y z (fma a (fma z b t) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ x (* y z)) (* t a)) (* (* a z) b))","start":2.3219602733617086,"start-est":2.287480354339564,"status":"eq-start","target":0.30784436093777046,"target-prog":"(if (< z -11820553527347888000.0) (+ (* z (+ (* b a) y)) (+ x (* t a))) (if (< z 4.7589743188364287e-122) (+ (* (+ (* b z) t) a) (+ (* z y) x)) (+ (* z (+ (* b a) y)) (+ x (* t a)))))","time":9796.543212890625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 13.723123768128694) (33476 0.1430357565542998) ())","end":0.1430357565542998,"end-est":0.18851715927321575,"identifier":"#f","input":"(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))","link":"428-GivensRotationSVDexample","name":"Given's Rotation SVD example","output":"(if (<= (/ x (sqrt (+ (* p (* 4.0 p)) (* x x)))) -0.5) (fabs (/ p x)) (sqrt (fma 0.5 (/ x (sqrt (fma x x (* 4.0 (* p p))))) 0.5)))","pre":"(and (< 1e-150 (fabs x)) (< (fabs x) 1e+150))","prec":"binary64","preprocess":"()","spec":"(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))","start":13.723123768128694,"start-est":16.21845430820683,"status":"gt-target","target":13.717933210910482,"target-prog":"(sqrt (+ 0.5 (/ (copysign 0.5 x) (hypot 1.0 (/ (* 2.0 p) x)))))","time":14161.082763671875,"vars":["p","x"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 0.1264945820410299) (6528 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (* d1 (* (* (* (* (* d1 (* d1 d1)) d1) d1) (* d1 d1)) d1)) d1)","link":"429-FastMathtest5","name":"FastMath test5","output":"(pow d1 10.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* d1 (* (* (* (* (* d1 (* d1 d1)) d1) d1) (* d1 d1)) d1)) d1)","start":0.1264945820410299,"start-est":0.16281132814753613,"status":"eq-target","target":0,"target-prog":"(pow d1 10.0)","time":2923.946044921875,"vars":["d1"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.07265834831758686) (6848 0.025549039677847347) ())","end":0.025549039677847347,"end-est":0.015625,"identifier":"#f","input":"(+ (+ (* d1 3.0) (* d1 d2)) (* d1 d3))","link":"430-FastMathtest3","name":"FastMath test3","output":"(fma 3.0 d1 (* d1 (+ d2 d3)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* d1 3.0) (* d1 d2)) (* d1 d3))","start":0.07265834831758686,"start-est":0.05859375,"status":"eq-target","target":0.06675,"target-prog":"(* d1 (+ (+ 3.0 d2) d3))","time":7326.144287109375,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.18448836132445107) (320 0.0265) ())","end":0.0265,"end-est":0.0234375,"identifier":"#f","input":"(+ (+ (* d1 10.0) (* d1 d2)) (* d1 20.0))","link":"431-FastMathtest2","name":"FastMath test2","output":"(* d1 (+ d2 30.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* d1 10.0) (* d1 d2)) (* d1 20.0))","start":0.18448836132445107,"start-est":0.1875,"status":"eq-target","target":0.0265,"target-prog":"(* d1 (+ 30.0 d2))","time":5304.5810546875,"vars":["d1","d2"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.269625) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (* d 10.0) (* d 20.0))","link":"432-FastMathtest1","name":"FastMath test1","output":"(* d 30.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* d 10.0) (* d 20.0))","start":0.269625,"start-est":0.30078125,"status":"eq-target","target":0,"target-prog":"(* d 30.0)","time":1994.107177734375,"vars":["d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.13304248125036058) (6528 0.0005) ())","end":0.0005,"end-est":0,"identifier":"#f","input":"(* (* (* d1 d1) d1) d1)","link":"433-FastMathrepmul","name":"FastMath repmul","output":"(pow d1 4.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* d1 d1) d1) d1)","start":0.13304248125036058,"start-est":0.15234375,"status":"eq-target","target":0.0005,"target-prog":"(pow d1 4.0)","time":2313.23681640625,"vars":["d1"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 0.025936481637041212) (7104 0.01955640138897904) ())","end":0.01955640138897904,"end-est":0.015625,"identifier":"#f","input":"(- (+ (- (* d1 d2) (* d1 d3)) (* d4 d1)) (* d1 d1))","link":"434-FastMathdist4","name":"FastMath dist4","output":"(- (fma d1 (- d2 d3) (* d1 d4)) (* d1 d1))","pre":"TRUE","prec":"binary64","preprocess":"((sort d2 d4))","spec":"(- (+ (- (* d1 d2) (* d1 d3)) (* d4 d1)) (* d1 d1))","start":0.025936481637041212,"start-est":0.0234375,"status":"eq-target","target":0.02525,"target-prog":"(* d1 (- (+ (- d2 d3) d4) d1))","time":11089.265869140625,"vars":["d1","d2","d3","d4"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.03994528030302763) (6848 0.01375) ())","end":0.01375,"end-est":0.01953125,"identifier":"#f","input":"(+ (+ (* d1 d2) (* (+ d3 5.0) d1)) (* d1 32.0))","link":"435-FastMathdist3","name":"FastMath dist3","output":"(fma d1 (+ 37.0 d2) (* d1 d3))","pre":"TRUE","prec":"binary64","preprocess":"((sort d2 d3))","spec":"(+ (+ (* d1 d2) (* (+ d3 5.0) d1)) (* d1 32.0))","start":0.03994528030302763,"start-est":0.02734375,"status":"eq-target","target":0.0225,"target-prog":"(* d1 (+ (+ 37.0 d3) d2))","time":8818.600341796875,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.0125) (6720 0.006375) ())","end":0.006375,"end-est":0.00390625,"identifier":"#f","input":"(+ (* d1 d2) (* d1 d3))","link":"436-FastMathdist","name":"FastMath dist","output":"(fma d1 d2 (* d1 d3))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* d1 d2) (* d1 d3))","start":0.0125,"start-est":0.0078125,"status":"eq-target","target":0.01275,"target-prog":"(* d1 (+ d2 d3))","time":4041.04736328125,"vars":["d1","d2","d3"]},{"bits":128,"conversions":[],"cost-accuracy":"((7104 37.39919399158225) (12992 0.00575) ())","end":0.00575,"end-est":0,"identifier":"#f","input":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","link":"437-FRPYampaVector3vector3RhofromYampa0102","name":"FRP.Yampa.Vector3:vector3Rho from Yampa-0.10.2","output":"(hypot x (hypot y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (+ (* x x) (* y y)) (* z z)))","start":37.39919399158225,"start-est":39.89759423361397,"status":"gt-target","target":25.01478122160983,"target-prog":"(if (< z -6.396479394109776e+136) (- z) (if (< z 7.320293694404182e+117) (sqrt (+ (+ (* z z) (* x x)) (* y y))) z))","time":6405.67578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 3.6273094710110096) (576 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (+ a (+ b (+ c d))) 2.0)","link":"438-Expressionp6","name":"Expression, p6","output":"(* (+ (+ b c) (+ d a)) 2.0)","pre":"(and (and (and (and (<= -14.0 a) (<= a -13.0)) (and (<= -3.0 b) (<= b -2.0))) (and (<= 3.0 c) (<= c 3.5))) (and (<= 12.5 d) (<= d 13.5)))","prec":"binary64","preprocess":"()","spec":"(* (+ a (+ b (+ c d))) 2.0)","start":3.6273094710110096,"start-est":3.616794287259021,"status":"gt-target","target":3.815947913265965,"target-prog":"(+ (* (+ a b) 2.0) (* (+ c d) 2.0))","time":5533.89501953125,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.036375) (6848 0.00225) ())","end":0.00225,"end-est":0.01953125,"identifier":"#f","input":"(* a (+ (+ b c) d))","link":"439-Expressionp14","name":"Expression, p14","output":"(fma a (+ b d) (* a c))","pre":"(and (and (and (and (<= 56789.0 a) (<= a 98765.0)) (and (<= 0.0 b) (<= b 1.0))) (and (<= 0.0 c) (<= c 0.0016773))) (and (<= 0.0 d) (<= d 0.0016773)))","prec":"binary64","preprocess":"((sort b c d))","spec":"(* a (+ (+ b c) d))","start":0.036375,"start-est":0.0234375,"status":"eq-target","target":0.03725,"target-prog":"(+ (* a b) (* a (+ c d)))","time":5899.6630859375,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.021344360937770434) (448 0.021344360937770434) ())","end":0.021344360937770434,"end-est":0.0078125,"identifier":"#f","input":"(* (+ a b) (+ a b))","link":"440-Expression4p15","name":"Expression 4, p15","output":"(* (+ a b) (+ a b))","pre":"(and (and (<= 5.0 a) (<= a 10.0)) (and (<= 0.0 b) (<= b 0.001)))","prec":"binary64","preprocess":"()","spec":"(* (+ a b) (+ a b))","start":0.021344360937770434,"start-est":0.0078125,"status":"eq-target","target":0.012875,"target-prog":"(+ (+ (+ (* b a) (* b b)) (* b a)) (* a a))","time":5730.50390625,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.01425) (13056 0.00025) ())","end":0.00025,"end-est":0,"identifier":"#f","input":"(+ (* x (* x x)) (* x x))","link":"441-Expression3p15","name":"Expression 3, p15","output":"(fma x x (pow x 3.0))","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(+ (* x (* x x)) (* x x))","start":0.01425,"start-est":0.0078125,"status":"eq-target","target":0.023646240625180292,"target-prog":"(* (* (+ 1.0 x) x) x)","time":4558.01806640625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.00025) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ x (* x x))","link":"442-Expression2p15","name":"Expression 2, p15","output":"(fma x x x)","pre":"(and (<= 0.0 x) (<= x 2.0))","prec":"binary64","preprocess":"()","spec":"(+ x (* x x))","start":0.00025,"start-est":0.00390625,"status":"eq-target","target":0.019875,"target-prog":"(* (+ 1.0 x) x)","time":4366.6904296875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.39853101562950743) (58368 0.035125) ())","end":0.035125,"end-est":0.01953125,"identifier":"#f","input":"(+ (+ (+ (+ e d) c) b) a)","link":"443-Expression1p15","name":"Expression 1, p15","output":"(log (* (exp e) (* (exp d) (* (pow (* (pow (exp b) 3.0) (pow (exp a) 3.0)) 0.3333333333333333) (exp c)))))","pre":"(and (and (and (and (and (and (and (and (and (<= 1.0 a) (<= a 2.0)) (<= 2.0 b)) (<= b 4.0)) (<= 4.0 c)) (<= c 8.0)) (<= 8.0 d)) (<= d 16.0)) (<= 16.0 e)) (<= e 32.0))","prec":"binary64","preprocess":"()","spec":"(+ (+ (+ (+ e d) c) b) a)","start":0.39853101562950743,"start-est":0.38804628907376815,"status":"eq-target","target":0.237,"target-prog":"(+ (+ d (+ c (+ a b))) e)","time":8494.39892578125,"vars":["a","b","c","d","e"]},{"bits":128,"conversions":[],"cost-accuracy":"((19392 5.636121511847178) (192 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(exp (+ (log a) (log b)))","link":"444-Expofsumoflogs","name":"Exp of sum of logs","output":"(* a b)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(exp (+ (log a) (log b)))","start":5.636121511847178,"start-est":5.6341642812732085,"status":"eq-target","target":0,"target-prog":"(* a b)","time":4116.51318359375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.016245723035582763) (13248 0.00825) ())","end":0.00825,"end-est":0.00390625,"identifier":"#f","input":"(+ (+ (* x x) (* (* x 2.0) y)) (* y y))","link":"445-ExamplesBasicsProofTestsf4fromsbv44","name":"Examples.Basics.ProofTests:f4 from sbv-4.4","output":"(fma y y (* x (fma 2.0 y x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x x) (* (* x 2.0) y)) (* y y))","start":0.016245723035582763,"start-est":0.015625,"status":"eq-target","target":0.01650960194963135,"target-prog":"(+ (* x x) (+ (* y y) (* (* x y) 2.0)))","time":4624.65380859375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.026490601562950727) (13248 0.008698120312590145) ())","end":0.008698120312590145,"end-est":0.01171875,"identifier":"#f","input":"(* (+ x y) (+ x y))","link":"446-ExamplesBasicsBasicTestsf3fromsbv44","name":"Examples.Basics.BasicTests:f3 from sbv-4.4","output":"(fma y y (* x (fma y 2.0 x)))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(* (+ x y) (+ x y))","start":0.026490601562950727,"start-est":0.02734375,"status":"eq-target","target":0.01760172264890213,"target-prog":"(+ (* x x) (+ (* y y) (* 2.0 (* y x))))","time":5286.298828125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6592 30.221760840145652) (19968 0.005125) ())","end":0.005125,"end-est":0.00390625,"identifier":"#f","input":"(- 1.0 (cos x))","link":"447-ENASection14MentionedA","name":"ENA, Section 1.4, Mentioned, A","output":"(* x (* x (fma (pow x 4.0) 0.001388888888888889 (fma x (* x -0.041666666666666664) 0.5))))","pre":"(and (<= -0.01 x) (<= x 0.01))","prec":"binary64","preprocess":"()","spec":"(- 1.0 (cos x))","start":30.221760840145652,"start-est":29.82562376746964,"status":"eq-target","target":0.016761842188131013,"target-prog":"(/ (* (sin x) (sin x)) (+ 1.0 (cos x)))","time":11528.27734375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 24.444510212086485) (7488 0.29557312031259014) ())","end":0.29557312031259014,"end-est":0.30078125,"identifier":"#f","input":"(- x (sqrt (- (* x x) eps)))","link":"448-ENASection14Exercise4d","name":"ENA, Section 1.4, Exercise 4d","output":"(/ (+ (- (* x x) (* x x)) eps) (+ x (sqrt (- (* x x) eps))))","pre":"(and (and (<= 0.0 x) (<= x 1000000000.0)) (and (<= -1.0 eps) (<= eps 1.0)))","prec":"binary64","preprocess":"()","spec":"(- x (sqrt (- (* x x) eps)))","start":24.444510212086485,"start-est":24.214644929817577,"status":"eq-target","target":0.29557312031259014,"target-prog":"(/ eps (+ x (sqrt (- (* x x) eps))))","time":7310.6171875,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 30.033796729088557) (13312 0.441912672139329) ())","end":0.441912672139329,"end-est":0.3170817888083678,"identifier":"#f","input":"(/ (- x (sin x)) (tan x))","link":"449-ENASection14Exercise4a","name":"ENA, Section 1.4, Exercise 4a","output":"(* x (fma 0.16666666666666666 x (* -0.06388888888888888 (pow x 3.0))))","pre":"(and (<= -1.0 x) (<= x 1.0))","prec":"binary64","preprocess":"()","spec":"(/ (- x (sin x)) (tan x))","start":30.033796729088557,"start-est":31.807563089933485,"status":"eq-target","target":0.8288043793180473,"target-prog":"(* 0.16666666666666666 (* x x))","time":33227.156494140625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.007436481637041209) (448 0.001) ())","end":0.001,"end-est":0,"identifier":"#f","input":"(- (* a a) (* b b))","link":"450-Differenceofsquares","name":"Difference of squares","output":"(* (+ a b) (- a b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* a a) (* b b))","start":0.007436481637041209,"start-est":0.01171875,"status":"eq-target","target":0.001,"target-prog":"(* (+ a b) (- a b))","time":2961.226318359375,"vars":["a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.017448120312590146) (6720 0.00625) ())","end":0.00625,"end-est":0.00390625,"identifier":"#f","input":"(+ (* x y) (* z (- 1.0 y)))","link":"451-DiagramsTwoDSegmentbezierClipfromdiagramslib1303","name":"Diagrams.TwoD.Segment:bezierClip from diagrams-lib-1.3.0.3","output":"(fma y (- x z) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* x y) (* z (- 1.0 y)))","start":0.017448120312590146,"start-est":0.028601281620653757,"status":"eq-target","target":0.015698120312590144,"target-prog":"(- z (* (- z x) y))","time":4341.97802734375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 10.60707312031259) (8136 0.3868714488113018) ())","end":0.3868714488113018,"end-est":0.10546875,"identifier":"#f","input":"(/ (* x (+ (- y z) 1.0)) z)","link":"452-DiagramsTwoDSegmentBernsteinevaluateBernsteinfromd","name":"Diagrams.TwoD.Segment.Bernstein:evaluateBernstein from diagrams-lib-1.3.0.3","output":"(if (<= (/ (* x (+ (- y z) 1.0)) z) (- INFINITY)) (* x (+ (+ (/ 1.0 z) (/ y z)) -1.0)) (if (<= (/ (* x (+ (- y z) 1.0)) z) 2e+285) (- (/ (fma x y x) z) x) (- (* y (/ x z)) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ (- y z) 1.0)) z)","start":10.60707312031259,"start-est":9.16015625,"status":"eq-target","target":0.39222262713661626,"target-prog":"(if (< x -2.71483106713436e-162) (- (* (+ 1.0 y) (/ x z)) x) (if (< x 3.874108816439546e-197) (* (* x (+ (- y z) 1.0)) (/ 1.0 z)) (- (* (+ 1.0 y) (/ x z)) x)))","time":7474.633056640625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((13504 36.09327270025099) (19648 28.930155142866568) ())","end":28.930155142866568,"end-est":26.788476240091697,"identifier":"#f","input":"(/ (tan (/ x (* y 2.0))) (sin (/ x (* y 2.0))))","link":"453-DiagramsTwoDLayoutCirclePackingapproxRadiusfromdia","name":"Diagrams.TwoD.Layout.CirclePacking:approxRadius from diagrams-contrib-1.3.0.5","output":"(log1p (expm1 (/ 1.0 (cos (/ (* x 0.5) y)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (tan (/ x (* y 2.0))) (sin (/ x (* y 2.0))))","start":36.09327270025099,"start-est":34.53457005012095,"status":"eq-target","target":29.142185663148616,"target-prog":"(if (< y -1.2303690911306994e+114) 1.0 (if (< y -9.102852406811914e-222) (/ (sin (/ x (* y 2.0))) (* (sin (/ x (* y 2.0))) (log (exp (cos (/ x (* y 2.0))))))) 1.0))","time":14909.472900390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 5.4503796835353215) (13376 0.15570580344278626) ())","end":0.15570580344278626,"end-est":0.15300751953688405,"identifier":"#f","input":"(/ (* (- 1.0 x) (- 3.0 x)) (* y 3.0))","link":"454-DiagramsTwoDArcbezierFromSweepQ1fromdiagramslib130","name":"Diagrams.TwoD.Arc:bezierFromSweepQ1 from diagrams-lib-1.3.0.3","output":"(fma (/ x y) (fma x 0.3333333333333333 -1.3333333333333333) (/ 1.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* (- 1.0 x) (- 3.0 x)) (* y 3.0))","start":5.4503796835353215,"start-est":6.41418824639842,"status":"eq-target","target":0.13060620312590146,"target-prog":"(* (/ (- 1.0 x) y) (/ (- 3.0 x) 3.0))","time":5888.607177734375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 31.15082786643515) (14604 15.250766420982442) ())","end":15.250766420982442,"end-est":10.643792986551265,"identifier":"#f","input":"(/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y)))","link":"455-DiagramsTwoDArcarcBetweenfromdiagramslib1303","name":"Diagrams.TwoD.Arc:arcBetween from diagrams-lib-1.3.0.3","output":"(if (<= (* y (* y 4.0)) 1e-106) (fma -8.0 (* (/ y x) (/ y x)) 1.0) (if (<= (* y (* y 4.0)) 2e+96) (/ (fma y (* y -4.0) (* x x)) (fma x x (* y (* y 4.0)))) (if (<= (* y (* y 4.0)) 2e+235) (fma -8.0 (+ (+ 1.0 (pow (/ y x) 2.0)) -1.0) 1.0) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y)))","start":31.15082786643515,"start-est":32.76171875,"status":"gt-target","target":30.875954410525633,"target-prog":"(if (< (/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y))) 0.9743233849626781) (- (/ (* x x) (+ (* x x) (* (* y y) 4.0))) (/ (* (* y y) 4.0) (+ (* x x) (* (* y y) 4.0)))) (- (pow (/ x (sqrt (+ (* x x) (* (* y y) 4.0)))) 2.0) (/ (* (* y y) 4.0) (+ (* x x) (* (* y y) 4.0)))))","time":5382.039794921875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 24.440167670790427) (6656 0.4990787065472257) ())","end":0.4990787065472257,"end-est":0.5318131459842362,"identifier":"#f","input":"(* x (sqrt (- (* y y) (* z z))))","link":"456-DiagramsTwoDApollonianinitialConfigfromdiagramscon","name":"Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, B","output":"(* x (hypot y z))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (sqrt (- (* y y) (* z z))))","start":24.440167670790427,"start-est":27.388738445078967,"status":"eq-target","target":0.43133648208388586,"target-prog":"(if (< y 2.5816096488251695e-278) (- (* x y)) (* x (* (sqrt (+ y z)) (sqrt (- y z)))))","time":6130.4677734375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 28.452011159615218) (832 0.13357312031259017) ())","end":0.13357312031259017,"end-est":0.109375,"identifier":"#f","input":"(/ (- (+ (* x x) (* y y)) (* z z)) (* y 2.0))","link":"457-DiagramsTwoDApollonianinitialConfigfromdiagramscon","name":"Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, A","output":"(* -0.5 (- (/ (- z x) (/ y (+ z x))) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (* x x) (* y y)) (* z z)) (* y 2.0))","start":28.452011159615218,"start-est":28.095253781706372,"status":"eq-target","target":0.15247180468885219,"target-prog":"(- (* y 0.5) (* (* (/ 0.5 y) (+ z x)) (- z x)))","time":11368.09130859375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 19.921030859233202) (26372 16.9810840152925) ())","end":16.9810840152925,"end-est":30.73183582222582,"identifier":"#f","input":"(* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z))))","link":"458-DiagramsTwoDApolloniandescartesfromdiagramscontrib","name":"Diagrams.TwoD.Apollonian:descartes from diagrams-contrib-1.3.0.5","output":"(if (<= x -2.6e-293) (* 2.0 (sqrt (fma x y (* z (+ x y))))) (* 2.0 (hypot (sqrt (* x (+ y z))) (* (sqrt y) (sqrt z)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y z))","spec":"(* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z))))","start":19.921030859233202,"start-est":22.602389184835417,"status":"lt-target","target":11.61290714037212,"target-prog":"(if (< z 7.636950090573675e+176) (* 2.0 (sqrt (+ (* (+ x y) z) (* x y)))) (* (* (+ (* 0.25 (* (* (pow y -0.75) (* (pow z -0.75) x)) (+ y z))) (* (pow z 0.25) (pow y 0.25))) (+ (* 0.25 (* (* (pow y -0.75) (* (pow z -0.75) x)) (+ y z))) (* (pow z 0.25) (pow y 0.25)))) 2.0))","time":15933.896728515625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 22.855326094697844) (14664 0.14637775834805142) ())","end":0.14637775834805142,"end-est":0.0078125,"identifier":"#f","input":"(- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0)))","link":"459-DiagramsTrailsplitAtParamfromdiagramslib1303D","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, D","output":"(if (<= y -17044193038341.664) (+ x (* (/ (+ x -1.0) y) (+ -1.0 (/ 1.0 y)))) (if (<= y 13630.642759286447) (fma (- 1.0 x) (/ y (- -1.0 y)) 1.0) (+ (+ (+ x (/ 1.0 (pow y 3.0))) (- (/ (/ (+ x -1.0) y) y) (/ x (pow y 3.0)))) (/ (- 1.0 x) y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0)))","start":22.855326094697844,"start-est":22.05326767883602,"status":"eq-target","target":0.278013960397578,"target-prog":"(if (< y -3693.8482788297247) (- (/ 1.0 y) (- (/ x y) x)) (if (< y 6799310503.41891) (- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0))) (- (/ 1.0 y) (- (/ x y) x))))","time":8605.807861328125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 8.182125) (13248 0.03677124062518029) ())","end":0.03677124062518029,"end-est":0.0078125,"identifier":"#f","input":"(/ (* x y) (+ y 1.0))","link":"460-DiagramsTrailsplitAtParamfromdiagramslib1303B","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, B","output":"(* x (expm1 (log1p (/ y (+ y 1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x y) (+ y 1.0))","start":8.182125,"start-est":8.0546875,"status":"eq-target","target":0.03658759969044097,"target-prog":"(if (< y -3693.8482788297247) (- (/ x (* y y)) (- (/ x y) x)) (if (< y 6799310503.41891) (/ (* x y) (+ y 1.0)) (- (/ x (* y y)) (- (/ x y) x))))","time":3705.269775390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 7.509991600845941) (14728 0.3925175654848002) ())","end":0.3925175654848002,"end-est":0.037441259768442016,"identifier":"#f","input":"(/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0))","link":"461-DiagramsTrailsplitAtParamfromdiagramslib1303A","name":"Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, A","output":"(if (<= x -0.10795066279260812) (+ (/ (- x (pow (/ (- (* t z) x) x) -1.0)) (+ x 1.0)) (/ y (* (- (* t z) x) (/ (+ x 1.0) z)))) (if (<= x 1.0283918829686594e-78) (+ (/ (- x (/ x (- (* t z) x))) (+ x 1.0)) (/ y (fma x (+ t (/ -1.0 z)) t))) (fma (/ y (- (* t z) x)) (/ z (+ x 1.0)) (/ (- x (pow (/ (- (* t z) x) x) -1.0)) (+ x 1.0)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0))","start":7.509991600845941,"start-est":7.00092580008183,"status":"eq-target","target":0.3494693609377705,"target-prog":"(/ (+ x (- (/ y (- t (/ x z))) (/ x (- (* t z) x)))) (+ x 1.0))","time":12848.510009765625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 6.402233385814737) (20360 1.4084512656637656) ())","end":1.4084512656637656,"end-est":0.4247628160920043,"identifier":"#f","input":"(* 2.0 (- (+ (* x y) (* z t)) (* (* (+ a (* b c)) c) i)))","link":"462-DiagramsThreeDShapesfrustumfromdiagramslib1303A","name":"Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, A","output":"(if (<= i -1.2346218592112333e-163) (* 2.0 (fma z t (fma (fma b c a) (- (* i c)) (* x y)))) (if (<= i 6.627614071967799e-213) (* 2.0 (fma (- (* i (- a)) (* c (* i b))) c (fma y x (* z t)))) (* 2.0 (fma z t (fma (fma b c a) (- (* i c)) (* x y))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 2.0 (- (+ (* x y) (* z t)) (* (* (+ a (* b c)) c) i)))","start":6.402233385814737,"start-est":8.298672130194468,"status":"eq-target","target":1.7726756880173036,"target-prog":"(* 2.0 (- (+ (* x y) (* z t)) (* (+ a (* b c)) (* c i))))","time":15369.556640625,"vars":["x","y","z","t","a","b","c","i"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.2527510383300339) (6848 0.14366524101186093) ())","end":0.14366524101186093,"end-est":0.16015625,"identifier":"#f","input":"(* (* 3.0 (- 2.0 (* x 3.0))) x)","link":"463-DiagramsTangentcatParamfromdiagramslib1303E","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, E","output":"(fma 6.0 x (* -9.0 (* x x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* 3.0 (- 2.0 (* x 3.0))) x)","start":0.2527510383300339,"start-est":0.29134750976844204,"status":"eq-target","target":0.2089011816707036,"target-prog":"(- (* 6.0 x) (* 9.0 (* x x)))","time":5338.99267578125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.14080676718957336) (13120 0.092) ())","end":0.092,"end-est":0.08984375,"identifier":"#f","input":"(* 3.0 (+ (- (* (* x 3.0) x) (* x 4.0)) 1.0))","link":"464-DiagramsTangentcatParamfromdiagramslib1303D","name":"Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, D","output":"(fma x (fma x 9.0 -12.0) 3.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 3.0 (+ (- (* (* x 3.0) x) (* x 4.0)) 1.0))","start":0.14080676718957336,"start-est":0.17025375976844204,"status":"eq-target","target":0.09373836132445107,"target-prog":"(+ 3.0 (- (* (* 9.0 x) x) (* 12.0 x)))","time":6451.70166015625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.006125) (6656 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(- x (* y z))","link":"465-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, C","output":"(fma y (- z) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- x (* y z))","start":0.006125,"start-est":0.00390625,"status":"eq-target","target":0.011542481250360576,"target-prog":"(/ (+ x (* y z)) (/ (+ x (* y z)) (- x (* y z))))","time":3843.1357421875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 2.6946857884244277) (7560 0.36797917551530906) ())","end":0.36797917551530906,"end-est":0.0859375,"identifier":"#f","input":"(/ x (- y (* z t)))","link":"466-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, B","output":"(if (<= (* z t) (- INFINITY)) (/ (/ (- x) t) z) (if (<= (* z t) 1e+304) (/ x (fma t (- z) y)) (pow (- (/ y x) (/ z (/ x t))) -1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (- y (* z t)))","start":2.6946857884244277,"start-est":2.6779638379326975,"status":"gt-target","target":1.6785472883078565,"target-prog":"(if (< x -1.618195973607049e+50) (/ 1.0 (- (/ y x) (* (/ z x) t))) (if (< x 2.1378306434876444e+131) (/ x (- y (* z t))) (/ 1.0 (- (/ y x) (* (/ z x) t)))))","time":8044.015380859375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 10.269536383278604) (15692 4.455271276401697) ())","end":4.455271276401697,"end-est":2.0721478578340045,"identifier":"#f","input":"(/ (- x (* y z)) (- t (* a z)))","link":"467-DiagramsSolveTridiagonalsolveTriDiagonalfromdiagra","name":"Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, A","output":"(if (<= (/ (- x (* y z)) (- t (* z a))) -5e-296) (- (* y (/ z (- (* z a) t))) (/ x (- (* z a) t))) (if (<= (/ (- x (* y z)) (- t (* z a))) 0.0) (/ (- y (/ x z)) a) (if (<= (/ (- x (* y z)) (- t (* z a))) 4e+284) (/ (fma y z (- x)) (fma z a (- t))) (/ (- y (/ x z)) a))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x (* y z)) (- t (* a z)))","start":10.269536383278604,"start-est":8.170298388678905,"status":"lt-target","target":1.6779874626057907,"target-prog":"(if (< z -32113435955957344.0) (- (/ x (- t (* a z))) (/ y (- (/ t z) a))) (if (< z 3.5139522372978296e-86) (* (- x (* y z)) (/ 1.0 (- t (* a z)))) (- (/ x (- t (* a z))) (/ y (- (/ t z) a)))))","time":10609.768310546875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 16.309353804883877) (22920 4.831249023928239) ())","end":4.831249023928239,"end-est":2.9311539037091108,"identifier":"#f","input":"(/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t)))","link":"468-DiagramsSolveTridiagonalsolveCyclicTriDiagonalfrom","name":"Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, B","output":"(if (<= (/ (+ x (/ (* y z) t)) (+ (/ (* y b) t) (+ a 1.0))) -5e-112) (+ (* z (/ y (fma y b (fma t a t)))) (/ x (+ (/ (* y b) t) (+ a 1.0)))) (if (<= (/ (+ x (/ (* y z) t)) (+ (/ (* y b) t) (+ a 1.0))) 1e-6) (+ (/ (* y z) (fma t (+ a 1.0) (* y b))) (pow (/ (+ a (fma b (/ y t) 1.0)) x) -1.0)) (if (<= (/ (+ x (/ (* y z) t)) (+ (/ (* y b) t) (+ a 1.0))) INFINITY) (fma (/ y t) (/ z (+ 1.0 (+ a (* b (/ y t))))) (/ x (+ 1.0 (+ a (* b (/ y t)))))) (/ (+ z (/ x (/ y t))) b))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t)))","start":16.309353804883877,"start-est":17.14710403370158,"status":"gt-target","target":12.960797275426314,"target-prog":"(if (< t -1.3659085366310088e-271) (* 1.0 (* (+ x (* (/ y t) z)) (/ 1.0 (+ (+ a 1.0) (* (/ y t) b))))) (if (< t 3.036967103737246e-130) (/ z b) (* 1.0 (* (+ x (* (/ y t) z)) (/ 1.0 (+ (+ a 1.0) (* (/ y t) b)))))))","time":12522.556396484375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 6.082945619358996) (1100 2.8330084471579196) ())","end":2.8330084471579196,"end-est":0.936317476469524,"identifier":"#f","input":"(/ (* x y) z)","link":"469-DiagramsSolveTridiagonalsolveCyclicTriDiagonalfrom","name":"Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, A","output":"(if (<= (* x y) (- INFINITY)) (/ y (/ z x)) (if (<= (* x y) -2e-69) (/ (* x y) z) (if (<= (* x y) 2e-118) (/ y (/ z x)) (/ (* x y) z))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (* x y) z)","start":6.082945619358996,"start-est":5.757409516054081,"status":"gt-target","target":6.390415819960164,"target-prog":"(if (< z -4.262230790519429e-138) (/ (* x y) z) (if (< z 1.7042130660650472e-164) (/ x (/ z y)) (* (/ x z) y)))","time":5607.990966796875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.006073120312590144) (13248 0.005948120312590144) ())","end":0.005948120312590144,"end-est":0.00390625,"identifier":"#f","input":"(+ (- (* (/ 1.0 8.0) x) (/ (* y z) 2.0)) t)","link":"470-DiagramsSolvePolynomialquartFormfromdiagramssolve0","name":"Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, B","output":"(fma 0.125 x (fma (* y z) -0.5 t))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* (/ 1.0 8.0) x) (/ (* y z) 2.0)) t)","start":0.006073120312590144,"start-est":0.00390625,"status":"eq-target","target":0.006198120312590144,"target-prog":"(- (+ (/ x 8.0) t) (* (/ z 2.0) y))","time":5599.565673828125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 20.398466594659705) (19776 16.955339362083635) ())","end":16.955339362083635,"end-est":18.508912176028637,"identifier":"#f","input":"(- (* (* 2.0 (sqrt x)) (cos (- y (/ (* z t) 3.0)))) (/ a (* b 3.0)))","link":"471-DiagramsSolvePolynomialcubFormfromdiagramssolve01K","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, K","output":"(fma (sqrt x) (* 2.0 (cos y)) (/ (* a -0.3333333333333333) b))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* 2.0 (sqrt x)) (cos (- y (/ (* z t) 3.0)))) (/ a (* b 3.0)))","start":20.398466594659705,"start-est":21.641987621756734,"status":"gt-target","target":18.545360836300652,"target-prog":"(if (< z -1.3793337487235141e+129) (- (* (* 2.0 (sqrt x)) (cos (- (/ 1.0 y) (/ (/ 0.3333333333333333 z) t)))) (/ (/ a 3.0) b)) (if (< z 3.516290613555987e+106) (- (* (* (sqrt x) 2.0) (cos (- y (* (/ t 3.0) z)))) (/ (/ a 3.0) b)) (- (* (cos (- y (/ (/ 0.3333333333333333 z) t))) (* 2.0 (sqrt x))) (/ (/ a b) 3.0))))","time":20855.970458984375,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((1216 20.114419655812004) (23948 5.256971469227649) ())","end":5.256971469227649,"end-est":2.347018747968347,"identifier":"#f","input":"(/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c))","link":"472-DiagramsSolvePolynomialcubFormfromdiagramssolve01J","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, J","output":"(if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) -5e+270) (fma 9.0 (/ y (/ z (/ x c))) (fma -4.0 (/ t (/ c a)) (* (/ 1.0 z) (/ b c)))) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) -1e-267) (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 2e+34) (* (fma t (* a -4.0) (/ (fma x (* 9.0 y) b) z)) (pow c -1.0)) (if (<= (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 2e+293) (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) (fma 9.0 (/ y (/ (* z c) x)) (fma -4.0 (/ t (/ c a)) (* (/ b z) (/ 1.0 c))))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort t a))","spec":"(/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c))","start":20.114419655812004,"start-est":16.49450577230059,"status":"gt-target","target":14.648130786469396,"target-prog":"(if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) -1.100156740804105e-171) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 0.0) (/ (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) z) c) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1.1708877911747488e-53) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 2.876823679546137e+130) (- (+ (* (* 9.0 (/ y c)) (/ x z)) (/ b (* c z))) (* 4.0 (/ (* a t) c))) (if (< (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)) 1.3838515042456319e+158) (/ (+ (- (* (* x 9.0) y) (* (* z 4.0) (* t a))) b) (* z c)) (- (+ (* 9.0 (* (/ y (* c z)) x)) (/ b (* c z))) (* 4.0 (/ (* a t) c))))))))","time":14409.728271484375,"vars":["x","y","z","t","a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 7.837394691484343) (8520 0.9131108253237358) ())","end":0.9131108253237358,"end-est":0.9144453804747702,"identifier":"#f","input":"(/ (- (* x y) (* (* z 9.0) t)) (* a 2.0))","link":"473-DiagramsSolvePolynomialcubFormfromdiagramssolve01I","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, I","output":"(if (<= (+ (* x y) (* t (* z -9.0))) (- INFINITY)) (* 0.5 (fma -9.0 (* t (/ z a)) (/ y (/ a x)))) (if (<= (+ (* x y) (* t (* z -9.0))) 1e+209) (* 0.5 (+ (* -9.0 (/ (* z t) a)) (/ (* x y) a))) (* 0.5 (fma -9.0 (* t (/ z a)) (/ y (/ a x))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (- (* x y) (* (* z 9.0) t)) (* a 2.0))","start":7.837394691484343,"start-est":8.644292288893853,"status":"gt-target","target":5.6312562780972195,"target-prog":"(if (< a -2.090464557976709e+86) (- (* 0.5 (/ (* y x) a)) (* 4.5 (/ t (/ a z)))) (if (< a 2.144030707833976e+99) (/ (- (* x y) (* z (* 9.0 t))) (* a 2.0)) (- (* (/ y a) (* x 0.5)) (* (/ t a) (* z 4.5)))))","time":11193.078125,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 3.4861877563505654) (79104 2.067421986530117) ())","end":2.067421986530117,"end-est":1.1962464928074334,"identifier":"#f","input":"(+ (- x (/ y (* z 3.0))) (/ t (* (* z 3.0) y)))","link":"474-DiagramsSolvePolynomialcubFormfromdiagramssolve01H","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, H","output":"(fma -0.3333333333333333 (+ (fma 1.0 (/ y z) (* (/ t (pow (cbrt z) 2.0)) (/ (/ -1.0 y) (cbrt z)))) (fma (/ (/ -1.0 y) (cbrt z)) (/ t (pow (cbrt z) 2.0)) (* (/ (/ 1.0 y) (cbrt z)) (/ t (pow (cbrt z) 2.0))))) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- x (/ y (* z 3.0))) (/ t (* (* z 3.0) y)))","start":3.4861877563505654,"start-est":3.2520985108912908,"status":"eq-target","target":1.68305145795681,"target-prog":"(+ (- x (/ y (* z 3.0))) (/ (/ t (* z 3.0)) y))","time":28323.076416015625,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0) (320 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* (/ 1.0 2.0) (+ x y))","link":"475-DiagramsSolvePolynomialcubFormfromdiagramssolve01G","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, G","output":"(* 0.5 (+ x y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (/ 1.0 2.0) (+ x y))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"(/ (+ x y) 2.0)","time":2125.235107421875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1984 5.368427789584376) (5320 0.8665541352221747) ())","end":0.8665541352221747,"end-est":0.8729737688771024,"identifier":"#f","input":"(- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k))","link":"476-DiagramsSolvePolynomialcubFormfromdiagramssolve01E","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, E","output":"(if (<= (+ (+ (+ (* (* (* (* x 18.0) y) z) t) (* t (* a -4.0))) (* b c)) (* i (* x -4.0))) (- INFINITY)) (+ (+ (+ (* b c) (+ (* (* x 18.0) (* y (* z t))) (* t (* a -4.0)))) (* i (* x -4.0))) (* k (* j -27.0))) (if (<= (+ (+ (+ (* (* (* (* x 18.0) y) z) t) (* t (* a -4.0))) (* b c)) (* i (* x -4.0))) 2e+304) (+ (+ (+ (+ (* (* (* (* x 18.0) y) z) t) (* t (* a -4.0))) (* b c)) (* i (* x -4.0))) (* k (* j -27.0))) (+ (+ (+ (* b c) (+ (* 18.0 (* y (* z (* x t)))) (* t (* a -4.0)))) (* (* x i) -4.0)) (* k (* j -27.0)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort y z) (sort j k))","spec":"(- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k))","start":5.368427789584376,"start-est":4.127285009768443,"status":"eq-target","target":1.7230803492812519,"target-prog":"(if (< t -1.6210815397541398e-69) (- (- (* (* 18.0 t) (* (* x y) z)) (* (+ (* a t) (* i x)) 4.0)) (- (* (* k j) 27.0) (* c b))) (if (< t 165.68027943805222) (+ (- (* (* 18.0 y) (* x (* z t))) (* (+ (* a t) (* i x)) 4.0)) (- (* c b) (* 27.0 (* k j)))) (- (- (* (* 18.0 t) (* (* x y) z)) (* (+ (* a t) (* i x)) 4.0)) (- (* (* k j) 27.0) (* c b)))))","time":20489.636962890625,"vars":["x","y","z","t","a","b","c","i","j","k"]},{"bits":128,"conversions":[],"cost-accuracy":"((13888 1.2626165446443396) (26432 0.23691226534801318) ())","end":0.23691226534801318,"end-est":0.5564741440588771,"identifier":"#f","input":"(* (/ 1.0 3.0) (acos (* (/ (* 3.0 (/ x (* y 27.0))) (* z 2.0)) (sqrt t))))","link":"477-DiagramsSolvePolynomialcubFormfromdiagramssolve01D","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, D","output":"(+ (exp (log1p (* 0.3333333333333333 (acos (/ (sqrt t) (* (/ z x) (* 18.0 y))))))) -1.0)","pre":"TRUE","prec":"binary64","preprocess":"((sort y z))","spec":"(* (/ 1.0 3.0) (acos (* (/ (* 3.0 (/ x (* y 27.0))) (* z 2.0)) (sqrt t))))","start":1.2626165446443396,"start-est":0.9765625,"status":"gt-target","target":1.3177930578819887,"target-prog":"(/ (acos (* (/ (/ x 27.0) (* y z)) (/ (sqrt t) (/ 2.0 3.0)))) 3.0)","time":21936.61474609375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.2653238760296475) (320 0.2653238760296475) ())","end":0.2653238760296475,"end-est":0.20703125,"identifier":"#f","input":"(/ x (* y 3.0))","link":"478-DiagramsSolvePolynomialcubFormfromdiagramssolve01C","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, C","output":"(/ x (* y 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ x (* y 3.0))","start":0.2653238760296475,"start-est":0.20703125,"status":"eq-target","target":0.2375,"target-prog":"(/ (/ x y) 3.0)","time":3107.75439453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.14494812031259013) (448 0.17782312031259012) ())","end":0.17782312031259012,"end-est":0.12890625,"identifier":"#f","input":"(- (* (* x 3.0) y) z)","link":"479-DiagramsSolvePolynomialcubFormfromdiagramssolve01B","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, B","output":"(- (* x (* 3.0 y)) z)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (* (* x 3.0) y) z)","start":0.14494812031259013,"start-est":0.1484375,"status":"eq-target","target":0.17782312031259012,"target-prog":"(- (* x (* 3.0 y)) z)","time":4975.7685546875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 2.902192710961414) (7492 0.6811165612537751) ())","end":0.6811165612537751,"end-est":4.167882290810075,"identifier":"#f","input":"(+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* (* a 27.0) b))","link":"480-DiagramsSolvePolynomialcubFormfromdiagramssolve01A","name":"Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, A","output":"(if (<= z -5.554970015551966e-176) (+ (fma (* y -9.0) (* z t) (+ x x)) (* (* a 27.0) b)) (+ (* (* a 27.0) b) (+ (* x 2.0) (* t (* y (* z -9.0))))))","pre":"TRUE","prec":"binary64","preprocess":"((sort y z t) (sort a b))","spec":"(+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* (* a 27.0) b))","start":2.902192710961414,"start-est":4.92578125,"status":"gt-target","target":3.3749427131057415,"target-prog":"(if (< y 7.590524218811189e-161) (+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* a (* 27.0 b))) (+ (- (* x 2.0) (* 9.0 (* y (* t z)))) (* (* a 27.0) b)))","time":14319.087158203125,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.26745300781475356) (448 0.23796240625180284) ())","end":0.23796240625180284,"end-est":0.20769501953688402,"identifier":"#f","input":"(* (* (* x 3.0) y) y)","link":"481-DiagramsSegmentcatParamfromdiagramslib1303B","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, B","output":"(* (* y x) (* y 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* x 3.0) y) y)","start":0.26745300781475356,"start-est":0.26009750976844204,"status":"eq-target","target":0.24722424843993376,"target-prog":"(* (* x (* 3.0 y)) y)","time":4600.6845703125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 10.335360870134059) (448 0.2419954890651141) ())","end":0.2419954890651141,"end-est":0.21550751953688402,"identifier":"#f","input":"(* (* (* x 3.0) x) y)","link":"482-DiagramsSegmentcatParamfromdiagramslib1303A","name":"Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, A","output":"(* (* y x) (* x 3.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (* x 3.0) x) y)","start":10.335360870134059,"start-est":8.48386268605504,"status":"eq-target","target":0.2419954890651141,"target-prog":"(* (* x 3.0) (* x y))","time":4597.371826171875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.014125) (6720 0.004875) ())","end":0.004875,"end-est":0.0078125,"identifier":"#f","input":"(+ (* (- 1.0 x) y) (* x z))","link":"483-DiagramsColorHSVlerpfromdiagramscontrib1305","name":"Diagrams.Color.HSV:lerp  from diagrams-contrib-1.3.0.5","output":"(fma x (- z y) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (* (- 1.0 x) y) (* x z))","start":0.014125,"start-est":0.02734375,"status":"eq-target","target":0.012,"target-prog":"(- y (* x (- y z)))","time":4893.3134765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 10.251771240625182) (6848 0.04136336132445107) ())","end":0.04136336132445107,"end-est":0.0390625,"identifier":"#f","input":"(/ (+ x (* y (- z x))) z)","link":"484-DiagramsBackendRasterificrasterificRadialGradientf","name":"Diagrams.Backend.Rasterific:rasterificRadialGradient from diagrams-rasterific-1.3.1.3","output":"(fma (- 1.0 y) (/ x z) y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x (* y (- z x))) z)","start":10.251771240625182,"start-est":9.83203125,"status":"eq-target","target":0.04536336132445107,"target-prog":"(- (+ y (/ x z)) (/ y (/ z x)))","time":8437.2490234375,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 12.996125487769174) (7044 2.542629043598884) ())","end":2.542629043598884,"end-est":1.673047281134937,"identifier":"#f","input":"(/ (* x (- y z)) y)","link":"485-DiagramsBackendCairoInternalsetTexturefromdiagrams","name":"Diagrams.Backend.Cairo.Internal:setTexture from diagrams-cairo-1.3.0.3","output":"(if (<= z 5.502821559185783e-21) (- x (pow (/ (/ y z) x) -1.0)) (- x (* z (/ x y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (- y z)) y)","start":12.996125487769174,"start-est":10.02188919949729,"status":"eq-target","target":3.5282827763490805,"target-prog":"(if (< z -2.060202331921739e+104) (- x (/ (* z x) y)) (if (< z 1.6939766013828526e+213) (/ x (/ y (- y z))) (* (- y z) (/ x y))))","time":9260.65283203125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.4015731203125902) (448 0.16066748125036057) ())","end":0.16066748125036057,"end-est":0.16015625,"identifier":"#f","input":"(/ (* x 100.0) (+ x y))","link":"486-DevelopmentShakeProgressmessagefromshake0155","name":"Development.Shake.Progress:message from shake-0.15.5","output":"(* x (/ 100.0 (+ x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x 100.0) (+ x y))","start":0.4015731203125902,"start-est":0.41796875,"status":"eq-target","target":0.16066748125036057,"target-prog":"(* (/ x 1.0) (/ 100.0 (+ x y)))","time":5257.975830078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 23.879225551553336) (14536 0.5769370549820325) ())","end":0.5769370549820325,"end-est":0.5859089186478891,"identifier":"#f","input":"(/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y))))","link":"487-DevelopmentShakeProgressdecayfromshake0155","name":"Development.Shake.Progress:decay from shake-0.15.5","output":"(if (<= z -2611851293931091000.0) (+ (/ (- t a) (- b y)) (/ (* (/ y (- b y)) (+ x (/ (- a t) (- b y)))) z)) (if (<= z 3535775401835.851) (+ (* x (/ y (fma z (- b y) y))) (/ 1.0 (/ (fma z (- b y) y) (* z (- t a))))) (+ (/ (- t a) (- b y)) (/ (* (/ y (- b y)) (+ x (/ (- a t) (- b y)))) z))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y))))","start":23.879225551553336,"start-est":27.918004476575163,"status":"gt-target","target":18.260330554313825,"target-prog":"(- (/ (+ (* z t) (* y x)) (+ y (* z (- b y)))) (/ a (+ (- b y) (/ y z))))","time":19727.39794921875,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0) (64 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* 1000000.0 (- x x))","link":"488-DevelopmentShakeProfilegenerateTracefromshake0155","name":"Development.Shake.Profile:generateTrace from shake-0.15.5","output":"0.0","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 1000000.0 (- x x))","start":0,"start-est":0,"status":"eq-target","target":0,"target-prog":"0.0","time":1544.78271484375,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.18827124062518028) (13376 0.13508272226222148) ())","end":0.13508272226222148,"end-est":0.12109375,"identifier":"#f","input":"(* (* x x) (- 3.0 (* x 2.0)))","link":"489-DataSplineKeyinterpolateKeysfromsmoothie0402","name":"Data.Spline.Key:interpolateKeys from smoothie-0.4.0.2","output":"(+ (* 3.0 (pow x 2.0)) (* -2.0 (pow x 3.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x x) (- 3.0 (* x 2.0)))","start":0.18827124062518028,"start-est":0.171875,"status":"eq-target","target":0.17207312031259014,"target-prog":"(* x (* x (- 3.0 (* x 2.0))))","time":5373.274169921875,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.654457342829372) (7556 0.8973202515864972) ())","end":0.8973202515864972,"end-est":0.7153838742194227,"identifier":"#f","input":"(/ x (* (- y z) (- t z)))","link":"490-DataRandomDistributionTriangulartriangularCDFfromr","name":"Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, B","output":"(if (<= (* (- y z) (- t z)) -2e+225) (pow (* (/ (- z y) x) (- z t)) -1.0) (if (<= (* (- y z) (- t z)) 2e+214) (/ x (* (- z y) (- z t))) (/ (/ x (- z y)) (- z t))))","pre":"TRUE","prec":"binary64","preprocess":"((sort y t))","spec":"(/ x (* (- y z) (- t z)))","start":7.654457342829372,"start-est":10.389617560054827,"status":"gt-target","target":8.43206281420437,"target-prog":"(if (< (/ x (* (- y z) (- t z))) 0.0) (/ (/ x (- y z)) (- t z)) (* x (/ 1.0 (* (- y z) (- t z)))))","time":12167.757568359375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.04612358974046882) (6720 0.009875) ())","end":0.009875,"end-est":0,"identifier":"#f","input":"(/ (+ x y) (+ y y))","link":"491-DataRandomDistributionTccdffromrandomfu0262","name":"Data.Random.Distribution.T:$ccdf from random-fu-0.2.6.2","output":"(fma 0.5 (/ x y) 0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ x y) (+ y y))","start":0.04612358974046882,"start-est":0.015625,"status":"eq-target","target":0.009875,"target-prog":"(+ (* 0.5 (/ x y)) 0.5)","time":4178.337890625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.012823120312590145) (6720 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(+ (+ (* x x) y) y)","link":"492-DataRandomDistributionNormalnormalTailfromrandomfu","name":"Data.Random.Distribution.Normal:normalTail from random-fu-0.2.6.2","output":"(fma x x (* 2.0 y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (+ (* x x) y) y)","start":0.012823120312590145,"start-est":0.015625,"status":"eq-target","target":0.00625,"target-prog":"(+ (+ y y) (* x x))","time":3471.268310546875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6848 31.08033947042407) (6528 0.002125) ())","end":0.002125,"end-est":0,"identifier":"#f","input":"(sqrt (+ (* x x) (* y y)))","link":"493-DataOctreeInternaloctantDistancefromOctree0542","name":"Data.Octree.Internal:octantDistance  from Octree-0.5.4.2","output":"(hypot x y)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (+ (* x x) (* y y)))","start":31.08033947042407,"start-est":31.815164593812035,"status":"gt-target","target":17.665335324077653,"target-prog":"(if (< x -1.1236950826599826e+145) (- x) (if (< x 1.116557621183362e+93) (sqrt (+ (* x x) (* y y))) x))","time":3440.123779296875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 0.0245756672417763) (13056 0.016624869245794784) ())","end":0.016624869245794784,"end-est":0.016882531620653757,"identifier":"#f","input":"(* x (exp (* y y)))","link":"494-DataNumberErfdmerfcxfromerf2000","name":"Data.Number.Erf:$dmerfcx from erf-2.0.0.0","output":"(* x (pow (exp y) y))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (exp (* y y)))","start":0.0245756672417763,"start-est":0.03668873993272954,"status":"eq-target","target":0.016624869245794784,"target-prog":"(* x (pow (exp y) y))","time":6501.946533203125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((13760 0.3091537557754818) (26368 0.303643207869719) ())","end":0.303643207869719,"end-est":0.25228500976844204,"identifier":"#f","input":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (exp (/ (* t t) 2.0)))","link":"495-DataNumberErfcinvnormcdffromerf2000A","name":"Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, A","output":"(* (- (* x 0.5) y) (* (sqrt (* z 2.0)) (pow (sqrt (exp t)) t)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (exp (/ (* t t) 2.0)))","start":0.3091537557754818,"start-est":0.258476269536884,"status":"eq-target","target":0.31430961011099995,"target-prog":"(* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (pow (exp 1.0) (/ (* t t) 2.0)))","time":19583.913818359375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.027823120312590145) (13376 0.014448120312590145) ())","end":0.014448120312590145,"end-est":0.01171875,"identifier":"#f","input":"(+ x (* (- y z) (- t x)))","link":"496-DataMetricsSnapshotquantilefrommetrics0302","name":"Data.Metrics.Snapshot:quantile from metrics-0.3.0.2","output":"(fma x (- z y) (fma (- y z) t x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (- y z) (- t x)))","start":0.027823120312590145,"start-est":0.0234375,"status":"eq-target","target":0.027061481637041206,"target-prog":"(+ x (+ (* t (- y z)) (* (- x) (- y z))))","time":12795.4990234375,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((6720 15.203776666190198) (13380 0.644480307568874) ())","end":0.644480307568874,"end-est":0.7062773559012437,"identifier":"#f","input":"(* x (log (/ x y)))","link":"497-DataHyperLogLogTypesizefromhyperloglog034B","name":"Data.HyperLogLog.Type:size from hyperloglog-0.3.4, B","output":"(if (<= y 0.0) (* x (- (log (- x)) (log (- y)))) (* x (- (log x) (log y))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (log (/ x y)))","start":15.203776666190198,"start-est":14.508686291601665,"status":"gt-target","target":8.096811794166515,"target-prog":"(if (< y 1.2973149052617803e-303) (* x (log (/ x y))) (/ x (/ 1.0 (- (log x) (log y)))))","time":9546.25439453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((6976 44.67526084711936) (41548 1.9234231570749678) ())","end":1.9234231570749678,"end-est":0.6536941917308755,"identifier":"#f","input":"(* (* x 1.0) (log (- 1.0 (/ y x))))","link":"498-DataHyperLogLogTypesizefromhyperloglog034A","name":"Data.HyperLogLog.Type:size from hyperloglog-0.3.4, A","output":"(if (<= (* x (log (- 1.0 (/ y x)))) (- INFINITY)) (* x (- (log (/ -1.0 x)) (log (/ 1.0 y)))) (if (<= (* x (log (- 1.0 (/ y x)))) -2e-289) (* x (log1p (/ y (- x)))) (if (<= (* x (log (- 1.0 (/ y x)))) 2e-290) (- (fma -0.5 (* y (/ y x)) (+ (* -0.3333333333333333 (/ y (pow (/ x y) 2.0))) (* (* y -0.25) (pow (/ x y) -3.0)))) y) (* x (- (log (- y)) (log x))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x 1.0) (log (- 1.0 (/ y x))))","start":44.67526084711936,"start-est":44.57825475628847,"status":"gt-target","target":44.67526084711936,"target-prog":"(* x (log (- 1.0 (/ y x))))","time":12843.16064453125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((1088 9.413789641240799) (960 0.08110091936525719) ())","end":0.08110091936525719,"end-est":0.0625,"identifier":"#f","input":"(+ (/ x y) (/ (+ 2.0 (* (* z 2.0) (- 1.0 t))) (* t z)))","link":"499-DataHashTableSTBasiccomputeOverheadfromhashtables1","name":"Data.HashTable.ST.Basic:computeOverhead from hashtables-1.2.0.2","output":"(+ (/ x y) (+ (+ (/ 2.0 t) -2.0) (/ (/ 2.0 t) z)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ x y) (/ (+ 2.0 (* (* z 2.0) (- 1.0 t))) (* t z)))","start":9.413789641240799,"start-est":8.34375,"status":"eq-target","target":0.10879903967784735,"target-prog":"(- (/ (+ (/ 2.0 z) 2.0) t) (- 2.0 (/ x y)))","time":12002.16455078125,"vars":["x","y","z","t"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 3.725) (14472 0.0815) ())","end":0.0815,"end-est":0.0390625,"identifier":"#f","input":"(* x (- 1.0 (* (- 1.0 y) z)))","link":"500-DataColourRGBSpaceHSVhsvfromcolour233J","name":"Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, J","output":"(if (<= (* x (+ 1.0 (* z (+ y -1.0)))) -1.8e+229) (fma (* x z) (+ y -1.0) x) (if (<= (* x (+ 1.0 (* z (+ y -1.0)))) 4e+29) (fma x (fma y z (- z)) x) (fma (* x z) (+ y -1.0) x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (- 1.0 (* (- 1.0 y) z)))","start":3.725,"start-est":2.30859375,"status":"eq-target","target":0.276375,"target-prog":"(if (< (* x (- 1.0 (* (- 1.0 y) z))) -1.618195973607049e+50) (+ x (* (- 1.0 y) (* (- z) x))) (if (< (* x (- 1.0 (* (- 1.0 y) z))) 3.892237649663903e+134) (- (* (* x y) z) (- (* x z) x)) (+ x (* (- 1.0 y) (* (- z) x)))))","time":7710.34765625,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.2951462406251803) (13248 0.28694812031259015) ())","end":0.28694812031259015,"end-est":0.12109375,"identifier":"#f","input":"(+ x (* (* (- y x) 6.0) z))","link":"501-DataColourRGBSpaceHSLhslfromcolour233E","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, E","output":"(fma (fma 6.0 y (* -6.0 x)) z x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (* (* (- y x) 6.0) z))","start":0.2951462406251803,"start-est":0.13671875,"status":"eq-target","target":0.1758962406251803,"target-prog":"(- x (* (* 6.0 z) (- x y)))","time":7679.389892578125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.009625) (6592 0) ())","end":0,"end-est":0,"identifier":"#f","input":"(* x (+ y 1.0))","link":"502-DataColourRGBSpaceHSLhslfromcolour233B","name":"Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, B","output":"(fma x y x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* x (+ y 1.0))","start":0.009625,"start-est":0.01171875,"status":"eq-target","target":0.008646240625180289,"target-prog":"(+ x (* x y))","time":2561.69775390625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((320 0.0165) (320 0.002) ())","end":0.002,"end-est":0,"identifier":"#f","input":"(/ (- x y) x)","link":"503-DataColourRGBhslsvfromcolour233E","name":"Data.Colour.RGB:hslsv from colour-2.3.3, E","output":"(- 1.0 (/ y x))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) x)","start":0.0165,"start-est":0.00390625,"status":"eq-target","target":0.002,"target-prog":"(- 1.0 (/ y x))","time":3388.521484375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 0.027804323438491593) (704 0.02293648163704121) ())","end":0.02293648163704121,"end-est":0.01171875,"identifier":"#f","input":"(/ (- x y) (+ x y))","link":"504-DataColourRGBhslsvfromcolour233D","name":"Data.Colour.RGB:hslsv from colour-2.3.3, D","output":"(- (/ x (+ x y)) (/ y (+ x y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (+ x y))","start":0.027804323438491593,"start-est":0.01171875,"status":"eq-target","target":0.02293648163704121,"target-prog":"(- (/ x (+ x y)) (/ y (+ x y)))","time":6337.32958984375,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.021740601562950726) (960 0.019896240625180292) ())","end":0.019896240625180292,"end-est":0.029628759768442016,"identifier":"#f","input":"(/ (- x y) (- 2.0 (+ x y)))","link":"505-DataColourRGBhslsvfromcolour233C","name":"Data.Colour.RGB:hslsv from colour-2.3.3, C","output":"(- (/ x (- (- 2.0 x) y)) (/ y (- (- 2.0 x) y)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- x y) (- 2.0 (+ x y)))","start":0.021740601562950726,"start-est":0.03125,"status":"eq-target","target":0.019896240625180292,"target-prog":"(- (/ x (- 2.0 (+ x y))) (/ y (- 2.0 (+ x y))))","time":10841.7138671875,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((832 0.4432924812503606) (7104 0.15144812031259017) ())","end":0.15144812031259017,"end-est":0.1328125,"identifier":"#f","input":"(+ (/ (* 60.0 (- x y)) (- z t)) (* a 120.0))","link":"506-DataColourRGBhslsvfromcolour233B","name":"Data.Colour.RGB:hslsv from colour-2.3.3, B","output":"(fma 60.0 (/ (- y x) (- t z)) (* a 120.0))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (/ (* 60.0 (- x y)) (- z t)) (* a 120.0))","start":0.4432924812503606,"start-est":0.4140625,"status":"eq-target","target":0.1616156015629507,"target-prog":"(+ (/ 60.0 (/ (- z t) (- x y))) (* a 120.0))","time":12618.48388671875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 7.682842948876234) (8136 0.8423217515334126) ())","end":0.8423217515334126,"end-est":0.8714319563455579,"identifier":"#f","input":"(/ (- (* x y) (* z t)) a)","link":"507-DataColourMatrixinversefromcolour233B","name":"Data.Colour.Matrix:inverse from colour-2.3.3, B","output":"(if (<= (- (* x y) (* z t)) (- INFINITY)) (fma -1.0 (/ t (/ a z)) (/ y (/ a x))) (if (<= (- (* x y) (* z t)) 1e+208) (- (/ (* x y) a) (/ (* z t) a)) (fma -1.0 (/ t (/ a z)) (/ y (/ a x)))))","pre":"TRUE","prec":"binary64","preprocess":"((sort x y))","spec":"(/ (- (* x y) (* z t)) a)","start":7.682842948876234,"start-est":8.113619456345557,"status":"gt-target","target":6.314529086246118,"target-prog":"(if (< z -2.468684968699548e+170) (- (* (/ y a) x) (* (/ t a) z)) (if (< z 6.309831121978371e-71) (/ (- (* x y) (* z t)) a) (- (* (/ y a) x) (* (/ t a) z))))","time":11907.604248046875,"vars":["x","y","z","t","a"]},{"bits":128,"conversions":[],"cost-accuracy":"((1856 12.246065045296728) (12680 2.568116924984135) ())","end":2.568116924984135,"end-est":2.125453680310017,"identifier":"#f","input":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i))))","link":"508-DataColourMatrixdeterminantfromcolour233A","name":"Data.Colour.Matrix:determinant from colour-2.3.3, A","output":"(if (<= (+ (+ (* x (- (* y z) (* t a))) (* b (- (* t i) (* z c)))) (* j (- (* a c) (* y i)))) (- INFINITY)) (+ (+ (- (* y (* x z)) (* a (* x t))) (- (* i (* t b)) (* c (* z b)))) (- (* c (* a j)) (* i (* y j)))) (if (<= (+ (+ (* x (- (* y z) (* t a))) (* b (- (* t i) (* z c)))) (* j (- (* a c) (* y i)))) 1e+308) (+ (* j (- (* a c) (* y i))) (+ (* x (- (* y z) (* t a))) (- (* b (- (* t i) (* z c))) (* b (fma (- i) t (* t i)))))) (+ (+ (- (* y (* x z)) (* a (* x t))) (- (* i (* t b)) (* c (* z b)))) (- (* c (* a j)) (* i (* y j))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i))))","start":12.246065045296728,"start-est":11.863734930310017,"status":"gt-target","target":19.91702202619112,"target-prog":"(if (< x -1.469694296777705e-64) (+ (- (* x (- (* y z) (* t a))) (/ (* b (- (pow (* c z) 2.0) (pow (* t i) 2.0))) (+ (* c z) (* t i)))) (* j (- (* c a) (* y i)))) (if (< x 3.2113527362226803e-147) (- (* (- (* b i) (* x a)) t) (- (* z (* c b)) (* j (- (* c a) (* y i))))) (+ (- (* x (- (* y z) (* t a))) (/ (* b (- (pow (* c z) 2.0) (pow (* t i) 2.0))) (+ (* c z) (* t i)))) (* j (- (* c a) (* y i))))))","time":18782.060791015625,"vars":["x","y","z","t","a","b","c","i","j"]},{"bits":128,"conversions":[],"cost-accuracy":"((576 0.17946936093777044) (6848 0.1877712406251803) ())","end":0.1877712406251803,"end-est":0.16796875,"identifier":"#f","input":"(* (* (- x (/ 16.0 116.0)) 3.0) y)","link":"509-DataColourCIEcieLABfromcolour233A","name":"Data.Colour.CIE:cieLAB from colour-2.3.3, A","output":"(fma -0.41379310344827586 y (* x (* y 3.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* (- x (/ 16.0 116.0)) 3.0) y)","start":0.17946936093777044,"start-est":0.421875,"status":"eq-target","target":0.17299060156295074,"target-prog":"(* y (- (* x 3.0) 0.41379310344827586))","time":4756.634765625,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 37.47114107018761) (19520 0.3831462406251803) ())","end":0.3831462406251803,"end-est":0.36328125,"identifier":"#f","input":"(sqrt (/ (+ (+ (* x x) (* y y)) (* z z)) 3.0))","link":"510-DataArrayRepaAlgorithmsPixeldoubleRmsOfRGB8fromrep","name":"Data.Array.Repa.Algorithms.Pixel:doubleRmsOfRGB8 from repa-algorithms-3.4.0.1","output":"(* (hypot y (hypot z x)) (sqrt 0.3333333333333333))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(sqrt (/ (+ (+ (* x x) (* y y)) (* z z)) 3.0))","start":37.47114107018761,"start-est":39.95306546081924,"status":"gt-target","target":25.233905209717598,"target-prog":"(if (< z -6.396479394109776e+136) (/ (- z) (sqrt 3.0)) (if (< z 7.320293694404182e+117) (/ (sqrt (+ (+ (* z z) (* x x)) (* y y))) (sqrt 3.0)) (* (sqrt 0.3333333333333333) z)))","time":6516.048828125,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 0.14094812031259013) (832 0.007823120312590144) ())","end":0.007823120312590144,"end-est":0.0078125,"identifier":"#f","input":"(/ (* 4.0 (- (- x y) (* z 0.5))) z)","link":"511-DataArrayRepaAlgorithmsColorRamprampColorHotToCold","name":"Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, B","output":"(+ (+ (* -4.0 (/ y z)) (* 4.0 (/ x z))) -2.0)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* 4.0 (- (- x y) (* z 0.5))) z)","start":0.14094812031259013,"start-est":0.52734375,"status":"eq-target","target":0.008073120312590144,"target-prog":"(- (* 4.0 (/ x z)) (+ 2.0 (* 4.0 (/ y z))))","time":5991.629638671875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7232 0.2867830828133113) (13504 0.04164624062518029) ())","end":0.04164624062518029,"end-est":0.0234375,"identifier":"#f","input":"(/ (* 6.0 (- x 1.0)) (+ (+ x 1.0) (* 4.0 (sqrt x))))","link":"512-DataApproximateNumericsblogfromapproximate0221","name":"Data.Approximate.Numerics:blog from approximate-0.2.2.1","output":"(* 6.0 (/ (+ x -1.0) (+ (fma 4.0 (sqrt x) x) 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* 6.0 (- x 1.0)) (+ (+ x 1.0) (* 4.0 (sqrt x))))","start":0.2867830828133113,"start-est":0.12337875976844201,"status":"eq-target","target":0.05408740625180288,"target-prog":"(/ 6.0 (/ (+ (+ x 1.0) (* 4.0 (sqrt x))) (- x 1.0)))","time":5876.928955078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((448 5.971562857619223) (6720 0.081125) ())","end":0.081125,"end-est":0.0859375,"identifier":"#f","input":"(+ x (/ (* y y) z))","link":"513-CryptoRandomTestcalculatefromcryptorandom009","name":"Crypto.Random.Test:calculate from crypto-random-0.0.9","output":"(fma y (/ y z) x)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ x (/ (* y y) z))","start":5.971562857619223,"start-est":7.750146742879403,"status":"eq-target","target":0.08294812031259015,"target-prog":"(+ x (* y (/ y z)))","time":7056.309326171875,"vars":["x","y","z"]},{"bits":128,"conversions":[],"cost-accuracy":"((7296 47.872308900959645) (34440 3.31216571654386) ())","end":3.31216571654386,"end-est":3.330192783995385,"identifier":"#f","input":"(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))","link":"514-CompoundInterest","name":"Compound Interest","output":"(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 20000.0) (* n (* 100.0 (/ (expm1 (log (pow (+ 1.0 (/ i n)) n))) i))) (* 100.0 (fma (* i n) (+ 0.5 (/ -0.5 n)) n))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))","start":47.872308900959645,"start-est":49.622052959550196,"status":"gt-target","target":47.77176725740332,"target-prog":"(* 100.0 (/ (- (exp (* n (if (== (+ 1.0 (/ i n)) 1.0) (/ i n) (/ (* (/ i n) (log (+ 1.0 (/ i n)))) (- (+ (/ i n) 1.0) 1.0))))) 1.0) (/ i n)))","time":18754.23779296875,"vars":["i","n"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.316150161480284) (21592 10.865767834856015) ())","end":10.865767834856015,"end-est":6.522943946310735,"identifier":"#f","input":"(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))","link":"515-Complexdivisionrealpart","name":"Complex division, real part","output":"(if (<= d -2.4726165134202595e+88) (fma (/ c d) (/ a d) (/ b d)) (if (<= d -5e-192) (/ (/ (- (fma c a (* d b))) (hypot c d)) (- (hypot c d))) (if (<= d 1.809803726156943e-112) (fma (/ (/ d c) c) b (/ a c)) (if (<= d 9.289846252076942e-42) (fma (/ c (fma d d (* c c))) a (/ (* d b) (fma d d (* c c)))) (if (<= d 4.198122818087778e-25) (fma (/ (/ d c) c) b (/ a c)) (if (<= d 3.1198454695800192e+128) (/ (/ (- (fma c a (* d b))) (hypot c d)) (- (hypot c d))) (/ (- (* 0.5 (* (* (/ c d) (/ c d)) (fma (/ c d) a b))) (fma (/ c d) a b)) (- (hypot c d)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))","start":26.316150161480284,"start-est":25.700878010057604,"status":"lt-target","target":0.4089810498918768,"target-prog":"(if (< (fabs d) (fabs c)) (/ (+ a (* b (/ d c))) (+ c (* d (/ d c)))) (/ (+ b (* a (/ c d))) (+ d (* c (/ c d)))))","time":9936.1513671875,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 26.2216266805803) (72848 13.196316397954616) ())","end":13.196316397954616,"end-est":9.077570122381957,"identifier":"#f","input":"(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))","link":"516-Complexdivisionimagpart","name":"Complex division, imag part","output":"(if (<= d -1.327275917793868e+105) (fma (/ b d) (/ c d) (/ (- a) d)) (if (<= d -1e-145) (/ (fma d (- a) (* b c)) (fma c c (* d d))) (if (<= d 1.1596656669673977e-106) (- (/ b c) (* (/ d (* c c)) (+ a (* d (/ b c))))) (if (<= d 2.1608699030679302e+101) (* (- (* d a) (* b c)) (/ 1.0 (- (pow (hypot d c) 2.0)))) (+ (- (/ (* (/ b d) c) d) (/ a d)) (fma (- (cbrt (/ a d))) (/ (pow (cbrt a) 2.0) (pow (cbrt d) 2.0)) (* (cbrt (/ a d)) (/ (pow (cbrt a) 2.0) (pow (cbrt d) 2.0)))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))","start":26.2216266805803,"start-est":28.5832726450607,"status":"lt-target","target":0.4379119350940227,"target-prog":"(if (< (fabs d) (fabs c)) (/ (- b (* a (/ d c))) (+ c (* d (/ d c)))) (/ (+ (- a) (* b (/ c d))) (+ d (* c (/ c d)))))","time":10442.078857421875,"vars":["a","b","c","d"]},{"bits":128,"conversions":[],"cost-accuracy":"((704 9.154145799811271) (704 0.05959392012386208) ())","end":0.05959392012386208,"end-est":0.0390625,"identifier":"#f","input":"(/ (* x (+ (/ x y) 1.0)) (+ x 1.0))","link":"517-CodecPictureTypestoneMappingfromJuicyPixels3261","name":"Codec.Picture.Types:toneMapping from JuicyPixels-3.2.6.1","output":"(* (+ 1.0 (/ x y)) (/ x (+ 1.0 x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (* x (+ (/ x y) 1.0)) (+ x 1.0))","start":9.154145799811271,"start-est":11.056972509768443,"status":"eq-target","target":0.11277079981127196,"target-prog":"(* (/ x 1.0) (/ (+ (/ x y) 1.0) (+ x 1.0)))","time":5291.069580078125,"vars":["x","y"]},{"bits":128,"conversions":[],"cost-accuracy":"((14400 46.159792936678315) (53248 45.710565254526024) ())","end":45.710565254526024,"end-est":43.50169145146266,"identifier":"#f","input":"(* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0)))","link":"518-CodecPictureJpgFastDctreferenceDctfromJuicyPixels3","name":"Codec.Picture.Jpg.FastDct:referenceDct from JuicyPixels-3.2.6.1","output":"(* x (* (* (pow (cbrt (cos (+ (* (* z t) (* y 0.125)) (* (* z t) 0.0625)))) 2.0) (cbrt (cos (* z (* t (fma y 0.125 0.0625)))))) (cos (* (fma 0.125 a 0.0625) (* t b)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0)))","start":46.159792936678315,"start-est":44.47997146423429,"status":"eq-start","target":44.35025647770716,"target-prog":"(* x (cos (* (/ b 16.0) (/ t (+ (- 1.0 (* a 2.0)) (pow (* a 2.0) 2.0))))))","time":19338.634765625,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(sqrt (* (* (* (/ (+ (+ a b) c) 2.0) (- (/ (+ (+ a b) c) 2.0) a)) (- (/ (+ (+ a b) c) 2.0) b)) (- (/ (+ (+ a b) c) 2.0) c)))","link":"519-Areaofatriangle","name":"Area of a triangle","output":"#f","pre":"(and (and (and (< 0.0 a) (< a (+ b c))) (and (< 0.0 b) (< b (+ a c)))) (and (< 0.0 c) (< c (+ a b))))","prec":"binary64","preprocess":"()","spec":"(sqrt (* (* (* (/ (+ (+ a b) c) 2.0) (- (/ (+ (+ a b) c) 2.0) a)) (- (/ (+ (+ a b) c) 2.0) b)) (- (/ (+ (+ a b) c) 2.0) c)))","start":false,"start-est":false,"status":"error","target":false,"target-prog":"(/ (sqrt (* (* (* (+ a (+ b c)) (- c (- a b))) (+ c (- a b))) (+ a (- b c)))) 4.0)","time":544.984130859375,"vars":["a","b","c"]},{"bits":128,"conversions":[],"cost-accuracy":"((1344 27.027544708938994) (16712 0.2626235583164764) ())","end":0.2626235583164764,"end-est":0.08984375,"identifier":"#f","input":"(/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y))","link":"520-AIClusteringHierarchicalInternalwardfromclustering","name":"AI.Clustering.Hierarchical.Internal:ward from clustering-0.2.1","output":"(if (<= (/ (- (+ (* (+ x y) z) (* (+ y t) a)) (* y b)) (+ y (+ x t))) -2e+16) (+ (/ (- z b) (/ (+ x (+ y t)) y)) (fma a (+ (/ y (+ x (+ y t))) (/ t (+ x (+ y t)))) (* z (/ x (+ x (+ y t)))))) (if (<= (/ (- (+ (* (+ x y) z) (* (+ y t) a)) (* y b)) (+ y (+ x t))) 1e-85) (/ (fma y (- z b) (fma (+ y t) a (* x z))) (+ x (+ y t))) (+ (/ (- z b) (/ (+ x (+ y t)) y)) (fma a (+ (/ y (+ x (+ y t))) (/ t (+ x (+ y t)))) (* z (/ x (+ x (+ y t))))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y))","start":27.027544708938994,"start-est":26.6015625,"status":"gt-target","target":11.512131690013476,"target-prog":"(if (< (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) -3.5813117084150564e+153) (- (+ z a) b) (if (< (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)) 1.2285964308315609e+82) (/ 1.0 (/ (+ (+ x t) y) (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)))) (- (+ z a) b)))","time":10145.979248046875,"vars":["x","y","z","t","a","b"]},{"bits":128,"conversions":[],"cost-accuracy":"((960 9.979184443831281) (28296 0.21753515210489888) ())","end":0.21753515210489888,"end-est":0.0078125,"identifier":"#f","input":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","link":"521-3fracproblem333","name":"3frac (problem 3.3.3)","output":"(if (<= (+ (+ (/ 1.0 (+ 1.0 x)) (/ -2.0 x)) (/ 1.0 (+ x -1.0))) -1.0) (+ (log1p (expm1 (/ 1.0 (+ 1.0 x)))) (+ (/ 1.0 (+ x -1.0)) (/ -2.0 x))) (if (<= (+ (+ (/ 1.0 (+ 1.0 x)) (/ -2.0 x)) (/ 1.0 (+ x -1.0))) 2e-23) (fma (pow x -5.0) 2.0 (* 2.0 (+ (pow x -3.0) (pow x -7.0)))) (fma -2.0 (/ 1.0 x) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))","start":9.979184443831281,"start-est":12.036934610869558,"status":"eq-target","target":0.31792640117529786,"target-prog":"(/ 2.0 (* x (- (* x x) 1.0)))","time":7400.01025390625,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 36.70583863343202) (143880 0.3968934524260429) ())","end":0.3968934524260429,"end-est":0.25564445698373583,"identifier":"#f","input":"(- (tan (+ x eps)) (tan x))","link":"522-2tanproblem332","name":"2tan (problem 3.3.2)","output":"(if (<= eps -2751.9552440301595) (- (/ (+ (tan x) (tan eps)) (fma (tan eps) (- (tan x)) 1.0)) (tan x)) (if (<= eps 1.3839758794450668e-5) (+ (/ (/ (sin eps) (cos eps)) (- 1.0 (cbrt (pow (* (tan x) (tan eps)) 3.0)))) (+ (* eps (/ (pow (sin x) 2.0) (pow (cos x) 2.0))) (- (/ eps (/ (pow (/ (cos x) (sin x)) 3.0) eps)) (* (pow eps 3.0) (- (* (/ (pow (sin x) 2.0) (pow (cos x) 2.0)) -0.3333333333333333) (/ (pow (sin x) 4.0) (pow (cos x) 4.0))))))) (fma (+ (tan x) (tan eps)) (/ 1.0 (- 1.0 (* (tan x) (tan eps)))) (- (tan x)))))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (tan (+ x eps)) (tan x))","start":36.70583863343202,"start-est":36.998164889221236,"status":"gt-target","target":14.942525069954634,"target-prog":"(/ (sin eps) (* (cos x) (cos (+ x eps))))","time":13767.526611328125,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 29.485905139390646) (26048 0.2677466218117658) ())","end":0.2677466218117658,"end-est":0.16634750976844204,"identifier":"#f","input":"(- (sqrt (+ x 1.0)) (sqrt x))","link":"523-2sqrtexample31","name":"2sqrt (example 3.1)","output":"(pow (pow (+ (sqrt (+ 1.0 x)) (sqrt x)) 2.0) -0.5)","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sqrt (+ x 1.0)) (sqrt x))","start":29.485905139390646,"start-est":29.550838072395354,"status":"eq-target","target":0.16330676718957327,"target-prog":"(/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))","time":6236.705078125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 36.66542479045659) (32448 0.36110995036081234) ())","end":0.36110995036081234,"end-est":0.2473010024447221,"identifier":"#f","input":"(- (sin (+ x eps)) (sin x))","link":"524-2sinexample33","name":"2sin (example 3.3)","output":"(fma (sin eps) (cos x) (* (+ (cos eps) -1.0) (sin x)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (sin (+ x eps)) (sin x))","start":36.66542479045659,"start-est":39.03764548659487,"status":"gt-target","target":15.13819771710684,"target-prog":"(* 2.0 (* (cos (+ x (/ eps 2.0))) (sin (/ eps 2.0))))","time":11947.06640625,"vars":["x","eps"]},{"bits":128,"conversions":[],"cost-accuracy":"((13376 19.654707469406077) (26688 0.11400488750216353) ())","end":0.11400488750216353,"end-est":0.127285009768442,"identifier":"#f","input":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","link":"525-2isqrtexample36","name":"2isqrt (example 3.6)","output":"(* (/ (pow x -0.5) (+ (pow x -0.5) (pow (+ x 1.0) -0.5))) (/ (pow x -0.5) (+ x 1.0)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))","start":19.654707469406077,"start-est":19.043520886594113,"status":"eq-target","target":0.6997360186822369,"target-prog":"(/ 1.0 (+ (* (+ x 1.0) (sqrt x)) (* x (sqrt (+ x 1.0)))))","time":7610.52001953125,"vars":["x"]},{"bits":128,"conversions":[],"cost-accuracy":"((13120 15.227306234798364) (13184 0.32565005567569955) ())","end":0.32565005567569955,"end-est":0.5023029195020046,"identifier":"#f","input":"(- (atan (+ N 1.0)) (atan N))","link":"526-2atanexample35","name":"2atan (example 3.5)","output":"(atan2 1.0 (+ 1.0 (fma N N N)))","pre":"TRUE","prec":"binary64","preprocess":"()","spec":"(- (atan (+ N 1.0)) (atan N))","start":15.227306234798364,"start-est":14.363011632544486,"status":"eq-target","target":0.3295250556756995,"target-prog":"(atan (/ 1.0 (+ 1.0 (* N (+ N 1.0)))))","time":5595.193115234375,"vars":["N"]},{"bits":128,"conversions":[],"cost-accuracy":"()","end":false,"end-est":false,"identifier":"#f","input":"(- (/ x0 (- 1.0 x1)) x0)","link":"527-x01x1x0","name":"(- (/ x0 (- 1 x1)) x0)","output":"#f","pre":"(or (and (== x0 1.855) (== x1 0.000209)) (and (== x0 2.985) (== x1 0.0186)))","prec":"binary64","preprocess":"()","spec":"(- (/ x0 (- 1.0 x1)) x0)","start":false,"start-est":false,"status":"error","target":false,"target-prog":"(/ (* x0 x1) (- 1.0 x1))","time":14.228759765625,"vars":["x0","x1"]}]}